openapi: 3.0.0
info:
  version: '1.0'
  title: Craft Tracking System
  description: REST style service access for CTS
servers:
  - url: URL_HERE
    description: DESCRIPTION_HERE
    
paths:
  /agent:
    get:
      summary: Returns the list of craft reporting agents (reporting sources)
      description: Returns the list of craft reporting agents (reporting sources), like AIS, LRIT, FIS.
      responses:
        '200':    # status code
          description: OK
          content:
            application/xml:
              schema: 
                $ref: '#/components/schemas/agents'
            application/json:
              schema: 
                type: array
                items:
                  type: string
                  
  /craftType:
    get:
      summary: Returns the list of craft types
      description: Returns the list of craft types, like Vessel, Aircraft, Tracking Device, etc.
      responses:
        '200':    # status code
          description: OK
          content:
            application/xml:
              schema: 
                $ref: '#/components/schemas/craftTypes'
            application/json:
              schema: 
                type: array
                items:
                  type: string
                  
  /track:
    get:
      summary: Returns a list of tracks (craft with positions) according to position, time and other criteria
      description: Returns a list of track objects with craft identifiers and positions
      parameters: 
        - in: query
          name: startTimeInclusive
          description: start of the search time window, must be less than finishTimeExclusive
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: finishTimeExclusive
          description: finish of the search time window, must be greater than startTimeExclusive
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: identifierValue
          description: identifier values to filter on, no filtering if empty
          schema: 
            type: array
            items: 
              type: string
        - in: query
          name: craftType
          description: craft types to filter on, no filtering if empty
          schema:
            type: array
            items:
              type: string
        - in: query
          name: agent
          description: craft reporting agents to filter on, no filtering if empty
          schema:
            type: array
            items:
              type: string
        - in: query
          name: minLatInclusive
          description: southermost latitude of the bounding box, must be less than maxLatExclusive
          required: true
          schema: 
            type: number
            minimum: -90
            maximum: 90
        - in: query
          name: maxLatExclusive
          description: northernmost latitude of the bounding box, must be greater than minLatInclusive
          required: true
          schema:
            type: number
            minimum: -90
            maximum: 90
        - in: query
          name: minLonInclusive
          description: minimum longitude of the bounding box, must be less than maxLonExclusive
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
        - in: query
          name: maxLonExclusive
          description: maximum longitude of the bounding box, must be greater than minLonInclusive
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
        - in: query
          name: includeFixProperties
          description: includes fix properties if true otherwise does not
          schema:
            type: boolean
            default: true
        - in: query
          name: includeFixIdentifers
          description: includes fix identifiers if true otherwise does not
          schema:
            type: boolean
            default: false
      responses:
        '200':    # status code
          description: OK
          content:
            application/xml:
              schema: 
                $ref: '#/components/schemas/tracks'
                
  /craftpic:
    get:
      summary: Returns the predicted positions (using interpolation/extrapolation) at given time according to position and other criteria
      description: Returns a list of craft with position
      parameters: 
        - in: query
          name: time
          description: time to predict positions at
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: beforeHours
          description: hours before time to search for fixes
          required: true
          schema: 
            type: number
            minimum: 0
            default: 24
        - in: query
          name: afterHours
          description: hours after time to search for fixes
          required: true
          schema: 
            type: number
            minimum: 0
            default: 2          
        - in: query
          name: minLatInclusive
          description: southermost latitude of the bounding box, must be less than maxLatExclusive
          required: true
          schema: 
            type: number
            minimum: -90
            maximum: 90
        - in: query
          name: maxLatExclusive
          description: northernmost latitude of the bounding box, must be greater than minLatInclusive
          required: true
          schema:
            type: number
            minimum: -90
            maximum: 90
        - in: query
          name: minLonInclusive
          description: minimum longitude of the bounding box, must be less than maxLonExclusive
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
        - in: query
          name: maxLonExclusive
          description: maximum longitude of the bounding box, must be greater than minLonInclusive
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
        - in: query
          name: includeFixProperties
          description: includes fix properties if true otherwise does not
          schema:
            type: boolean
            default: true
        - in: query
          name: includeFixIdentifers
          description: includes fix identifiers if true otherwise does not
          schema:
            type: boolean
            default: false
      responses:
        '200':    # status code
          description: OK
          content:
            application/xml:
              schema: 
                $ref: '#/components/schemas/craftpic'

components:
  schemas:
  
    surname: 
      type: string
      
    person:
      properties:
        name: 
          type: string
        aliases:
          type: array
          items:
            type: string
        addresses:
          type: array
          items:
            type: object
            properties:
              number:
                type: string
              street:
                type: string
              suburb:
                type: string
              state:
                type: string
                enum:
                - ACT
                - NSW
                - QLD
                - TAS
                - NT
                - WA
                - VIC
                - SA                
      
    agents:
      properties:
        agents:
          type: array
          items:
            type: string
            xml: 
              name: 'agent'
      xml: 
        name: agents
            
    craftTypes:
      properties:
        craftTypes:
          type: array
          items:
            type: string
            xml:
              name: 'craftType'
      xml:
        name: craftTypes

    tracks: 
      properties:
        craftFixes: 
          type: array
          items:
            $ref: '#/components/schemas/craftFixes'
      xml:
        name: tracks
          
    craftpic:
      properties:
        craftFix:
          type: array
          items: 
            $ref: '#/components/schemas/craftFix'
          xml:
            name: 'craftFixes'
            wrapped: true
      xml:
        name: craftpic
            
    craftFix:
      properties:
        craftId:
          type: string
          maxLength: 512
          minLength: 1
          example: 43215678
          xml: 
            attribute: true
            name: craftId
        craftType:
          type: string
          maxLength: 512
          minLength: 1
          example: Vessel
          xml: 
            attribute: true
            name: craftType
        identifier:
          type: array
          items:
            $ref: '#/components/schemas/identifier'
          xml:
            name: identifiers
            wrapped: true
        fix:
          $ref: '#/components/schemas/fix'
      required:
      - craftId
      - craftType
      - fix
      xml:
        name: craftFix
              
    craftFixes:
      properties:
        craftId:
          type: string
          maxLength: 512
          minLength: 1
          example: 43215678
          xml: 
            attribute: true
            name: craftId
        craftType:
          type: string
          maxLength: 512
          minLength: 1
          example: Vessel
          xml:
            attribute: true
            name: craftType
        identifier:
          type: array
          items:
            $ref: '#/components/schemas/identifier'
          xml:
            name: identifiers
            wrapped: true
        fix:
          type: array
          items:
            $ref: '#/components/schemas/fix'
          xml:
            name: fixes
            wrapped: true
      required:
      - craftId
      - craftType
      xml:
        name: craftFixes
      

    identifier:      
      properties:
        key: 
          type: string
          minLength: 1
          example: MMSI
          xml:
            attribute: true
            name: key
        value:
          type: string
          example: '123456789'
          xml:
            attribute: true
            name: value
      required:
      - key
      - value
      xml:
        name: identifier

    property:
      properties:
        key: 
          type: string
          minLength: 1
          example: Name
          xml:
            attribute: true
            name: key
        value:
          type: string
          example: 'PACIFIC EXPLORER'
          xml:
            attribute: true
            name: value
      required:
      - key
      - value
      xml:
        name: property

    fix:
      properties:
        fixId: 
          type: string
          maxLength: 512
          minLength: 1
          example: '7654321'
          xml: 
            attribute: true
            name: fixId
        time: 
          type: string
          format: date-time
          example: '2020-11-17T14:08:18.123Z'
          xml:
            attribute: true
            name: time
        lat: 
          type: number
          minimum: -90.0
          maximum: 90.0
          example: -34.2
          xml:
            attribute: true
            name: lat
        lon: 
          type: number
          minimum: -180
          maximum: 180
          example: 140.0
          xml:
            attribute: true
            name: lon
        altitudeMetres: 
          type: number
          xml:
            attribute: true
            name: altitudeMetres
        cog: 
          type: number
          minimum: 0
          maximum: 360
          example: 345.0
          xml:
            attribute: true
            name: cog
        speedKots: 
          type: number
          minimum: 0.0
          example: 10.5
          xml: 
            attribute: true
            name: speedKnots
        agent: 
          type: string
          minLength: 1
          example: AIS
          xml: 
            attribute: true
            name: agent
        property: 
          type: array
          items: 
            $ref: '#/components/schemas/property'
            xml:
              name: property
          xml:
            name: properties
            wrapped: true
        identifier:
          type: array
          items: 
            $ref: '#/components/schemas/identifier'
          xml:
            name: identifiers
            wrapped: true
        closestActualFixTime: 
          type: string
          format: date-time
          xml:
            attribute: true
            name: closestActualFixTime
      required:
      - fixId
      - time
      - lat
      - lon
      - agent
      xml:
        name: fix

  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
      
security:
  - basicAuth: [] # applies to whole api
      