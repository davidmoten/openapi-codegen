openapi: 3.0.3
info:
  contact:
    email: support@marqeta.com
    name: Marqeta
  description: Marqeta's Core API endpoints, conveniently annotated to enable code
    generation (including SDKs), test cases, and documentation. Currently in beta.
  termsOfService: https://www.marqeta.com/api-terms
  title: Core API
  version: 3.0.8
servers:
  - url: /v3
tags:
  - description: Use the `/acceptedcountries` endpoint to manage the countries where
      you authorize your cardholders to transact.
    name: Accepted Countries
  - description: |-
      The account holder group is a Marqeta platform resource that allows you to configure multiple account holders (user and/or business resources) as a group.
      It allows certain settings to be selectively applied, depending on whether or not an account holder has passed verification (KYC).

      You associate an account holder with an account holder group using the optional `account_holder_group_token` field in the user or business resource.
      Any account holder that you do not explicitly associate with a group is automatically associated with the program's default account holder group.
      The default group's name is "Default account holder group", its token is `DEFAULT_AHG`, and its configuration uses the default configuration values.
    name: Account Holder Groups
  - description: |-
      An authorization control limits spending by specified users at specified merchants.
      You can limit spending at a single merchant or at a group of merchants, and you can limit spending by a single user, users with a particular card product, or all users.

      You can block spending at all merchants by default and then allow it for specific merchants, or you can allow spending at all merchants by default and block it at specific merchants.

      [TIP]
      See <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes.
    name: Authorization Controls
  - description: |-
      Auto reload enables you to automatically load a specified amount into an account when the account balance falls below a defined threshold.

      Auto reloads execute only when the account balance falls below the trigger value due to spending.
      They do not execute due to unloading of funds or because of lack of funds when a user or business is first created.

      You can define auto reloads at the level of an account holder, a card product, or a program.
      Each auto reload draws from a single funding source.

      In the case of auto reloads defined at more than one level, the following order of precedence (first to last) determines which auto reload is executed:

      . Account holder
      . Card product
      . Program
    name: Auto Reload
  - description: |-
      Use the `/balances` endpoint to retrieve the following general purpose account (GPA) balance details for a user or business:

      * *Ledger balance* - When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.
      When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.
      * *Available balance* - The ledger balance minus any authorized transactions that have not yet cleared.
      Also known as the cardholder's purchasing power.
      If you are using JIT Funding, this balance is usually 0.00.
      * *Cached balance* - Not currently used.
      * *Credit balance* - Not currently used.
      * *Pending credits* - ACH loads that have been accepted, but for which the funding time has not yet elapsed.
    name: Balances
  - description: |-
      Use the `/banktransfers` endpoint to move funds between your program funding or cardholder account and an external account over the ACH Network.
      This kind of bank transfer is also known as ACH origination.

      [NOTE]
      This feature is currently in beta and subject to change.
      It also requires additional activation steps.
      To learn more about the beta program for this feature and about activating it for your program, contact your Marqeta representative.

      You can create the following types of transfers:

      * *Push* funds from your program funding or cardholder account to an external account.
      * *Pull* funds from your external account into your program funding or cardholder account.

      You must have an existing bank account at a US bank to fund or receive funds from your Marqeta account.
      To add an external program funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/program/ach` endpoint to PUSH or PULL money from or to the Program Funding Account.
      To add an external account holder funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/ach` endpoint to PUSH or PULL money from or to the Cardholder Account.

      For more information on ACH funding, see <</developer-guides/ach-origination, ACH Origination>>.
    name: Funding via ACH (Beta)
  - name: internal
  - description: |-
      Use the `/bulkissuances` endpoint to order physical payment cards in bulk.

      For more information on cards, card products, and bulk card ordering, see <</developer-guides/about-cards, About Cards>>.

      Some attributes of the `bulkissuance` object can also be defined in an associated `card` or `cardproduct` object.
      If you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.
      The order of precedence is as follows:

      . `card`
      . `bulkissuance`
      . `cardproduct`

      Defining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.

      For more information on cards, see <</developer-guides/about-cards, About Cards>>.
    name: Bulk Card Orders
  - description: |-
      A business is a type of account holder that cannot directly hold cards, but can have parent/child relationships with card-holding users.
      A business can monitor and control card use by a specified group of users.
      Every business has a general purpose account (GPA).

      For information on how to create a user that has a child-to-parent hierarchical relationship to the business, see <</core-api/users#_create_user, Create User>>.

      [NOTE]
      A user can simultaneously be a child of a business and a parent of other users if the user is not configured to use the parent's account balances and the user's children are configured to use the parent's account balances.
      For more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: Businesses
  - description: Use the `/businesstransitions` endpoints to transition business resources
      between states, as well as to retrieve and list state changes for a business
      resource.
    name: Business Transitions
  - description: |-
      The card products resource represents the behavior and functionality of one or more cards (either physical or virtual).
      For example, attributes of the card product determine whether the associated cards can be used at an ATM and/or online and whether they are currently enabled.
      For physical cards, the card product determines color and other printing specifications for when the cards are manufactured and personalized.
      You can optionally associate authorization controls and/or velocity controls with card products to restrict where and how associated cards are used.

      If your program is Managed by Marqeta, then Marqeta will create the card products for your production environment.

      Some attributes of the `cardproduct` object can also be defined in an associated `bulkissuance` or `card` object.
      If you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.
      The order of precedence is as follows:

      . `card`
      . `bulkissuance`
      . `cardproduct`

      Defining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.

      For more information on cards, see <</developer-guides/about-cards, About Cards>>.
    name: Card Products
  - description: |-
      The `card` resource represents a payment card.
      Cards are derived from and controlled by the `cardproduct` resource.
      For more information on cards, see <</developer-guides/about-cards, About Cards>>.

      Some attributes of the `card` resource can be defined in an associated `bulkissuance` or `cardproduct` resource.
      If you define one of these attributes in more than one object, the order of precedence at fulfillment time is as follows:

      . `card`
      . `bulkissuance`
      . `cardproduct`

      Defining an attribute in an object with higher precedence overrides, but does not overwrite, the attribute in a lower-precedence object.
    name: Cards
  - description: Use the `/cardtransitions` API to set the state of an existing card.
    name: Card Transitions
  - description: |-
      Commando Mode is a fallback measure that ensures Gateway JIT-funded cards continue to function in the event that your system fails.
      If your system cannot respond to the JIT Funding request, the Marqeta platform makes a decision in your place based on defined business rules.
      The Marqeta platform stores any unsent webhooks for later transmission, ensuring that the card state and account balances on your system correspond with activity that occurred while Commando Mode was in effect.

      You can identify transactions that were funded while Commando Mode was in effect by examining the `subnetwork` field of the transaction record.

      * A `subnetwork` value of `GATEWAY_JIT` indicates that the transaction was funded through normal Gateway JIT Funding and that Commando Mode was not in effect at the time.
      * A value of `MANAGED_JIT` indicates that the transaction was funded while Commando Mode was in effect.
      In addition, the `standin_approved_by` field has a value of `COMMANDO_AUTO` or `COMMANDO_MANUAL` when Commando Mode is enabled for a transaction.

      When `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.
      When `COMMANDO_AUTO` is configured, Commando Mode is enabled only when a transaction times out or encounters an error.

      While Commando Mode is a form of Stand-in Processing (STIP), it is different than network STIP.
      Network STIP occurs when the card network cannot communicate with the Marqeta platform.
      Transactions handled by network STIP include the `standin_approved_by` field with a value of `NETWORK`.

      Commando Mode and Managed JIT Funding are functionally equivalent.
      See <</developer-guides/about-jit-funding, About Just-in-Time Funding>> for more information.

      [NOTE]
      Commando Mode requires additional configuration.
      To configure Commando Mode control sets, contact your Marqeta representative.
    name: Commando Mode
  - name: accepted countries
  - name: account holder groups
  - name: accounting
  - name: auth controls
  - name: authentications
  - name: auto reloads
  - name: balance APIs
  - name: balance caches
  - name: bank transfers
  - name: bulk issuances
  - name: business transitions
  - name: businesses
  - name: businessidentitycheck
  - name: caches
  - name: calculation schedules
  - name: card products
  - name: card transitions
  - name: cardholder balances
  - name: cards
  - name: chargebacks
  - name: clearing
  - name: commando modes
  - name: cron jobs
  - name: digital wallet provision requests
  - name: digital wallet token sync by dequeuer
  - name: digital wallet token transitions
  - name: digital wallet tokens
  - name: direct deposit accounts
  - name: direct deposits
  - name: fee transfers
  - name: fees
  - name: file processing
  - name: 'Find Original: Operations resolve Original Transactions for Auth service'
  - name: funding sources
  - name: gateways
  - name: Generic money transfers
  - name: GPA fund transfers
  - name: gpa orders
  - name: health checks
  - name: internal auth control check
  - name: internal cards
  - name: Internal Commando Mode APIs
  - name: internal config operations
  - name: internal cryptokeys
  - name: internal data rehydration
  - name: internal dwt
  - name: internal health
  - name: internal kyc
  - name: internal mcc groups
  - name: internal post jcard transactions
  - name: internal program configs
  - name: internal result codes
  - name: internal spend controls
  - name: internal system information
  - name: internal transactions
  - name: internal user validation
  - name: kyblog
  - name: kyc
  - name: mcc groups
  - name: merchantgroups
  - name: Operations for digital wallet token requestor maps
  - name: peer transfers
  - name: ping
  - name: pins
  - name: program
  - name: program configs
  - name: program reserve
  - name: program transfers
  - name: push to card
  - name: real time fee groups
  - name: simulate
  - name: token service gateway
  - name: transaction caches
  - name: transactions
  - name: 'transactions : Dispute transactions'
  - name: user transitions
  - name: users
  - name: velocity controls
  - name: web push provisioning
  - name: webhooks
  - description: |-
      A `fees` resource represents a monetary assessment against a user's general purpose account (GPA).
      Assessing a fee transfers funds from the user's GPA account to your program's fee account.
      By default, every user has a GPA account used for the funding of transfers.

      You can assess fees either post-transaction or in real time.
      Real-time fee assessment ensures the account has sufficient funds available to cover both the transaction amount and the fee before authorization of the transaction.
      To assess fees in real time, you must create a real-time fee group using the `/realtimefeegroups` endpoint.

      When assessing a post-transaction fee, you can either debit existing GPA funds, or pull in new funds from a funding source.
      To use existing GPA funds, use the `/feetransfers` endpoint.
      To pull in new funds, leverage the fees array in `/gpaorders`.

      [NOTE]
      If your program uses Gateway JIT Funding, you cannot assess fees.
    name: Fees
  - description: |-
      A fee transfer moves funds from the GPA of an account holder to your program's fee account.
      The transfer amount is determined by the fee that is assessed.
      The request returns an error if the GPA has insufficient funds to cover the fee (this behavior contrasts with assessing a fee using the `/gpaorders` endpoint, in which case the amount of the fee is loaded into the GPA from the funding source before the GPA is debited).
    name: Fee Transfers
  - description: |-
      The address resource is your billing address.
      An active address is required in order to use a payment card funding source.
      To associate an address with a funding source, use the same `user_token` or `business_token` for both resources.

      [NOTE]
      The `/users` and `/businesses` resources also have address fields.
      Those are used for other purposes, such as KYC identity verification or as shipping addresses for physical cards.
    name: Addresses
  - description: |-
      Use the `/fundingsources/ach` and `/fundingsources/paymentcard` endpoints to create account holder funding sources.
      A funding source enables access to funds outside of the Marqeta platform.

      For more information on users and businesses, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: Account Holder Funding Sources
  - description: |-
      Use the `/fundingsources/program` endpoint to create a program funding source.

      A program funding source represents a bank account from which funds are drawn for Managed Just-in-Time (JIT) Funding transactions.
      For more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.

      In the sandbox environment, each program funding source you create simulates funds for use in test transactions.
      In production environments, program funding sources are created by Marqeta and draw funds from a bank account you set up in conjunction with Marqeta.

      [NOTE]
      Your program funding source must be approved by Marqeta and the issuing bank.
      If you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.
      Contact Marqeta for more information.
    name: Program Funding Sources
  - description: |-
      Use the `/fundingsources/programgateway` endpoint to create a program gateway funding source.

      A program gateway funding source represents a bank account from which funds are drawn for Gateway Just-in-Time (JIT) Funding transactions.
      For more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.

      In a sandbox environment, you can create a program gateway funding source that simulates funds for use in test transactions.
      In a production environment, you must work with a Marqeta representative to define the bank account from which the program gateway funding source draws funds.

      [NOTE]
      If you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.
      Contact Marqeta for more information.
    name: Program Gateway Funding Sources
  - description: |-
      The `/gpaorders` endpoint moves funds from a funding source into an
      account holder's general-purpose account (GPA).

      GPA orders can also be used to move funds from an account holder's funding source into your program's fee account.

      GPA orders can be funded by the account holder or your program.
    name: GPA Orders
  - description: |-
      Use the `/kyc` endpoint to perform Know Your Customer (KYC) verification tasks for your account holders.

      This endpoint can only be used to perform KYC verification for individuals or businesses in the United States.

      For more information about KYC verification, see <</developer-guides/about-kyc, About KYC Verification>>.

      For more information about account holders, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: KYC Verification
  - description: |-
      A merchant category code (MCC) is a four-digit number assigned by card networks to a business based on the goods or services offered by the business.
      On the Marqeta platform, an MCC group defines a set of MCCs.
      You can include an MCC group within a spend control to limit user spending at a set of merchants.

      An MCC group also allows you to automatically increase authorization amounts and to control the expiration of authorizations for the specified MCCs.
      By default, these controls apply to all cards in your program.
      An MCC group authorization control can have exceptions defined at the card product level.

      See <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes.
    name: MCC Groups
  - description: |-
      Use the `/merchantgroups` endpoint to create, update, and retrieve groups of merchant identifiers (MIDs).
      You can use merchant groups for authorization controls and in card product configurations.
      For example, use a merchant group to create a <</core-api/authorization-controls#_create_a_merchant_mid_exemption, merchant exemption>> for a group of merchants rather than an individual merchant.
    name: Merchant Groups
  - name: Peer Transfers
  - description: Use the `/pins` endpoint to create, update, or reveal a personal
      identification number (PIN) for a card.
    name: PINs
  - description: Use the Program Reserve API to credit or debit your program reserve
      account, and to return program reserve balances and transactions.
    name: Program Reserve
  - name: Program Transfers
  - description: |-
      Marqeta enables you to assess fees in real time through the use of real-time fee groups.
      A real-time fee group is a collection of fees associated with an account holder group (and thereby associated with the users and businesses that are part of that account holder group).
      Real-time fee assessment ensures that associated accounts have sufficient funds available to cover both the transaction amount and the fee before authorization of a transaction.

      Before you create a real-time fee group, you must create the individual fees (using the `/fees` endpoint) and the account holder group with which you will associate the real-time fee group (using the `/accountholdergroups` endpoint).
      Each fee in the group must be applicable to a different transaction type.
      For example, one fee could assess $1 on authorization transactions while another assesses $2 on PIN-debit transactions.

      Use of real-time fee groups requires prior approval by Marqeta.
      If you are interested in using this feature for your card program, contact your Marqeta representative for more information.

      [NOTE]
      If your program uses Gateway JIT Funding, you cannot assess fees.
    name: Real-Time Fee Groups
  - description: |-
      The Marqeta platform facilitates the use of digital wallets for storing tokenized cards and making payments.
      The API provides endpoints that enable mobile applications to provision tokens into a digital wallet.
      It also provides endpoints for retrieving digital wallet tokens and for managing their lifecycle through state transitions.

      For an overview of digital wallet tokens, see <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>>.
    name: Digital Wallets Management
  - description: |-
      The `/transactions` resource represents the electronic messages that carry information used for payment processing.
      A transaction usually originates when a cardholder attempts to make a payment, either online or at a physical point of sale.

      You can receive information about transactions as they occur by configuring webhooks.
      Learn about configuring webhooks in the <</developer-guides/about-webhooks, About Webhooks>> guide.
      See the transaction events for which you can set up webhooks in the <</core-api/event-types, Event Types>> API reference page.

      You can also retrieve transactions associated with specific cards, merchants, and account holders using the endpoints described here.

      For an overview of transactions and the `transaction` object, including the complete list of <</developer-guides/about-transactions#_transaction_response_codes, transaction response codes>>, see <</developer-guides/about-transactions, About Transactions>>.

      [TIP]
      Use the `/transactions` endpoint to retrieve smaller datasets (up to one page).
      For best performance when requesting larger datasets, use the <</diva-api/introduction, DiVA API>>.
    name: Transactions
  - description: |-
      The `users` resource represents a person who accesses Marqeta-administered funds via a Marqeta card (whether physical or virtual).
      This endpoint enables you to create and manage users on the Marqeta platform.

      This resource stores user attributes such as name, address, and date of birth, as well as financial information such as balances.
      By default, every user automatically has a general purpose account (GPA) that is used for the funding of transfers and is therefore an `account holder`.
      Note that account balances reside at the account holder level — there are no separate `account` or `balance` objects.

      You can use the `/users` endpoint to create parent-child relationships between two users (where one user is the parent and the other is the child) or between a business and a user (where the business is the parent and the user is the child).
      This relationship provides reporting to the parent about how cards of children are used and enables the parent to monitor and even restrict card usage.

      [NOTE]
      A user can simultaneously be a child of a business and a parent of other users if the user is not configured to use a parent's account balances and the user's child is configured to use a parent's account balances.
      For more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: Users
  - description: Use the `/usertransitions` endpoints to transition `user` resources
      between states, as well as to retrieve and list state changes for a `user` resource.
    name: User Transitions
  - description: |-
      A velocity control limits how much users can spend.
      You can configure velocity controls to limit how much users can spend and the number of transactions they can make in a given span of time.
      You can apply velocity controls to a single user, to all users associated with a particular card product, or to all users in your program.

      Only Program Managers can create or modify program-wide velocity controls.
      A `POST` or `PUT` call from a role that does not have Program Manager permissions will receive a 403 error if its `association` field is null, or if it includes all of the fields in the request body.
      Avoid this by passing a valid `user_token` or `card_product_token` in the velocity control's `association` object, indicating that the request is specific to a user or card product, and not program-wide.
      You should also only include the specific fields you want to update, because a `PUT` or `POST` with values for all fields is interpreted as a change that requires Program Manager permissions.

      See <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control.

      [NOTE]
      Each program supports a maximum of 90 spend controls (velocity controls and <</core-api/authorization-controls, authorization controls>> combined).
    name: Velocity Controls
  - description: |-
      Webhooks are notifications about API events, sent as they occur.
      The Marqeta platform sends these notifications to an endpoint that is hosted in your environment and configured to receive and process them.

      Create a webhook object to represent your webhook endpoint.
      Configure it with the URL of your webhook endpoint and a set of credentials for accessing that endpoint.
      You can configure it to send notifications for a single event, a group of events by type, or all event types.
      To set up multiple webhook endpoints and route different types of event notifications to each, create multiple webhook objects and configure each to send a specific type of event notification to a specific endpoint.

      See <</developer-guides/about-webhooks, About Webhooks>> for information on notifications and a tutorial that walks you through the configuration of your webhook endpoint.

      See <</core-api/event-types, Event Types>> for reference documentation on the types of events that the Marqeta platform supports.

      [NOTE]
      Webhooks URLs are cached.
      Changes made on your webhook endpoint can take up to one hour to be applied.
    name: Webhooks
  - description: |-
      Use the account cards endpoints to create and retrieve credit cards that can access the credit line on a <</core-api/credit-accounts, credit account>>.

      Once a credit card is created, you can use the `/cards` endpoint to <</core-api/cards#putCardsToken, update the card>> or <</developer-guides/managing-lost-stolen-or-damaged-cards, manage lost, stolen, or damaged cards>>.

      To receive webhook notifications when card transition or card action events occur, see <</core-api/event-types#_card_transition_events, Card transition events>> and <</core-api/event-types#_card_action_events, Card action events>> in Event Types.
    name: Account Cards
  - description: |-
      Use the `/credit/accounts/{account_token}/rewards` endpoint to create a one-time reward on a <</core-api/credit-accounts, credit account>>.

      Creating a reward triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `REWARD` group.
      For more on reward journal entries, see <</developer-guides/about-credit-account-journal-entries#_rewards, Rewards>> in the About Credit Account Journal Entries guide.

      For the reward programs that are associated with a reward policy on a bundle, see <</core-api/reward-programs, Reward Programs>>.
    name: Account Rewards
  - description: |-
      Use the account transitions endpoints to create and retrieve account transitions on Marqeta's credit platform.
      An account transition occurs when a <</core-api/credit-accounts, credit account>> transitions to a new status.

      To receive webhook notifications when account transition events occur, see <</core-api/event-types#_credit_account_transition_events, Credit account transition events>> in Event Types.
    name: Account Transitions
  - description: |-
      Use the adjustments endpoints to create and retrieve account adjustments on Marqeta's credit platform.
      An account adjustment adjusts the amount of a <</core-api/credit-account-journal-entries, journal entry>> or account balance.

      Creating an adjustment triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `ADJUSTMENT` group.
      For more on adjustment journal entries, see <</developer-guides/about-credit-account-journal-entries#_adjustments, Adjustments>> in the About Credit Account Journal Entries guide.
    name: Adjustments
  - description: |-
      Use the credit balance refunds endpoint to issue a credit balance refund on <</core-api/credit-accounts, credit account>>.
      When an account balance is negative, a balance refund can be issued to bring the balance closer to 0.

      Creating a balance refund triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `BALANCE_REFUND` group.
      For more on balance refund journal entries, see <</developer-guides/about-credit-account-journal-entries#_credit_balance_refunds, Balance refunds>> in the About Credit Account Journal Entries guide.
    name: Balance Refunds
  - description: |-
      [NOTE]
      This feature is currently in limited-availability beta and subject to change.
      To learn more about the beta program for this feature, contact your Marqeta Customer Service representative.

      The bundles feature on Marqeta's credit platform enables you to create and manage bundles by choosing the specific policies that make up a bundle.
      A bundle must contain one document policy, credit product policy, fee policy, APR policy, and an optional reward policy.
      The configurations of each policy in a bundle determine the characteristics and attributes of the bundle's associated credit accounts, reward programs, disclosures, and more.
      For more on how to configure a policy, see <</core-api/policies, Policies>>.

      [IMPORTANT]
      ====
      To create and manage bundles, you must use the link:https://app.marqeta.com/[Marqeta Dashboard].
      For more on bundles in the dashboard, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.

      &#160; +

      The following endpoints are displayed for reference purposes only.
      ====
    name: Bundles (Beta)
  - description: |-
      Use the credit accounts endpoints to create and manage accounts on Marqeta's credit platform.
      A credit account centers around a single line of credit that can be accessed by one or more <</core-api/credit-cards, cards>>.
      An account's attributes, such as the credit limit, APR, and fees, are inherited from the <</core-api/policies, policies>> on its associated bundle.

      For more on accounts, see <</developer-guides/about-credit-accounts, About Credit Accounts>>.
    name: Credit Accounts
  - description: |-
      Use the credit disputes endpoints to create and manage disputes on a <</core-api/credit-accounts, credit account>>.

      For more on disputes, see <</developer-guides/about-credit-account-disputes, About Credit Account Disputes>>.

      Creating a dispute triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `DISPUTE` group.
      For more on dispute journal entries, see <</developer-guides/about-credit-account-journal-entries#_disputes, Disputes>> in the About Credit Account Journal Entries guide.
    name: Credit Disputes
  - description: |-
      [IMPORTANT]
      This feature is deprecated.
      It has been replaced by credit product policies, which is part of the bundles feature.
      For more on policies and bundles in a credit program, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard (Beta)>>.

      The credit products feature on Marqeta's credit platform enables you to create and manage a credit product and customize its characteristics, such as the credit line range and required fees or APRs.
      Credit product characteristics determine the behaviors and attributes of associated credit accounts.
      For more on credit products, see <</developer-guides/about-credit-products, About Credit Products>>.

      To receive webhook notifications when product transition events occur, see <</core-api/event-types#_credit_product_transition_events, Credit product transition events>> in Event Types.

      [IMPORTANT]
      ====
      To create and manage credit products, you must use the link:https://app.marqeta.com/[Marqeta Dashboard].
      For more, see <</developer-guides/credit-dashboard, Managing Credit Products in the Marqeta Dashboard>>.

      &#160; +

      The following endpoints are displayed for reference purposes only.
      ====
    name: Credit Products
  - description: |-
      Use the delinquency endpoints to retrieve details on a credit account's delinquency state and transitions.

      An account's delinquency state reflects whether an account is delinquent and past due on its payments or current and up to date on its payments.

      To receive webhook notifications when an account transitions between delinquent and current, see <</core-api/event-types#_credit_account_delinquency_transition_events, Credit account delinquency transition events>> in Event Types.
    name: Delinquency
  - description: |-
      Use the journal entries endpoints to retrieve journal entries made on an <</core-api/credit-accounts, account>> on Marqeta's credit platform.

      A journal entry is a record of an entry made on an account journal, such as a purchase transaction, fee, adjustment, and more.
      For more on the different types of journal entries, see <</developer-guides/about-credit-account-journal-entries, About Credit Account Journal Entries>>.

      Journal entries originate when a journal entry event occurs, such as a cardholder making a purchase or an account holder making a payment.
      To receive webhook notifications when journal entry events occur, see <</core-api/event-types#_credit_journal_entry_events, Credit journal entry events>> in Event Types.
    name: Journal Entries
  - description: |-
      [IMPORTANT]
      ====
      This feature is deprecated.
      It has been replaced by journal entries.

      &#160; +

      For documentation on journal entries, see:

      &#160; +

      * <</developer-guides/about-credit-account-journal-entries, About Credit Account Journal Entries>> - Developer guide
      * <</core-api/credit-account-journal-entries, Journal Entries>> - API reference
      * <</core-api/event-types#_credit_journal_entry_events, Credit journal entry event types>> - Webhook notifications.
      ====

      Use the `/credit/accounts/{account_token}/ledgerentries` endpoint to retrieve ledger entries made on an <</core-api/credit-accounts, account>> on Marqeta's credit platform.

      A ledger entry is a record of an entry made on an account ledger, such as a purchase transaction, fee, adjustment, and more.
      For more on the different types of ledger entries, see <</developer-guides/about-credit-account-ledger-entries, About Credit Account Ledger Entries>>.

      Ledger entries originate when a ledger entry event occurs, such as a cardholder making a purchase or an account holder making a payment.
      To receive webhook notifications when ledger entry events occur, see <</core-api/event-types#_credit_ledger_entry_events, Credit ledger entry events>> in Event Types.
    name: Ledger Entries
  - description: |-
      [NOTE]
      This feature is currently in limited-availability beta and subject to change.
      To learn more about the beta program for this feature, contact your Marqeta Customer Service representative.

      The Marqeta credit platform's policies feature enables you to customize the configurations of policies for documents (such as disclosures), credit products, fees, APRs, and rewards.
      You can choose the specific policies to add to a bundle that contain the exact configurations needed to launch a new credit program or help manage an existing one.
      The configurations of each policy in a bundle determine the characteristics and attributes of the bundle's associated credit accounts, reward programs, disclosures, and more.
      For more on how to create a bundle, see <</core-api/bundles, Bundles>>.

      [IMPORTANT]
      ====
      To create and manage policies, you must use the link:https://app.marqeta.com/[Marqeta Dashboard].
      For more on policies in the dashboard, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.

      &#160; +

      The following endpoints are displayed for reference purposes only.
      ====
    name: Policies (Beta)
  - description: |-
      Use the payment schedule endpoints to create and retrieve payment schedules and payment schedule transitions on a <</core-api/credit-accounts, credit account>>.

      A payment schedule allows you to schedule a one-time or recurring payment on a credit account.
      For more on payments, see <</developer-guides/about-credit-account-payments, About Credit Account Payments>>.

      To receive webhook notifications when ACH payment transition events occur, see <</core-api/event-types#_credit_account_payment_transition_events, Credit account payment transition events>> in Event Types.

      Making a payment on a payment schedule triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `PAYMENT` group.
      For more on payment journal entries, see <</developer-guides/about-credit-account-journal-entries#_payments, Payments>> in the About Credit Account Journal Entries guide.
    name: Payment Schedules
  - description: |-
      Use the  payment sources endpoint to link an external payment source to an <</core-api/credit-accounts, account>> on Marqeta's credit platform.
      This enables account holders to use the linked payment source to make payments toward their account balance.
    name: Payment Sources
  - description: |-
      Use the payments endpoints to create and retrieve payments made on a <</core-api/credit-accounts, credit account>>, release payment holds, or transition payment statuses.

      A payment is an amount paid toward an account balance to reduce the total amount owed on the account.
      For more on payments, see <</developer-guides/about-credit-account-payments, About Credit Account Payments>>.

      To receive webhook notifications when ACH payment transition events occur, see <</core-api/event-types#_credit_account_payment_transition_events, Credit account payment transition events>> in Event Types.

      Creating a payment triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `PAYMENT` group.
      For more on payment journal entries, see <</developer-guides/about-credit-account-journal-entries#_payments, Payments>> in the About Credit Account Journal Entries guide.
    name: Payments
  - description: |-
      Use the statements endpoints to retrieve statement information or statement files for a <</core-api/credit-accounts, credit account>>.

      An account statement contains a summary of account activity that occurred during a billing cycle.
      For more on statements, see <</developer-guides/about-credit-account-statements, About Credit Account Statements>>.

      To receive a webhook notification when a statement is created, see <</core-api/event-types#_credit_account_statement_event, Credit account statement event>> in Event Types.
    name: Statements
  - description: |-
      [NOTE]
      This feature is currently in limited-availability beta and subject to change.
      To learn more about the beta program for this feature, contact your Marqeta representative.

      Marqeta's credit platform's credit applications feature enables you to create and manage credit account applications and retrieve disclosures that you can show to an applicant during the application process.

      To receive webhook notifications when application transition events occur, see <</core-api/event-types#_credit_application_transition_events, Credit application transition events>> in Event Types.
    name: Applications
  - description: |-
      Use the `/credit/rewardprograms/{token}` endpoint to manage reward programs and track reward accruals on a credit account.
      The configurations for a reward program are defined in the <</developer-guides/credit-programs-dashboard#_creating_a_reward_policy, reward policy>> on the account's associated bundle.

      To receive webhook notifications when reward entry events occur, see <</core-api/event-types#_credit_reward_entry_events, Credit reward entry events>> in Event Types.
    name: Reward Programs (Beta)
  - description: |-
      Use the `/credit/rewardprograms/{token}/redemptions` endpoint to the manage reward redemptions on a credit account.
      A reward program's rules configuration specifies how rewards are redeemed and is defined in the <</developer-guides/credit-programs-dashboard#_creating_a_reward_policy, reward policy>> on the account's associated bundle.

      To receive webhook notifications when reward redemption transition events occur, see <</core-api/event-types#_credit_reward_redemption_transition_events, Credit reward redemption transition events>> in Event Types.
    name: Reward Redemptions (Beta)
paths:
  /acceptedcountries:
    get:
      description: Retrieve a list of `acceptedcountries` objects.
      operationId: getAcceptedcountries
      parameters:
        - description: Number of accepted countries objects to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Name of the accepted countries object.
          explode: true
          in: query
          name: name
          required: false
          schema:
            type: string
          style: form
        - description: Specifies if the accepted countries object is an allow list.
          explode: true
          in: query
          name: whitelist
          required: false
          schema:
            type: boolean
          style: form
        - description: Specifies the type of search you want to perform.
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.

            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.

            Prefix the field name with a hyphen (`-`) to sort in descending order.

            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedCountriesListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server failure
      summary: List accepted countries objects
      tags:
        - Accepted Countries
  /acceptedcountries/{token}:
    get:
      description: |-
        Retrieve a specific `acceptedcountries` object.
        Send a `GET` request to the `/acceptedcountries` endpoint to retrieve existing `acceptedcountries` object tokens.
      operationId: getAcceptedcountriesToken
      parameters:
        - description: Unique identifier of the accepted countries object.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accepted_countries_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Accepted countries object not found
        '500':
          content: {
            }
          description: Server failure
      summary: Retrieve an accepted countries object
      tags:
        - Accepted Countries
  /accountholdergroups:
    get:
      description: Use this endpoint to return an array of all account holder groups.
      operationId: getAccountholdergroups
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - config:
                      is_reloadable: true
                      kyc_required: ALWAYS
                      pre_kyc_controls:
                        balance_max: 500
                        cash_access_enabled: false
                        enable_non_program_loads: false
                        international_enabled: false
                        is_reloadable_pre_kyc: false
                    name: Account Holder Group 01
                    token: account_holder_group_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AccountHolderGroupListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List account holder groups
      tags:
        - Account Holder Groups
    post:
      description: Use this endpoint to create an account holder group.
      operationId: postAccountholdergroups
      requestBody:
        content:
          application/json:
            example:
              name: Account Holder Group 01
              token: account_holder_group_01
            schema:
              $ref: '#/components/schemas/account_holder_group_request'
        description: Account holder group object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                config:
                  is_reloadable: true
                  kyc_required: ALWAYS
                  pre_kyc_controls:
                    balance_max: 1000
                    cash_access_enabled: false
                    enable_non_program_loads: false
                    international_enabled: false
                    is_reloadable_pre_kyc: false
                name: Account Holder Group 01
                token: account_holder_group_01
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create account holder group
      tags:
        - Account Holder Groups
  /accountholdergroups/{token}:
    get:
      description: Use this endpoint to retrieve a specific account holder group.
      operationId: getAccountholdergroupsToken
      parameters:
        - description: Unique identifier of the account holder group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                config:
                  is_reloadable: true
                  kyc_required: ALWAYS
                  pre_kyc_controls:
                    balance_max: 1000
                    cash_access_enabled: false
                    enable_non_program_loads: false
                    international_enabled: false
                    is_reloadable_pre_kyc: false
                name: Account Holder Group 01
                token: account_holder_group_01
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Auto reload not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve account holder group
      tags:
        - Account Holder Groups
    put:
      description: |-
        Use this endpoint to update a specific account holder group.
        Only values of parameters in the request are modified; all others are left unchanged.

        To update a specific account holder group, send a `PUT` request to the `/accountholdergroups/{token}` endpoint.
        Use the `token` path parameter to specify the account holder group to update.
        Include the account holder group details to update in link:http://json.org[JSON, window="_blank"] format in the body of the request.
        [NOTE]
        While you can update account holder groups that you create, the default group is restricted and requires special permissions to update.
      operationId: putAccountholdergroupsToken
      parameters:
        - description: Unique identifier of the account holder group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              config:
                pre_kyc_controls:
                  balance_max: 500
            schema:
              $ref: '#/components/schemas/account_holder_group_update_request'
        description: Account holder group update object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_holder_group_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update account holder group
      tags:
        - Account Holder Groups
  /authcontrols:
    get:
      description: |-
        List all authorization controls associated with a specific user or card product, or list all authorization controls defined in your program.

        Include either a `user` or a `card_product` query parameter to indicate the user or card product whose associated authorization controls you want to retrieve (do not include both).

        To list all authorization controls for your program, omit the `user` and `card_product` query parameters from your request.
      operationId: getAuthcontrols
      parameters:
        - description: |-
            Unique identifier of the card product whose associated authorization controls you want to retrieve.

            Enter the string "null" to list authorization controls that are not associated with a card product.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the user whose associated authorization controls you want to retrieve.

            Enter the string "null" to list authorization controls that are not associated with a user.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    association:
                      user_token: my_user_01
                    merchant_scope:
                      mcc: '5111'
                    name: My Auth Control
                    token: my_authcontrol
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AuthControlListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List authorization controls
      tags:
        - Authorization Controls
    post:
      description: |-
        Limit where a user can make transactions to a single merchant or group of merchants.
        If multiple authorization controls apply to the same user, the limits of all controls are combined.
      operationId: postAuthcontrols
      requestBody:
        content:
          application/json:
            example:
              association:
                user_token: my_user_01
              merchant_scope:
                mid: '98765'
              name: My Auth Control
              token: my_authcontrol
            schema:
              $ref: '#/components/schemas/auth_control_request'
        description: Auth control object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                association:
                  user_token: my_user_01
                merchant_scope:
                  mid: '98765'
                name: My Auth Control
                token: my_authcontrol
              schema:
                $ref: '#/components/schemas/auth_control_response'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create authorization control
      tags:
        - Authorization Controls
  /authcontrols/exemptmids:
    get:
      description: Retrieve a list of all merchant (MID) exemptions.
      operationId: getAuthcontrolsExemptmids
      parameters:
        - description: |-
            Unique identifier of the card product whose associated MID exemptions you want to retrieve.

            Enter the string "null" to list MID exemptions that are not associated with a card product.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the user whose associated MID exemptions you want to retrieve.

            Enter the string "null" to list MID exemptions that are not associated with a user.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    created_time: 2022-07-03T13:22:07Z
                    last_modified_time: 2022-07-03T17:22:07Z
                    mid: '984226812886'
                    name: My Exempt Auth Control
                    token: my_exempt_authcontrol
                  - active: true
                    association:
                      card_product_token: my_card_product
                    created_time: 2022-07-03T17:22:07Z
                    last_modified_time: 2022-07-03T17:22:07Z
                    mid: '1234567891'
                    name: My Exempt Auth Control 2
                    token: my_exempt_authcontrol_2
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AuthControlExemptMidsListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List merchant identifier (MID) exemptions
      tags:
        - Authorization Controls
    post:
      description: |-
        Exempt an individual merchant from authorization controls by merchant identifier (MID).
        Transactions originating from this MID ignore any otherwise applicable authorization controls.

        [NOTE]
        You can create MID exemptions in your user sandbox.
        However, you must work with your Marqeta representative to create MID exemptions in a production environment.
      operationId: postAuthcontrolsExemptmids
      requestBody:
        content:
          application/json:
            example:
              association:
                card_product_token: my_card_product
              mid: '12345678901'
              name: my_exempt_mid
              token: my_exempt_token
            schema:
              $ref: '#/components/schemas/auth_control_exempt_mids_request'
        description: Auth control exempt MID object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                association:
                  card_product_token: my_card_product
                created_time: 2022-06-19T13:22:07Z
                last_modified_time: 2022-06-19T13:22:07Z
                mid: '12345678901'
                name: my_exempt_mid
                token: my_exempt_token
              schema:
                $ref: '#/components/schemas/auth_control_exempt_mids_response'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create a merchant identifier (MID) exemption
      tags:
        - Authorization Controls
  /authcontrols/exemptmids/{token}:
    get:
      description: Retrieve a merchant (MID) exemption.
      operationId: getAuthcontrolsExemptmidsToken
      parameters:
        - description: Unique identifier of the authorization control resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                association:
                  card_product_token: my_card_product
                created_time: 2022-06-19T13:22:07Z
                last_modified_time: 2022-06-19T13:22:07Z
                mid: '12345678901'
                name: my_exempt_mid
                token: my_exempt_token
              schema:
                $ref: '#/components/schemas/auth_control_exempt_mids_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Auth control exception MIDs not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve a merchant identifier (MID) exemption
      tags:
        - Authorization Controls
    put:
      description: Update a merchant identifier exemption.
      operationId: putAuthcontrolsExemptmidsToken
      parameters:
        - description: Unique identifier of the authorization control resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: '#/components/schemas/auth_control_exempt_mids_update_request'
        required: false
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update a merchant identifier (MID) exemption
      tags:
        - Authorization Controls
  /authcontrols/{token}:
    get:
      description: Retrieve a specific authorization control.
      operationId: getAuthcontrolsToken
      parameters:
        - description: |-
            Existing authorization control token.

            Send a `GET` request to `/authcontrols` to retrieve authorization control tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                association:
                  user_token: my_user_01
                merchant_scope:
                  mid: '98765'
                name: My Auth Control
                token: my_authcontrol
              schema:
                $ref: '#/components/schemas/auth_control_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Authorization control not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve authorization control
      tags:
        - Authorization Controls
    put:
      description: Update a specific authorization control.
      operationId: putAuthcontrolsToken
      parameters:
        - description: |-
            Existing authorization control token.

            Send a `GET` request to `/authcontrols` to retrieve authorization control tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              merchant_scope:
                mcc: '5111'
              token: my_authcontrol
            schema:
              $ref: '#/components/schemas/auth_control_update_request'
        description: Auth control object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                association:
                  user_token: my_user_01
                merchant_scope:
                  mcc: '5111'
                name: My Auth Control
                token: my_authcontrol
              schema:
                $ref: '#/components/schemas/auth_control_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update authorization control
      tags:
        - Authorization Controls
  /autoreloads:
    get:
      description: |-
        Use this endpoint to list auto reloads configured for the program or for a specific card product, user, or business.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getAutoreloads
      parameters:
        - description: Unique identifier of the card product whose auto reloads you
            want to retrieve.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: Unique identifier of the user whose auto reloads you want to
            retrieve.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: Unique identifier of the business whose auto reloads you want
            to retrieve.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: false
                    association:
                      user_token: my_user_01
                    created_time: 2022-11-10T22:15:20Z
                    currency_code: USD
                    funding_source_token: my_program_funding_source_01
                    last_modified_time: 2022-11-10T22:21:59Z
                    order_scope:
                      gpa:
                        reload_amount: 200.0
                        trigger_amount: 100.0
                    token: my_user_01_autoreload_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AutoReloadListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List auto reloads
      tags:
        - Auto Reload
    post:
      description: Use this endpoint to create an auto reload.
      operationId: postAutoreloads
      requestBody:
        content:
          application/json:
            example:
              active: false
              association:
                user_token: my_user_01
              currency_code: USD
              funding_source_token: my_program_funding_source_01
              order_scope:
                gpa:
                  reload_amount: 200.0
                  trigger_amount: 100.0
              token: my_user_01_autoreload_01
            schema:
              $ref: '#/components/schemas/auto_reload_model'
        description: Auto reload object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                active: false
                association:
                  user_token: my_user_01
                created_time: 2022-11-10T22:15:20Z
                currency_code: USD
                funding_source_token: my_program_funding_source_01
                last_modified_time: 2022-11-10T22:15:20Z
                order_scope:
                  gpa:
                    reload_amount: 200.0
                    trigger_amount: 100.0
                token: my_user_01_autoreload_01
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create auto reload
      tags:
        - Auto Reload
  /autoreloads/{token}:
    get:
      description: Use this endpoint to retrieve a specific auto reload object.
      operationId: getAutoreloadsToken
      parameters:
        - description: Unique identifier of the auto reload.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                active: false
                association:
                  user_token: my_user_01
                created_time: 2022-11-10T22:15:20Z
                currency_code: USD
                funding_source_token: my_program_funding_source_01
                last_modified_time: 2022-11-10T22:21:59Z
                order_scope:
                  gpa:
                    reload_amount: 200.0
                    trigger_amount: 100.0
                token: my_user_01_autoreload_01
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Auto reload not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve auto reload
      tags:
        - Auto Reload
    put:
      description: |-
        Use this endpoint to update an auto reload.
        Only values of parameters in the request are modified; all others are left unchanged.
      operationId: putAutoreloadsToken
      parameters:
        - description: Unique identifier of the auto reload.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              order_scope:
                gpa:
                  reload_amount: 500.0
                  trigger_amount: 250.0
            schema:
              $ref: '#/components/schemas/auto_reload_update_model'
        description: Auto reload object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                active: false
                association:
                  user_token: my_user_01
                created_time: 2022-11-10T22:15:20Z
                currency_code: USD
                funding_source_token: my_program_funding_source_01
                last_modified_time: 2022-11-10T22:25:00Z
                order_scope:
                  gpa:
                    reload_amount: 500.0
                    trigger_amount: 250.0
                token: my_user_01_autoreload_01
              schema:
                $ref: '#/components/schemas/auto_reload_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update auto reload
      tags:
        - Auto Reload
  /balances/{token}:
    get:
      description: |-
        Use this endpoint to return general purpose account (GPA) balances for a user or a business.
        The response object includes a link to balances of related user GPAs.
      operationId: getBalancesToken
      parameters:
        - description: Unique identifier of the user or business for which you want
            to return GPA balances.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                gpa:
                  available_balance: 990.0
                  balances:
                    USD:
                      available_balance: 990.0
                      currency_code: USD
                      ledger_balance: 1000.0
                      pending_credits: 0.0
                  currency_code: USD
                  ledger_balance: 1000.0
                  pending_credits: 0.0
                links:
                  href: /v3/balances/my_user_01/gpa
                  method: GET
                  rel: gpa
              schema:
                $ref: '#/components/schemas/cardholder_balances'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve GPA balances
      tags:
        - Balances
  /banktransfers/ach:
    get:
      description: Retrieve a list of all ACH transfers.
      operationId: getBanktransfersAch
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The unique identifier of the `user` resource.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the `business` resource.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the funding source.
          explode: true
          in: query
          name: funding_source_token
          required: false
          schema:
            type: string
          style: form
        - description: A comma-delimited list of bank transfer statuses.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            type: string
          style: form
        - description: Field on which to sort Use any field in the resource model,
            or one of the system fields `lastModifiedTime` or `createdTime`. Prefix
            the field name with a hyphen (`-`) to sort in descending order. Omit the
            hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: |-
            Returns the full funding source object when `fundingsource` is passed.
            Otherwise, returns the funding source token.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            type: string
          style: form
        - description: The funding source type to filter.
          explode: true
          in: query
          name: funding_source_type
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                created_time: 2021-03-22T18:01:00Z
                data:
                  - amount: 10.0
                    created_time: 2021-03-20T18:32:32Z
                    currency_code: USD
                    funding_source_token: d331b4b2-cef5-49a3-9c41-75d8f4e15cfz
                    last_modified_time: 2021-03-20T18:32:32Z
                    memo: Bank transfer
                    standard_entry_class_code: WEB
                    statement_descriptor: ACHTRNSFR
                    status: PENDING
                    token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                    transfer_speed: STANDARD
                    transitions:
                      - bank_transfer_token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                        channel: API
                        created_time: 2021-03-20T18:32:32Z
                        last_modified_time: 2021-03-20T18:32:32Z
                        reason: Created by `POST` call on API
                        status: PENDING
                        token: 0565329e-405d-45ca-9ab4-ca0cd07eca4c
                    type: PUSH
                  - amount: 100.0
                    currency_code: USD
                    funding_source_token: bbaefe8f-f5d0-43f6-8576-16f562d23f3f
                    standard_entry_class_code: WEB
                    statement_descriptor: ACHTRNSFR
                    status: PROCESSING
                    token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    transfer_speed: STANDARD
                    transitions:
                      - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                        channel: API
                        created_time: 2021-03-22T18:01:00Z
                        last_modified_time: 2021-03-22T18:01:00Z
                        reason: Created by `POST` call on API
                        status: PENDING
                        token: 1d208bf9-8439-4b35-9c43-6d5bc74995c7
                      - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                        channel: API
                        created_time: 2021-03-22T18:01:17Z
                        last_modified_time: 2021-03-22T18:01:17Z
                        reason: Created by `POST` call on API
                        status: PROCESSING
                        token: 55f5b1ac-39f6-484d-8284-116046a2efaa
                    type: PUSH
                end_index: 1
                is_more: false
                last_modified_time: 2021-03-22T18:01:17Z
                start_index: 0
              schema:
                $ref: '#/components/schemas/BankTransferListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List ACH transfers
      tags:
        - Funding via ACH (Beta)
    post:
      description: Create an ACH transfer that pushes funds to an external account
        or pulls funds into your program funding account.
      operationId: postBanktransfersAch
      requestBody:
        content:
          application/json:
            example:
              amount: 10.0
              currency_code: USD
              funding_source_token: d331b4b2-cef5-49a3-9c41-75d8f4e15cfz
              memo: Bank transfer
              standard_entry_class_code: WEB
              statement_descriptor: ACHTRNSFR
              transfer_speed: STANDARD
              type: PUSH
            schema:
              $ref: '#/components/schemas/bank_transfer_request_model'
        description: Create bank transfer request model
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                amount: 10.0
                created_time: 2021-03-20T18:32:32Z
                currency_code: USD
                funding_source_token: d331b4b2-cef5-49a3-9c41-75d8f4e15cfz
                last_modified_time: 2021-03-20T18:32:32Z
                memo: Bank transfer
                standard_entry_class_code: WEB
                statement_descriptor: ACHTRNSFR
                status: PENDING
                token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                transfer_speed: STANDARD
                transitions:
                  - bank_transfer_token: cf3b49d8-bd68-4fb1-8da5-c170cff3d788
                    channel: API
                    created_time: 2021-03-20T18:32:32Z
                    last_modified_time: 2021-03-20T18:32:32Z
                    reason: Created by `POST` call on API
                    status: PENDING
                    token: 0565329e-405d-45ca-9ab4-ca0cd07eca4c
                type: PUSH
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Create ACH transfer
      tags:
        - Funding via ACH (Beta)
  /banktransfers/ach/transitions:
    get:
      description: Retrieve a list of all ACH transfer transitions for a given ACH
        transfer.
      operationId: getBanktransfersAchTransitions
      parameters:
        - description: The number of bank transfer transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            maximum: 50
            type: integer
          style: form
        - description: The unique identifier of the bank transfer transition.
          explode: true
          in: query
          name: token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the bank transfer.
          explode: true
          in: query
          name: bank_transfer_token
          required: false
          schema:
            type: string
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort. Use any field in the resource model, or one of the system fields lastModifiedTime or createdTime.
            Prefix the field name with a hyphen (-) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Comma-delimited list of bank transfer states to display.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:00Z
                    last_modified_time: 2021-03-22T18:01:00Z
                    reason: Created by `POST` call on API
                    status: PENDING
                    token: 1d208bf9-8439-4b35-9c43-6d5bc74995c7
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:17Z
                    last_modified_time: 2021-03-22T18:01:17Z
                    reason: Created by `POST` call on API
                    status: PROCESSING
                    token: 55f5b1ac-39f6-484d-8284-116046a2efaa
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/BankTransferTransitionListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List ACH transfer transitions
      tags:
        - Funding via ACH (Beta)
    post:
      description: |-
        Create an ACH transfer transition that updates the `status` of an ACH transfer.

        Each ACH transfer has a lifecycle of statuses, as shown in the following diagram:

        [#banktransfers-1-image]
        image::achtransfers1[alt='ACH transfer lifecycle', width=575]

        [NOTE]
        You can create ACH transfer transitions in the sandbox environment.
        However, Marqeta transitions ACH transfers through their lifecycle in the production environment.
      operationId: postBanktransfersAchTransitions
      requestBody:
        content:
          application/json:
            example:
              bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
              channel: API
              status: CANCELLED
            schema:
              $ref: '#/components/schemas/bank_transfer_transition_request_model'
        description: Create bank transfer transition request model
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                channel: API
                created_time: 2021-10-22T18:01:17Z
                last_modified_time: 2021-10-22T18:01:17Z
                status: CANCELLED
                token: 55f5b1ac-39f6-484d-8284-116046a2efaa
              schema:
                $ref: '#/components/schemas/bank_transfer_transition_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Create ACH transfer transition
      tags:
        - Funding via ACH (Beta)
  /banktransfers/ach/{token}:
    get:
      description: Retrieve a specific ACH transfer.
      operationId: getBanktransfersAchToken
      parameters:
        - description: The unique identifier of the bank transfer.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 100.0
                created_time: 2021-03-22T18:01:00Z
                currency_code: USD
                funding_source_token: bbaefe8f-f5d0-43f6-8576-16f562d23f3f
                last_modified_time: 2021-03-22T18:01:17Z
                standard_entry_class_code: WEB
                statement_descriptor: ACHTRNSFR
                status: PROCESSING
                token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                transfer_speed: STANDARD
                transitions:
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:00Z
                    last_modified_time: 2021-03-22T18:01:00Z
                    reason: Created by `POST` call on API
                    status: PENDING
                    token: 1d208bf9-8439-4b35-9c43-6d5bc74995c7
                  - bank_transfer_token: f8b8245f-fc36-49f3-9f9f-f63b159501b7
                    channel: API
                    created_time: 2021-03-22T18:01:17Z
                    last_modified_time: 2021-03-22T18:01:17Z
                    reason: Created by `POST` call on API
                    status: PROCESSING
                    token: 55f5b1ac-39f6-484d-8284-116046a2efaa
                type: PUSH
              schema:
                $ref: '#/components/schemas/bank_transfer_response_model'
          description: Success
        '404':
          content: {
            }
          description: Bank transfer entry not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve ACH transfer
      tags:
        - Funding via ACH (Beta)
  /bulkissuances:
    get:
      description: |-
        Use this endpoint to list existing bulk card orders.

        This endpoint supports <</core-api/sorting-and-pagination, pagination and sorting>>.
      operationId: getBulkissuances
      parameters:
        - description: Number of bulk card orders to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data[]:
                  api: bulkissuances
                  bc_id: 1
                  cp_id: 1
                  endpoint: /bulkissuances
                  expedite: false
                  fulfillment:
                    shipping:
                      card_allocation: 3
                      card_fulfillment_time: 2022-08-07T23:59:44Z
                      card_personalization:
                        carrier:
                          message_line: my message
                          name: my_carrier_logo.png
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: Saki Dogger
                          name_line_2:
                            value: Aegis Fleet Services
                      card_product_token: my_card_product_02
                      created_time: 2020-08-06T00:06:34Z
                      expiration_offset:
                        unit: YEARS
                        value: 10
                      method: UPS_REGULAR
                      name_line1_end_index: 3
                      name_line1_start_index: 1
                      name_line_1_numeric_postfix: true
                      provider_ship_date: 2022-08-08T00:00:00Z
                      provider_shipping_method: United_Parcel_Service
                      provider_tracking_number: '982247'
                      recipient_address:
                        address1: 1255 Lake Street
                        city: Oakland
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        phone: '5103333333'
                        postal_code: '94611'
                        state: CA
                      return_address:
                        address1: 1222 Blake Street
                        city: Berkeley
                        country: USA
                        first_name: Shipping
                        last_name: R_US
                        phone: '5102222222'
                        postal_code: '94702'
                        state: CA
                      user_association:
                        single_inventory_user: false
                  method: get
                  token: bulk_06_token
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/BulkCardOrderListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List bulk card orders
      tags:
        - Bulk Card Orders
    post:
      description: |-
        Use this endpoint to order physical cards in bulk.
        A new bulk card order creates new cards or users, generally within about a day.

        Before creating a bulk card order, set the `config.fulfillment.bulk_ship` field of the associated card product to `true`.

        *To associate all cards with the same user:*

        * Set `user_association.single_inventory_user=true`
        * Set `user_association.single_inventory_user_token` equal to the token of an existing user.

        The bulk card order automatically populates the database with the specified card objects.
        Values for the card `token` fields are generated in the format `card-numericPostfix`, where `numericPostfix` is a randomly generated number that is added for each new card that is generated.

        *To associate each card with a unique user:*

        Set `user_association.single_inventory_user=false`.
        Both the cards and their associated users are automatically generated.
        Values for the user `token` fields are generated in the format `user-numericPostfix`.
        The `numericPostfix` values for cards and their associated users match.
        This value is also printed on the physical cards if the `name_line_1_numeric_postfix` field is set to `true`.
      operationId: postBulkissuances
      requestBody:
        content:
          application/json:
            example:
              card_allocation: 3
              card_product_token: my_card_product_02
              fulfillment:
                card_personalization:
                  carrier:
                    message_line: my message
                    name: my_carrier_logo.png
                  images:
                    card:
                      name: my_card_logo.png
                      thermal_color: Black
                    carrier_return_window:
                      name: my_return_address_image.png
                    signature:
                      name: my_signature.png
                  text:
                    name_line_1:
                      value: Saki Dogger
                    name_line_2:
                      value: Aegis Fleet Services
                shipping:
                  method: UPS_REGULAR
                  recipient_address:
                    address1: 1255 Lake Street
                    city: Oakland
                    country: USA
                    first_name: Saki
                    last_name: Dogger
                    phone: '5103333333'
                    postal_code: '94611'
                    state: CA
                  return_address:
                    address1: 1222 Blake Street
                    city: Berkeley
                    country: USA
                    first_name: Shipping
                    last_name: R_US
                    phone: '5102222222'
                    postal_code: '94702'
                    state: CA
              name_line_1_numeric_postfix: true
              token: bulk_06_token
              user_association:
                single_inventory_user: false
            schema:
              $ref: '#/components/schemas/bulk_issuance_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                api: bulkissuances
                bc_id: 1
                card_allocation: 3
                card_product_token: my_card_product_02
                cp_id: 1
                created_time: 2022-08-06T00:06:34Z
                endpoint: /bulkissuances
                expedite: false
                fulfillment:
                  card_personalization:
                    carrier:
                      message_line: my message
                      name: my_carrier_logo.png
                    carrier_return_window:
                      name: my_return_address_image.png
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                    signature:
                      name: my_signature.png
                    text:
                      name_line_1:
                        value: Saki Dogger
                      name_line_2:
                        value: Aegis Fleet Services
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1255 Lake Street
                      city: Oakland
                      country: USA
                      first_name: Saki
                      last_name: Dogger
                      phone: '5103333333'
                      postal_code: '94611'
                      state: CA
                    return_address:
                      address1: 1222 Blake Street
                      city: Berkeley
                      country: USA
                      first_name: Shipping
                      last_name: R_US
                      phone: '5102222222'
                      postal_code: '94702'
                      state: CA
                method: post
                token: bulk_06_token
                user_association:
                  expiration_offset:
                    unit: YEARS
                    value: 10
                  name_line_1_numeric_postfix: true
                  single_inventory_user: false
              schema:
                $ref: '#/components/schemas/bulk_issuance_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create bulk card order
      tags:
        - Bulk Card Orders
  /bulkissuances/{token}:
    get:
      description: Use this endpoint to retrieve a specific bulk card order.
      operationId: getBulkissuancesToken
      parameters:
        - description: The unique identifier of the bulk card order to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                api: bulkissuances
                bc_id: 1
                card_allocation: 3
                card_fulfillment_time: 2022-03-07T23:59:44Z
                card_product_token: my_card_product_02
                cp_id: 1
                created_time: 2022-03-06T00:06:34Z
                endpoint: /bulkissuances/{token}
                expedite: false
                expiration_offset:
                  unit: YEARS
                  value: 10
                fulfillment:
                  card_personalization:
                    carrier:
                      message_line: my message
                      name: my_carrier_logo.png
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: Saki Dogger
                      name_line_2:
                        value: Aegis Fleet Services
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1255 Lake Street
                      city: Oakland
                      country: USA
                      first_name: Saki
                      last_name: Dogger
                      phone: 510-333-3333
                      postal_code: '94611'
                      state: CA
                    return_address:
                      address1: 1222 Blake Street
                      city: Berkeley
                      country: USA
                      first_name: Shipping
                      last_name: R_US
                      phone: '5102222222'
                      postal_code: '94702'
                      state: CA
                method: get
                name_line1_end_index: 3
                name_line1_start_index: 1
                name_line_1_numeric_postfix: true
                provider_ship_date: 2022-03-08T00:00:00Z
                provider_shipping_method: United_Parcel_Service
                provider_tracking_number: '982247'
                token: bulk_06_token
                user_association:
                  single_inventory_user: false
              schema:
                $ref: '#/components/schemas/bulk_issuance_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Bulk issuance request not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve bulk card order
      tags:
        - Bulk Card Orders
  /businesses:
    get:
      description: |-
        To return an array of all businesses, send a `GET` request to the `/businesses` endpoint.

        To narrow your result set to businesses that match a particular legal or fictitious name, include the appropriate parameters from the following query parameters table.
        This endpoint also supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getBusinesses
      parameters:
        - description: The number of business resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Fictitious or "doing business as (DBA)" name of the business.
          explode: true
          in: query
          name: business_name_dba
          required: false
          schema:
            type: string
          style: form
        - description: Legal name of the business.
          explode: true
          in: query
          name: business_name_legal
          required: false
          schema:
            type: string
          style: form
        - description: Specifies the search type for the query.
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    business_name_dba: My_fictitious_business_name
                    business_name_legal: My_legal_business_name
                    business_type: My_business_type
                    created_time: 2022-10-18T21:17:03Z
                    date_established: 2010-04-15T00:01:00Z
                    duns_number: '123456789'
                    general_business_description: My_business_description
                    history: My_business_history
                    identifications:
                      - type: BUSINESS_TAX_ID
                        value: '123456789'
                    in_current_location_since: 2010-04-15T00:01:00Z
                    incorporation:
                      address_registered_under:
                        address1: 123 B Street
                        city: Oakland
                        country: US
                        postal_code: '94610'
                        state: CA
                      incorporation_type: LLC
                      is_public: true
                      name_registered_under: First Middle Last
                      state_of_incorporation: CA
                      stock_symbol: MB
                    international_office_locations: Athens, Greece; Buenos Aires,
                      Argentina
                    ip_address: 67.120.28.118
                    last_modified_time: 2022-10-19T22:48:02Z
                    notes: My notes
                    office_location:
                      address1: 123 A Street
                      address2: Suite 123
                      city: Oakland
                      country: US
                      postal_code: '94610'
                      state: CA
                    password: My_passw0rd
                    phone: '5105551215'
                    primary_contact:
                      department: My_department
                      email: dr_me@my_business.com
                      extension: '11'
                      fax: '5105551216'
                      full_name: First Middle Last
                      mobile: '5105551217'
                      phone: '5105551215'
                      title: Dr
                    proprietor_or_officer:
                      alternative_names: My Alternative Name
                      dob: 1985-01-08T00:00:00Z
                      email: mr.myself@my.business.com
                      first_name: First
                      home:
                        address1: 123 B Street
                        address2: Apt A
                        city: Oakland
                        country: US
                        postal_code: '94610'
                        state: CA
                      last_name: Last
                      middle_name: Middle
                      phone: '5105551211'
                      ssn: '5555'
                      title: Mr
                    status: ACTIVE
                    token: my_business_01
                    website: https://my_business.com
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/BusinessCardHolderListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List businesses
      tags:
        - Businesses
    post:
      description: |-
        Create a business.
        The initial status of a newly created business depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.

        [cols="1,1,1,1"]
        |===
        | KYC Required | Initial Business State | Business Active on Creation | Business Limitations

        | Always
        | `UNVERIFIED`
        | No
        | Cannot load funds.

        | Conditionally
        | `LIMITED`
        | No
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        | Never
        | `ACTIVE`
        | Required
        | None.
        |===

        To change or track the history of a business' status, use the `/businesstransitions` endpoint.
        For more information on status changes, see <<create_business_transition, Create Business Transition>>.

        For information about configuring the required fields for KYC verification, see <</core-api/kyc-verification#_perform_kyc, Perform KYC>>.
      operationId: postBusinesses
      requestBody:
        content:
          application/json:
            example:
              attestation_date: 2022-03-03T00:01:00Z
              attester_name: Jane Smith
              attester_title: Chief Executive Officer
              beneficial_owner1:
                dob: 1982-07-23T05:36:00Z
                first_name: First
                home:
                  address1: 123 B Street
                  address2: Apt A
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: '5105551212'
                ssn: '123456789'
                title: Ms
              beneficial_owner2:
                dob: 1973-11-11T11:11:11Z
                first_name: First
                home:
                  address1: 4321 Grove Street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: '5105551213'
                ssn: '234567891'
                title: Ms
              beneficial_owner3:
                dob: 1981-02-14T15:16:17Z
                first_name: First
                home:
                  address1: 789 Pulgas Ave
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: '5105551214'
                ssn: '345678912'
                title: Ms
              beneficial_owner4:
                dob: 1954-03-07T15:16:17Z
                first_name: First
                home:
                  address1: 16 Poplar Street
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: '5105551215'
                ssn: '456789123'
                title: Dr
              business_name_dba: My_fictitious_business_name
              business_name_legal: My_legal_business_name
              business_type: My_business_type
              date_established: 2010-04-15T00:01:00Z
              duns_number: '987654321'
              general_business_description: My_business_description
              history: My_business_history
              identifications:
                - type: BUSINESS_TAX_ID
                  value: '123456789'
              in_current_location_since: 2010-04-15T00:01:00Z
              incorporation:
                address_registered_under:
                  address1: 123 B Street
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                incorporation_type: LLC
                is_public: true
                name_registered_under: First Middle Last
                state_of_incorporation: CA
                stock_symbol: MB
              international_office_locations: Athens, Greece; Buenos Aires, Argentina,
              ip_address: 67.120.28.118,
              metadata:
                my_name_1: my_value_1
                my_name_2: my_value_2
              notes: My notes
              office_location:
                address1: 123 A street
                address2: Suite 123
                city: Oakland
                country: US
                postal_code: '94610'
                state: CA
              password: My_passw0rd
              phone: '5105551212'
              primary_contact:
                department: My_department
                email: dr.me@my.business.com
                extension: '11'
                fax: '5105551222'
                full_name: First Middle Last
                mobile: '5105551213'
                phone: '5105551212'
                title: Dr
              proprietor_or_officer:
                alternative_names: My Alternative Name
                dob: 1985-01-08T00:00:00Z
                email: mr.myself@my.business.com
                first_name: First
                home:
                  address1: 123 B Street
                  address2: Apt A
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: '5105551211'
                ssn: '5555'
                title: Mr
              token: my_business_02
              website: https://my_business_02.com
            schema:
              $ref: '#/components/schemas/business_cardholder'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: My_business_type
                created_time: 2022-01-13T23:29:10Z
                date_established: 2010-04-15T00:01:00Z
                deposit_account:
                  account_number: '12342126720827265'
                  routing_number: '293748000'
                  token: 420df02a-6aef-42bf-be7b-0d080ebf7573
                  x-mq-internal: true
                duns_number: '987654321'
                general_business_description: My_business_description
                history: My_business_history
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: '123456789'
                in_current_location_since: 2010-04-15T00:01:00Z
                incorporation:
                  address_registered_under:
                    address1: 123 B Street
                    city: Oakland
                    country: US
                    postal_code: '94610'
                    state: CA
                  incorporation_type: LLC
                  is_public: true
                  name_registered_under: First Middle Last
                  state_of_incorporation: CA
                  stock_symbol: MB
                international_office_locations: Athens, Greece; Buenos Aires, Argentina
                ip_address: 67.120.28.118
                last_modified_time: 2022-01-13T23:29:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                notes: My notes
                office_location:
                  address1: 123 A Street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                password: My_passw0rd
                phone: '5105551212'
                primary_contact:
                  department: My_department
                  email: dr.me@my.business.com
                  extension: '11'
                  fax: '5105551222'
                  full_name: First Middle Last
                  mobile: '5105551213'
                  phone: '5105551212'
                  title: Dr
                proprietor_or_officer:
                  alternative_names: My Alternative Name
                  dob: 1985-01-08T00:00:00Z
                  email: mr.myself@my.business.com
                  first_name: First
                  home:
                    address1: 123 B Street
                    address2: Apt A
                    city: Oakland
                    country: US
                    postal_code: '94610'
                    state: CA
                  last_name: Last
                  middle_name: Middle
                  phone: '5105551211'
                  ssn: '5555'
                  title: Mr
                status: ACTIVE
                token: my_business_02
                website: https://my_business_02.com
              schema:
                $ref: '#/components/schemas/business_card_holder_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create business
      tags:
        - Businesses
  /businesses/lookup:
    post:
      description: |-
        To search for one or more businesses, send a `POST` request to the `/businesses/lookup` endpoint.
        Include in the message body any parameters by which you want to query.
        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: postBusinessesLookup
      requestBody:
        content:
          application/json:
            example:
              dda: '2129923205648'
            schema:
              $ref: '#/components/schemas/DDARequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: other
                created_time: 2022-06-20T00:17:48Z
                date_established: 2010-01-01T00:01:00Z
                duns_number: '22344566'
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: 11-1111111
                incorporation:
                  incorporation_type: CORPORATION
                  state_of_incorporation: CA,
                last_modified_time: 2022-06-20T00:17:48Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                office_location:
                  address1: 111 Main St
                  address2: Suite B
                  city: Berkeley
                  country: USA
                  postal_code: '94702'
                  state: CA
                phone: '5105551218'
                primary_contact:
                  department: Accounts Payable
                  email: me@my.company.com
                  extension: '234'
                  fax: '5105551219'
                  full_name: First Middle Last
                  mobile: '5105551220'
                  phone: '5105551218'
                  title: Mr.
                token: 297aa1a7-f3c9-46eb-9e0a-54f8bce0c189
              schema:
                $ref: '#/components/schemas/business_cardholder'
          description: Success
        '404':
          content: {
            }
          description: Business not found
        '500':
          content: {
            }
          description: Server error
      summary: Search businesses
      tags:
        - Businesses
  /businesses/{parent_token}/children:
    get:
      description: |-
        To return an array of all child cardholders of a particular business, send a `GET` request to the `/businesses/{parent_token}/children` endpoint.
        Include the `parent_token` as a URL path parameter.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getBusinessesParenttokenChildren
      parameters:
        - description: Number of child cardholders to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Unique identifier of the parent business.
          explode: false
          in: path
          name: parent_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    address1: 1234 Lake Street
                    birth_date: 1990-01-01
                    business_token: my_business_01
                    city: Berkeley
                    country: US
                    created_time: 2022-10-20T17:50:36Z
                    email: my_child_user_01@gmail.com
                    first_name: First
                    gender: F
                    identifications:
                      - type: SSN
                        value: '123456789'
                    last_modified_time: 2022-10-20T17:50:36Z
                    last_name: Last
                    metadata:
                      my_name_1: my_value_1
                      my_name_2: my_value_2
                    parent_token: my_business_01
                    password: My_passw0rd
                    phone: 510-555-1111
                    postal_code: '94702'
                    state: CA
                    status: ACTIVE
                    token: my_child_user_01
                    uses_parent_account: true
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/BusinessUserCardHolderListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List business children
      tags:
        - Businesses
  /businesses/{token}:
    get:
      description: |-
        To retrieve a specific business, send a `GET` request to the `/businesses/{token}` endpoint.
        Include the business `token` path parameter to specify the business to return.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getBusinessesToken
      parameters:
        - description: Unique identifier of the business resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: My_business_type
                created_time: 2022-01-13T23:29:10Z
                date_established: 2010-04-15T00:01:00Z
                deposit_account:
                  account_number: '12342126720827265'
                  routing_number: '293748000'
                  token: 420df02a-6aef-42bf-be7b-0d080ebf7573
                  x-mq-internal: true
                duns_number: '123456789'
                general_business_description: My_business_description
                history: My_business_history
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: '123456789'
                in_current_location_since: 2010-04-15T00:01:00Z
                incorporation:
                  address_registered_under:
                    address1: 123 B Street
                    city: Oakland
                    country: US
                    postal_code: '94610'
                    state: CA
                  incorporation_type: LLC
                  is_public: true
                  name_registered_under: First Middle Last
                  state_of_incorporation: CA
                  stock_symbol: MB
                international_office_locations: Athens, Greece; Buenos Aires, Argentina
                ip_address: 67.120.28.118
                last_modified_time: 2022-01-13T23:29:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                notes: My notes
                office_location:
                  address1: 123 A street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: '94610'
                  state: CA
                password: My_passw0rd
                phone: '5105551212'
                primary_contact:
                  department: My_department
                  email: dr.me@my.business.com
                  extension: '11'
                  fax: '5105551222'
                  full_name: First Middle Last
                  mobile: '5105551213'
                  phone: '5105551212'
                  title: Dr
                proprietor_or_officer:
                  alternative_names: My Alternative Name
                  dob: 1985-01-08T00:00:00Z
                  email: mr.myself@my.business.com
                  first_name: First
                  home:
                    address1: 123 B Street
                    address2: Apt A
                    city: Oakland
                    country: US
                    postal_code: '94610'
                    state: CA
                  last_name: Last
                  middle_name: Middle
                  phone: '5105551211'
                  ssn: '5555'
                  title: Mr
                status: ACTIVE
                token: my_business_02
                website: https://my_business_02.com
              schema:
                $ref: '#/components/schemas/business_card_holder_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Business not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve business
      tags:
        - Businesses
    put:
      description: |-
        To update a business, send a `PUT` request to `/businesses/{token}`.
        Use the `token` path parameter to specify the business to update.
        Include the business details to update in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        Only values of parameters in the request are modified; all others are left unchanged.
      operationId: putBusinessesToken
      parameters:
        - description: Unique identifier of the business resource
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business_card_holder_update'
        description: Business object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business_cardholder'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update business
      tags:
        - Businesses
  /businesses/{token}/ssn:
    get:
      description: |-
        To retrieve the government-issued identification number of a business' proprietor, send a `GET` request to the `/businesses/{token}/ssn` endpoint.
        Include the `token` path parameter to specify the business whose identification number (SSN, TIN, NIN, SIN) you want to return.
        You can indicate whether to return the full number or the last four digits only.
      operationId: getBusinessesTokenSsn
      parameters:
        - description: Unique identifier of the business resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            To return the full identification number, set to `true`.
            To return only the last four digits, set to `false`.
            If the `proprietor_or_officer.identifications` array contains only the last four digits of the identification number, the `/businesses/{token}/ssn` endpoint will return only the last four digits regardless of the `full_ssn` parameter.
          explode: true
          in: query
          name: full_ssn
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                ssn: '5555'
              schema:
                $ref: '#/components/schemas/ssn_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve business identification number
      tags:
        - Businesses
  /businesstransitions:
    post:
      description: |-
        This endpoint enables you to change a business' status, depending on your role and the previous status change.
        By changing a business' status, you can control the business' capabilities and the setting of the `business.active` field.
        The `business.active` field is `true` if your business is in the `LIMITED` or `ACTIVE` state, and `false` if your business is in the `UNVERIFIED` state.
        You cannot control the value of the `business.active` field directly.

        [cols=",2a,2a"]
        |===
        | The business.status field | Description | Business limitations

        | Unverified
        | Initial status of a newly created business belonging to an `accountholdergroup` where KYC is always required.
        | Cannot load funds.

        *The business.active field:*   +
        `false`

        *Allowable transitions:*   +
        `ACTIVE`, `SUSPENDED`, `CLOSED`

        | Limited
        | Initial status of a newly created business belonging to an `accountholdergroup` where KYC is conditionally required.
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        *The business.active field:*   +
        `true`

        *Allowable transitions:*   +
        `ACTIVE`, `SUSPENDED`, `CLOSED`

        | Active
        | Status of a business that has passed KYC; initial status of a newly created business belonging to an `accountholdergroup` where KYC is never required.
        | None.

        *The business.active field:*   +
        `true`

        *Allowable transitions:*   +
        `SUSPENDED`, `CLOSED`

        | Suspended
        | The business is temporarily inactive.

        *NOTE:* Transitioning a suspended business to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.
        | Cannot load funds or activate cards.

        *The business.active field:*   +
        `false`

        *Allowable transitions:*   +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`

        | Closed
        | The business is permanently inactive.

        *NOTE:* `CLOSED` is a terminal status.
        In exceptional cases, you can transition a business from `CLOSED` to another status, depending on your role and the details of the previous status change.
        Contact your Marqeta representative for more information.
        | Cannot load funds.

        *The business.active field:*   +
        `false`

        *Allowable transitions:*   +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`
        |===

        [NOTE]
        The Marqeta platform transitions a business' status in response to certain events.
        For example, a business with an `UNVERIFIED` status transitions to `ACTIVE` when the business passes KYC.
      operationId: postBusinesstransitions
      requestBody:
        content:
          application/json:
            example:
              business_token: my_business_01
              channel: API
              reason: Activating business
              reason_code: '00'
              status: ACTIVE
              token: activate_05
            schema:
              $ref: '#/components/schemas/BusinessTransitionRequest'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                business_token: my_business_01
                channel: API
                created_time: 2022-09-23T23:28:39Z
                reason: Activating business
                reason_code: '00'
                status: ACTIVE
                token: activate_05
              schema:
                $ref: '#/components/schemas/BusinessTransitionResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '412':
          content: {
            }
          description: Pre-condition setup issue
        '500':
          content: {
            }
          description: Server error
      summary: Create business transition
      tags:
        - Business Transitions
  /businesstransitions/business/{business_token}:
    get:
      description: List all transitions for a given business.
      operationId: getBusinesstransitionsBusinessBusinesstoken
      parameters:
        - description: Unique identifier of the business resource associated with
            the transitions to retrieve.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of business transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - business_token: my_business_01
                    channel: API
                    created_time: 2022-11-23T23:28:39Z
                    reason: Activating business
                    reason_code: '00'
                    status: ACTIVE
                    token: activate_05
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/BusinessTransitionListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List business transitions
      tags:
        - Business Transitions
  /businesstransitions/{token}:
    get:
      description: Use this endpoint to retrieve a business transition.
      operationId: getBusinesstransitionsToken
      parameters:
        - description: The unique identifier of the business transition you want to
            retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                business_token: my_business_01
                channel: API
                created_time: 2022-11-23T23:28:39Z
                reason: Activating business
                reason_code: '00'
                status: ACTIVE
                token: activate_05
              schema:
                $ref: '#/components/schemas/BusinessTransitionResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Cardholder not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve business transition
      tags:
        - Business Transitions
  /cardproducts:
    get:
      description: |-
        Use this endpoint to list existing card products.

        This endpoint supports <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCardproducts
      parameters:
        - description: |-
            Number of resources to retrieve.
            Count can be between 1 - 10 items.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data[]:
                  active: true
                  card_life_cycle:
                    activate_upon_issue: true
                    card_service_code: 101
                    expiration_offset:
                      min_offset:
                        unit: YEARS
                        value: 4
                      unit: YEARS
                      value: 10
                    update_expiration_upon_activation: false
                  clearing_and_settlement:
                    overdraft_destination: GPA
                  config:
                    all_zero_card_security_code: false
                    allow_card_creation: true
                    bin_prefix: '111111'
                    bulk_ship: false
                    fulfillment:
                      card_personalization:
                        carrier:
                          message_line: my message
                          name: my_carrier_logo.png
                        carrier_return_window:
                          name: my_return_address_image.png
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                        signature:
                          name: my_signature.png
                        text:
                          name_line_1: null
                          name_line_2:
                            value: Aegis Fleet Services
                          value: Saki Dogger
                      shipping:
                        method: OVERNIGHT
                        recipient_address:
                          address1: 1234 Grove Street
                          city: Berkeley
                          country: USA
                          first_name: Jane
                          last_name: Doe
                          phone: '5105551212'
                          postal_code: 94702
                          state: CA
                        return_address:
                          address1: 123 Henry St
                          address2: Suite 101
                          city: Porterville
                          country: USA
                          first_name: Saki
                          last_name: Dogger
                          middle_name: R
                          phone: '8315555555'
                          postal_code: '93257'
                          state: CA
                    fulfillment_provider: PERFECTPLASTIC
                    package_id: '0'
                    pan_length: '16'
                    payment_instrument: PHYSICAL_MSR
                    poi:
                      atm: false
                      ecommerce: false
                      other:
                        allow: true,
                        card_presence_required: false,
                        cardholder_presence_required: false
                    transaction_controls:
                      accepted_countries_token: accept_us_only
                      address_verification:
                        auth_messages:
                          decline_on_address_number_mismatch: false
                          decline_on_postal_code_mismatch: false
                          validate: true
                        av_messages:
                          decline_on_address_number_mismatch: false
                          decline_on_postal_code_mismatch: true
                          validate: true
                      allow_gpa_auth: true
                      allow_mcc_group_authorization_controls: true
                      allow_network_load: false
                      allow_network_load_card_activation: false
                      allow_quasi_cash: false
                      always_require_icc: false
                      always_require_pin: false
                      enable_partial_auth_approval: true
                      ignore_card_suspended_state: false
                      notification_language: fra
                      require_card_not_present_card_security_code: false
                    uppercase_name_lines: true
                  created_time: 2022-04-27T19:25:55Z
                  digital_wallet_tokenization:
                    provisioning_controls:
                      in_app_provisioning:
                        address_verification:
                          validate: true
                        enabled: false
                      manual_entry:
                        address_verification:
                          validate: true
                        enabled: false
                      wallet_provider_card_on_file:
                        address_verification:
                          validate: true
                        enabled: false
                  jit_funding:
                    paymentcard_funding_source:
                      enabled: true
                      refunds_destination: ''
                    program_funding_source:
                      enabled: false
                      funding_source_token: ''
                      refunds_destination: PROGRAM_FUNDING_SOURCE
                    programgateway_funding_source:
                      enabled: false
                      funding_source_token: ''
                      refunds_destination: GATEWAY
                  last_modified_time: 2022-04-27T21:29:12Z
                  name: My Card Product 01
                  selective_auth:
                    dmd_location_sensitivity: 0
                    enable_regex_search_chain: false
                    sa_mode: 1
                  start_date: 2022-04-27
                  token: my_cardproduct_01
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/CardProductListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List card products
      tags:
        - Card Products
    post:
      description: |-
        Use this endpoint to create a card product.

        The card product request contains a set of fields that provide basic information about the card product, such as name, active status, and start and end dates.
        Configuration information is contained in the `config` object, which contains sub-elements whose fields control the features and behavior of the card product.
        The elements are referred to collectively as the card product "configuration," and as such are contained in a `config` object.
      operationId: postCardproducts
      requestBody:
        content:
          application/json:
            example:
              config:
                card_life_cycle:
                  activate_upon_issue: true
                  card_service_code: 101
                  expiration_offset:
                    unit: YEARS
                    value: 10
                  update_expiration_upon_activation: false
                fulfillment:
                  all_zero_card_security_code: false
                  bin_prefix: '111111'
                  bulk_ship: false
                  card_personalization:
                    carrier:
                      message_line: my message
                      name: my_carrier_logo.png
                    carrier_return_window:
                      name: my_return_address_image.png
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                    signature:
                      name: my_signature.png
                    text:
                      name_line_1:
                        value: Saki Dogger
                      name_line_2:
                        value: Aegis Fleet Services
                  fulfillment_provider: PERFECTPLASTIC
                  package_id: '0'
                  pan_length: '16'
                  payment_instrument: PHYSICAL_MSR
                  shipping:
                    method: OVERNIGHT
                    recipient_address:
                      address1: 1234 Grove Street
                      city: Berkeley
                      country: USA
                      first_name: Jane
                      last_name: Doe
                      phone: '5105551212'
                      postal_code: '94702'
                      state: CA
                    return_address:
                      address1: 123 Henry St
                      address2: Suite 101
                      city: Porterville
                      country: USA
                      first_name: Saki
                      last_name: Dogger
                      middle_name: R
                      phone: '8315551212'
                      postal_code: '93257'
                      state: CA
                jit_funding:
                  paymentcard_funding_source:
                    enabled: true
                poi:
                  atm: false
                  ecommerce: false
                  other:
                    allow: true
                    card_presence_required: false
                    cardholder_presence_required: false
                selective_auth:
                  dmd_location_sensitivity: 0
                  enable_regex_search_chain: false
                  sa_mode: 1
                transaction_controls:
                  accepted_countries_token: accept_us_only
                  allow_gpa_auth: true
                  allow_mcc_group_authorization_controls: true
                  allow_network_load: false
                  allow_network_load_card_activation: false
                  allow_quasi_cash: false
                  always_require_icc: false
                  always_require_pin: false
                  enable_partial_auth_approval: true
                  ignore_card_suspended_state: false
                  notification_language: fra
                  require_card_not_present_card_security_code: false
              name: My Card Product 01
              start_date: 2021-04-27
              token: my_cardproduct_01
            schema:
              $ref: '#/components/schemas/card_product_request'
        description: Card product object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                config:
                  all_zero_card_security_code: false
                  allow_card_creation: true
                  bin_prefix: '111111'
                  bulk_ship: false
                  card_life_cycle:
                    activate_upon_issue: true
                    card_service_code: 101
                    expiration_offset:
                      unit: YEARS
                      value: 10
                    update_expiration_upon_activation: false
                  clearing_and_settlement:
                    overdraft_destination: GPA
                  digital_wallet_tokenization:
                    card_art_id: myCardArt01
                    provisioning_controls:
                      in_app_provisioning:
                        address_verification:
                          validate: true
                        enabled: false
                      manual_entry:
                        address_verification:
                          validate: true
                        enabled: false
                      wallet_provider_card_on_file:
                        address_verification:
                          validate: true
                        enabled: false
                  enable_offline_pin: false
                  fulfillment:
                    card_personalization:
                      carrier:
                        message_line: my message
                        name: my_carrier_logo.png
                      carrier_return_window:
                        name: my_return_address_image.png
                      images:
                        card:
                          name: my_card_logo.png
                          thermal_color: Black
                      signature:
                        name: my_signature.png
                      text:
                        name_line_1:
                          value: Saki Dogger
                        name_line_2:
                          value: Aegis Fleet Services
                    shipping:
                      method: OVERNIGHT
                      recipient_address:
                        address1: 1234 Grove Street
                        city: Berkeley
                        country: USA
                        first_name: Jane
                        last_name: Doe
                        phone: '5105551212'
                        postal_code: '94702'
                        state: CA
                      return_address:
                        address1: 123 Henry St
                        address2: Suite 101
                        city: Porterville
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        middle_name: R
                        phone: '8315551212'
                        postal_code: '93257'
                        state: CA
                  fulfillment_provider: PERFECTPLASTIC
                  jit_funding:
                    paymentcard_funding_source:
                      enabled: true
                      refunds_destination: GPA
                    program_funding_source:
                      enabled: false
                      funding_source_token: ''
                      refunds_destination: PROGRAM_FUNDING_SOURCE
                    programgateway_funding_source:
                      always_fund: true
                      enabled: false
                      funding_source_token: ''
                      refunds_destination: GATEWAY
                  package_id: '0'
                  pan_length: '16'
                  payment_instrument: PHYSICAL_MSR
                  poi:
                    atm: false
                    ecommerce: false
                    other:
                      allow: true
                      card_presence_required: false
                      cardholder_presence_required: false
                  selective_auth:
                    dmd_location_sensitivity: 0
                    enable_regex_search_chain: false
                    sa_mode: 1
                  transaction_controls:
                    accepted_countries_token: accept_us_only
                    address_verification:
                      auth_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: false
                        validate: true
                      av_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: true
                        validate: true
                    allow_chip_fallback: true
                    allow_gpa_auth: true
                    allow_mcc_group_authorization_controls: true
                    allow_network_load: false
                    allow_network_load_card_activation: false
                    allow_quasi_cash: false
                    always_require_icc: false
                    always_require_pin: false
                    enable_partial_auth_approval: true
                    ignore_card_suspended_state: false
                    notification_language: fra
                    quasi_cash_exempt_mids: 984226812886,000984226812886
                    require_card_not_present_card_security_code: false
                    strong_customer_authentication_limits:
                      sca_contactless_cumulative_amount_limit: 150.0
                      sca_contactless_transaction_limit: 30.0
                      sca_contactless_transactions_count_limit: 5
                      sca_contactless_transactions_currency: EUR
                  uppercase_name_lines: true
                created_time: 2022-03-26T20:25:52Z
                last_modified_time: 2022-03-26T20:25:52Z
                name: My Card Product 01
                start_date: 2021-04-27
                token: my_cardproduct_01
              schema:
                $ref: '#/components/schemas/card_product_response'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create card product
      tags:
        - Card Products
  /cardproducts/{token}:
    get:
      description: Use this endpoint to retrieve a specific card product.
      operationId: getCardproductsToken
      parameters:
        - description: Unique identifier of the card product to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                config:
                  all_zero_card_security_code: false
                  allow_card_creation: true
                  bin_prefix: '111111'
                  bulk_ship: false
                  card_life_cycle:
                    activate_upon_issue: true
                    card_service_code: 101
                    expiration_offset:
                      unit: YEARS
                      value: 10
                    update_expiration_upon_activation: false
                  clearing_and_settlement:
                    overdraft_destination: GPA
                  digital_wallet_tokenization:
                    card_art_id: myCardArt01
                    provisioning_controls:
                      in_app_provisioning:
                        address_verification:
                          validate: true
                        enabled: false
                      manual_entry:
                        address_verification:
                          validate: true
                        enabled: false
                      wallet_provider_card_on_file:
                        address_verification:
                          validate: true
                        enabled: false
                  enable_offline_pin: false
                  fulfillment:
                    card_personalization:
                      carrier:
                        message_line: my message
                        name: my_carrier_logo.png
                      carrier_return_window:
                        name: my_return_address_image.png
                      images:
                        card:
                          name: my_card_logo.png
                          thermal_color: Black
                      signature:
                        name: my_signature.png
                      text:
                        name_line_1:
                          value: Saki Dogger
                        name_line_2:
                          value: Aegis Fleet Services
                    shipping:
                      method: OVERNIGHT
                      recipient_address:
                        address1: 1234 Grove Street
                        city: Berkeley
                        country: USA
                        first_name: Jane
                        last_name: Doe
                        phone: '5105551212'
                        postal_code: '94702'
                        state: CA
                      return_address:
                        address1: 123 Henry St
                        address2: Suite 101
                        city: Porterville
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        middle_name: R
                        phone: '8315551212'
                        postal_code: '93257'
                        state: CA
                  fulfillment_provider: PERFECTPLASTIC
                  jit_funding:
                    paymentcard_funding_source:
                      enabled: true
                      refunds_destination: GPA
                    program_funding_source:
                      enabled: false
                      funding_source_token: ''
                      refunds_destination: PROGRAM_FUNDING_SOURCE
                    programgateway_funding_source:
                      always_fund: true
                      enabled: false
                      funding_source_token: ''
                      refunds_destination: GATEWAY
                  package_id: '0'
                  pan_length: '16'
                  payment_instrument: PHYSICAL_MSR
                  poi:
                    atm: false
                    ecommerce: false
                    other:
                      allow: true
                      card_presence_required: false
                      cardholder_presence_required: false
                  selective_auth:
                    dmd_location_sensitivity: 0
                    enable_regex_search_chain: false
                    sa_mode: 1
                  transaction_controls:
                    accepted_countries_token: accept_us_only
                    address_verification:
                      auth_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: false
                        validate: true
                      av_messages:
                        decline_on_address_number_mismatch: false
                        decline_on_postal_code_mismatch: true
                        validate: true
                    allow_chip_fallback: true
                    allow_gpa_auth: true
                    allow_mcc_group_authorization_controls: true
                    allow_network_load: false
                    allow_network_load_card_activation: false
                    allow_quasi_cash: false
                    always_require_icc: false
                    always_require_pin: false
                    enable_partial_auth_approval: true
                    ignore_card_suspended_state: false
                    notification_language: fra
                    quasi_cash_exempt_mids: 984226812886,000984226812886
                    require_card_not_present_card_security_code: false
                    strong_customer_authentication_limits:
                      sca_contactless_cumulative_amount_limit: 150.0
                      sca_contactless_transaction_limit: 30.0
                      sca_contactless_transactions_count_limit: 5
                      sca_contactless_transactions_currency: EUR
                  uppercase_name_lines: true
                created_time: 2022-03-26T20:25:52Z
                last_modified_time: 2022-03-26T20:25:52Z
                name: My Card Product 01
                start_date: 2022-03-26
                token: my_cardproduct_01
              schema:
                $ref: '#/components/schemas/card_product_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Card product not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve card product
      tags:
        - Card Products
    put:
      description: |-
        Use this endpoint to update a card product.
        Only values of fields in the request are modified; all others are left unchanged.
      operationId: putCardproductsToken
      parameters:
        - description: Unique identifier of the card product to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: '#/components/schemas/card_product_update_model'
        description: Card product object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                active: false
                card_life_cycle:
                  activate_upon_issue: true
                  card_service_code: 101
                  expiration_offset:
                    unit: YEARS
                    value: 10
                  update_expiration_upon_activation: false
                config:
                  all_zero_card_security_code: false
                  bin_prefix: '111111'
                  bulk_ship: false
                  fulfillment:
                    card_personalization:
                      carrier:
                        message_line: my message
                        name: my_carrier_logo.png
                      carrier_return_window:
                        name: my_return_address_image.png
                      images:
                        card:
                          name: my_card_logo.png
                          thermal_color: Black
                      signature:
                        name: my_signature.png
                      text:
                        name_line_1:
                          value: Saki Dogger
                        name_line_2:
                          value: Aegis Fleet Services
                    shipping:
                      method: OVERNIGHT
                      recipient_address:
                        address1: 1234 Grove Street
                        city: Berkeley
                        country: USA
                        first_name: Jane
                        last_name: Doe
                        phone: '5105551212'
                        postal_code: '94702'
                        state: CA
                      return_address:
                        address1: 123 Henry St
                        address2: Suite 101
                        city: Porterville
                        country: USA
                        first_name: Saki
                        last_name: Dogger
                        middle_name: R
                        phone: '8315551212'
                        postal_code: '93257'
                        state: CA
                  fulfillment_provider: PERFECTPLASTIC
                  package_id: '0'
                  pan_length: '16'
                  payment_instrument: PHYSICAL_MSR
                  poi:
                    atm: false
                    ecommerce: false
                    other:
                      allow: true
                      card_presence_required: false
                      cardholder_presence_required: false
                  transaction_controls:
                    accepted_countries_token: accept_us_only
                    allow_gpa_auth: true
                    allow_mcc_group_authorization_controls: true
                    allow_network_load: false
                    allow_network_load_card_activation: false
                    allow_quasi_cash: false
                    always_require_icc: false
                    always_require_pin: false
                    enable_partial_auth_approval: true
                    ignore_card_suspended_state: false
                    notification_language: fra
                    require_card_not_present_card_security_code: false
                created_time: 2022-04-27T19:25:55Z
                jit_funding:
                  paymentcard_funding_source:
                    enabled: true
                last_modified_time: 2022-04-27T21:29:12Z
                name: My Card Product 01
                selective_auth:
                  dmd_location_sensitivity: 0
                  enable_regex_search_chain: false
                  sa_mode: 1
                start_date: 2022-04-27
                token: my_cardproduct_01
              schema:
                $ref: '#/components/schemas/card_product_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update card product
      tags:
        - Card Products
  /cards:
    get:
      description: |-
        Retrieves an array of cards whose primary account numbers (PANs) end in the four digits specified by the `last_four` query parameter.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/object-expansion, object expansion>>, <</core-api/sorting-and-pagination, sorting, and pagination>>.
      operationId: getCards
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Last four digits of the primary account number (PAN) of the
            card you want to locate.
          explode: true
          in: query
          name: last_four
          required: true
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - barcode: '25815105237561780909'
                    card_product_token: my_cardproduct_01
                    created_time: 2022-02-08T18:31:23Z
                    expedite: false
                    expiration: '1225'
                    expiration_time: 2027-12-31T23:59:59Z
                    fulfillment:
                      card_personalization:
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: My card personalization line 1
                          name_line_2:
                            value: My card personalization line 2
                      shipping:
                        care_of_line: my_care_of_value
                        method: FEDEX_REGULAR
                    fulfillment_status: DIGITALLY_PRESENTED
                    instrument_type: PHYSICAL_MSR
                    last_four: '1865'
                    last_modified_time: 2022-02-14T19:32:38Z
                    pan: '1111111824981865'
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user_01_card_02
                    user_token: my_user_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CardListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List cards by last 4 digits of PAN
      tags:
        - Cards
    post:
      description: |-
        Creates a card.

        Create the user and card product before you create the card.
        You create a card using the `user_token` of the user who will own the card and the `card_product_token` of the card product that will control the card.

        [TIP]
        By default, newly created cards are inactive and must be explicitly activated (see <</core-api/cards#_create_card_transition, Create Card Transition>> for information on activating cards).
        To create cards that are activated upon issue, configure your card product's `config.card_life_cycle.activate_upon_issue` field (see <</core-api/card-products, Card Products>>).

        Send a `POST` request to `/pins/controltoken` to set the card's personal identification number (PIN) if your program requires PIN numbers (for example, for Europay Mastercard and Visa cards); this action updates the `pin_is_set` field to `true`.
        See <</core-api/pins#_create_or_update_pin, Create or Update PIN>> for details.

        You can use optional query parameters to show the primary account number (PAN) and card verification value (CVV2) number in the response.
        If `show_pan` and `show_cvv_number` are set to `true`, the fulfillment state of the card is `DIGITALLY_PRESENTED` instead of the typical initial state of `ISSUED`.
        This fulfillment state does not affect the delivery of physical cards.

        This endpoint requires PCI DSS compliance if `show_pan` and `show_cvv_number` are set to `true`.
        You must comply with PCI DSS data security requirements if you store, transmit, or process sensitive card data.
      operationId: postCards
      parameters:
        - description: Set to `true` to show the CVV2 number in the response.
          explode: true
          in: query
          name: show_cvv_number
          required: false
          schema:
            default: false
            type: boolean
          style: form
        - description: Set to `true` to show the full primary account number (PAN)
            in the response.
          explode: true
          in: query
          name: show_pan
          required: false
          schema:
            default: false
            type: boolean
          style: form
      requestBody:
        content:
          application/json:
            example:
              card_product_token: my_cardproduct_01
              fulfillment:
                card_personalization:
                  images:
                    card:
                      name: my_card_logo.png
                      thermal_color: Black
                    carrier_return_window:
                      name: my_return_address_image.png
                    signature:
                      name: my_signature.png
                  text:
                    name_line_1:
                      value: Jane Doe
                    name_line_2:
                      value: My card personalization line 2
              metadata:
                my_name_1: my_value_1
                my_name_2: my_value_2
              token: my_test_card_01
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/card_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                barcode: '51554698491331520446'
                card_product_token: my_cardproduct_01
                created_time: 2022-02-26T20:40:04Z
                expedite: false
                expiration: '0331'
                expiration_time: 2027-03-31T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: Jane Doe
                      name_line_2:
                        value: My card personalization line 2
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: '6270'
                last_modified_time: 2022-02-26T20:40:04Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                pan: '1111111824986720'
                pin_is_set: false
                state: ACTIVE
                state_reason: New card activated
                token: my_test_card_01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create card
      tags:
        - Cards
  /cards/barcode/{barcode}:
    get:
      description: |-
        Retrieves a card by its barcode.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsBarcodeBarcode
      parameters:
        - description: Barcode of the card to retrieve.
          explode: false
          in: path
          name: barcode
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                barcode: '780672318863'
                card_product_token: my_cardproduct_01
                created_time: 2022-02-28T18:31:23Z
                expedite: false
                expiration: '0216'
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment_status: SHIPPED
                instrument_type: PHYSICAL_MSR
                last_four: '5454'
                last_modified_time: 2022-02-28T18:41:00Z
                pan: '5454545454545454'
                pin_is_set: false
                state: ACTIVE
                state_reason: New card activated
                token: my_card
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card does not exist
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve card by barcode
      tags:
        - Cards
  /cards/getbypan:
    post:
      description: |-
        Retrieves the `user_token` and `card_token` for a primary account number (PAN).
        In the case of a reissued card, where multiple cards share the same PAN, the information for the most recently issued card is returned.

        This request is useful in IVR scenarios where a user has telephoned and identifies the card by the PAN.
        The retrieval of these tokens is implemented as a `POST` request because supplying the PAN in the request body is more secure than supplying it in the URL (as would be required with a `GET`).

        [WARNING]
        Sending a request to this endpoint requires PCI DSS compliance.
        You must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.
      operationId: postCardsGetbypan
      requestBody:
        content:
          application/json:
            example:
              pan: '5454545454545454'
            schema:
              $ref: '#/components/schemas/pan_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                card_token: my_card1
                created_time: 2022-02-26T20:03:15Z
                last_modified_time: 2022-02-26T20:05:20Z
                user_token: my_user
              schema:
                $ref: '#/components/schemas/pan_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve card by PAN
      tags:
        - Cards
  /cards/user/{token}:
    get:
      description: |-
        Retrieves a list of the cards associated with a specific user.

        This endpoint supports <</core-api/field-filtering, field filtering,>> <</core-api/sorting-and-pagination, pagination>>, and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsUserToken
      parameters:
        - description: |-
            Unique identifier of the user whose cards you want to list.
            Send a `GET` request to `/users` to retrieve user tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 3
                data:
                  - barcode: '11379418395311581864'
                    card_product_token: my_cardproduct_01
                    created_time: 2022-02-24T21:23:31Z
                    expedite: false
                    expiration: '1026'
                    expiration_time: 2027-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: '2160'
                    last_modified_time: 2022-02-26T19:55:09Z
                    pan: '1111115454542160'
                    pin_is_set: false
                    state: SUSPENDED
                    state_reason: I do not want to use this card, so suspend it.
                    token: my_user_01_card_01
                    user_token: my_user_01
                  - barcode: '25815105237561780909'
                    card_product_token: my_cardproduct_01
                    created_time: 2021-12-28T18:31:23Z
                    expedite: false
                    expiration: '1220'
                    expiration_time: 2026-12-31T23:59:59Z
                    fulfillment:
                      card_personalization:
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: My card personalization line 1
                          name_line_2:
                            value: My card personalization line 2
                      shipping:
                        care_of_line: my_care_of_value
                        method: FEDEX_REGULAR
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: '1865'
                    last_modified_time: 2021-12-28T18:36:23Z
                    pan: '1111111824981865'
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user_01_card_02
                    user_token: my_user_01
                  - barcode: '63143403984499099324'
                    card_product_token: my_cardproduct_01
                    created_time: 2021-11-03T21:55:08Z
                    expedite: false
                    expiration: '1126'
                    expiration_time: 2026-11-30T23:59:59Z
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: '2810'
                    last_modified_time: 2021-11-03T21:55:08Z
                    pan: '1111115454542810'
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user-01-child_01_card_01
                    user_token: my_user-01-child_01
                end_index: 2
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CardListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List cards for user
      tags:
        - Cards
  /cards/{token}:
    get:
      description: |-
        Retrieves a specific card.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsToken
      parameters:
        - description: Unique identifier of the card you want to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Embeds the associated object of the specified type into the
            response, for all `GET /cards` endpoints.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                barcode: '17469201908992951865'
                card_product_token: my_cardproduct_01
                created_time: 2022-02-14T18:48:10Z
                expedite: false
                expiration: '0221'
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: '8949'
                last_modified_time: 2022-02-14T18:58:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                pan: '1111115454548949'
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: mytestcard01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve card
      tags:
        - Cards
    put:
      description: Updates the details of an existing card.
      operationId: putCardsToken
      parameters:
        - description: Unique identifier of the card you want to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              token: my_card_token_03
              user_token: my_user_03
            schema:
              $ref: '#/components/schemas/card_update_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                barcode: '17469201908992951865'
                card_product_token: my_cardproduct_01
                created_time: 2022-02-14T18:48:10Z
                expedite: false
                expiration: '0221'
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1234 Grove St
                      city: Berkeley
                      country: US
                      first_name: Jane
                      last_name: Doe
                      phone: '5105551212'
                      postal_code: '94702'
                      state: CA
                    return_address:
                      address1: 123 Henry St
                      address2: Suite 101
                      city: Porterville
                      country: US
                      first_name: Saki
                      last_name: Dogger
                      middle_name: R
                      phone: '8315555555'
                      postal_code: '93257'
                      state: CA
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: '8949'
                last_modified_time: 2022-02-14T18:58:10Z
                metadata:
                  my_name_1: my_value_1
                pan: '1111115454548949'
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: mytestcard01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update card
      tags:
        - Cards
  /cards/{token}/showpan:
    get:
      description: |-
        Retrieves a primary account number (PAN).
        For security reasons, the PAN is not fully visible on the card resource returned by `GET` `/cards/{token}`.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsTokenShowpan
      parameters:
        - description: |-
            Unique identifier of the card whose primary account number (PAN) you want to retrieve.
            Send a `GET` request to `/cards` to retrieve card tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Set to `true` to show the CVV2 number in the response.
          explode: true
          in: query
          name: show_cvv_number
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                barcode: '25815105237561780909'
                card_product_token: my_cardproduct_01
                created_time: 2021-12-28T18:31:23Z
                cvv_number: '137'
                expedite: false
                expiration: '1220'
                expiration_time: 2026-12-31T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                  shipping:
                    care_of_line: my_care_of_value
                    method: FEDEX_REGULAR
                fulfillment_status: DIGITALLY_PRESENTED
                instrument_type: PHYSICAL_MSR
                last_four: '1865'
                last_modified_time: 2022-02-14T19:32:38Z
                pan: '1111111824981865'
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: my_user_01_card_02
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Show card PAN
      tags:
        - Cards
  /cardtransitions:
    post:
      description: |-
        Creates a card state transition to set the state of an existing card.

        If your system uses IVR, you can send a `POST` request to `/cards/getbypan` to retrieve a card token, which you can then use in your `POST` request to `/cardtransitions`.

        It may not be possible to move a card from one user to another once the card has been activated.
      operationId: postCardtransitions
      requestBody:
        content:
          application/json:
            example:
              card_token: my_user_01_card_01
              channel: API
              reason: I want to use this card, so activate it.
              reason_code: '00'
              state: ACTIVE
              token: activate_05
              validations:
                user:
                  birth_date: 1990-01-31T00:00:00Z
            schema:
              $ref: '#/components/schemas/card_transition_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                barcode: '11379418395311581864'
                card_product_token: my_cardproduct_01
                card_token: my_user_01_card_01
                channel: API
                created_time: 2022-11-23T23:28:39Z
                expedite: false
                expiration: '1026'
                expiration_time: 2026-10-31T23:59:59Z
                fulfillment_status: ISSUED
                last_four: '2160'
                pan: '1111115454542160'
                pin_is_set: false
                reason: I want to use this card, so activate it.
                reason_code: '00'
                state: ACTIVE
                token: activate_05
                type: state.activated
                user:
                  metadata:
                    my_name_1: my_value_1
                    my_name_2: my_value_2
                user_token: my_user_01
                validations:
                  user:
                    birth_date: true
                    phone: false
                    random_name_line1_postfix: false
                    ssn: false
              schema:
                $ref: '#/components/schemas/card_transition_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '422':
          content: {
            }
          description: Cardholder not active
        '500':
          content: {
            }
          description: Server error
      summary: Create card transition
      tags:
        - Card Transitions
  /cardtransitions/card/{token}:
    get:
      description: |-
        Retrieves a list of the transitions for a specific card.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCardtransitionsCardToken
      parameters:
        - description: Unique identifier of the card.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of card transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - barcode: '11379418395311581864'
                    card_product_token: my_cardproduct_01
                    card_token: my_user_01_card_01
                    channel: API
                    created_time: 2021-01-12T19:54:12Z
                    expedite: false
                    expiration: '1026'
                    expiration_time: 2026-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    last_four: '2160'
                    pan: '1111115454542160'
                    pin_is_set: false
                    reason: I do not want to use this card, so suspend it.
                    reason_code: '01'
                    state: SUSPENDED
                    token: suspend_01
                    type: state.suspended
                    user:
                      metadata:
                        my_name_1: my_value_1
                        my_name_2: my_value_2
                    user_token: my_user_01
                    validations:
                      user:
                        birth_date: true
                        phone: false
                        random_name_line1_postfix: false
                        ssn: false
                  - barcode: '11379418395311581864'
                    card_product_token: my_cardproduct_01
                    card_token: my_user_01_card_01
                    channel: API
                    created_time: 2022-02-23T23:28:39Z
                    expedite: false
                    expiration: '1026'
                    expiration_time: 2027-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    last_four: '2160'
                    pan: '1111115454542160'
                    pin_is_set: false
                    reason: I want to use this card, so activate it.
                    reason_code: '00'
                    state: ACTIVE
                    token: activate_05
                    type: state.activated
                    user:
                      metadata:
                        my_name_1: my_value_1
                        my_name_2: my_value_2
                    user_token: my_user_01
                    validations:
                      user:
                        birth_date: true
                        phone: false
                        random_name_line1_postfix: false
                        ssn: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CardTransitionListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List transitions for card
      tags:
        - Card Transitions
  /cardtransitions/{token}:
    get:
      description: |-
        Retrieves a specific card transition.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getCardtransitionsToken
      parameters:
        - description: |-
            Unique identifier of the card transition.
            Send a `GET` request to `/cardtransitions/card/{token}` to retrieve card transition tokens for a specific card.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                barcode: '11379418395311581864'
                card_product_token: my_cardproduct_01
                card_token: my_user_01_card_01
                channel: API
                created_time: 2022-02-23T23:28:39Z
                expedite: false
                expiration: '1026'
                expiration_time: 2027-10-31T23:59:59Z
                fulfillment_status: ISSUED
                last_four: '2160'
                pan: '1111115454542160'
                pin_is_set: false
                reason: I want to use this card, so activate it.
                reason_code: '00'
                state: ACTIVE
                token: activate_05
                type: state.activated
                user:
                  metadata:
                    my_name_1: my_value_1
                    my_name_2: my_value_2
                user_token: my_user_01
                validations:
                  user:
                    birth_date: true
                    phone: false
                    random_name_line1_postfix: false
                    ssn: false
              schema:
                $ref: '#/components/schemas/card_transition_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Transition not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve card transition
      tags:
        - Card Transitions
  /commandomodes:
    get:
      description: |-
        Retrieve a list of Commando Mode control sets.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCommandomodes
      parameters:
        - description: Number of Commando Mode control sets to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - commando_mode_enables:
                      program_funding_source: pgm_funding_src_1
                      velocity_controls:
                        - vel_control_1
                    created_time: 2022-02-14T18:48:10Z
                    current_state:
                      channel: SYSTEM
                      commando_enabled: false
                      reason: New Commando Mode created
                    last_modified_time: 2022-02-14T18:48:10Z
                    program_gateway_funding_source_token: pgm_gateway_src_1
                    token: commando_mode_1
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CommandoModeListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List Commando Mode control sets
      tags:
        - Commando Mode
  /commandomodes/transitions/{token}:
    get:
      description: Retrieve a specific Commando Mode control set transition.
      operationId: getCommandomodesTransitionsToken
      parameters:
        - description: Unique identifier of the Commando Mode control set transition.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                commando_mode_token: commando_mode_1
                created_time: 2022-02-14T18:48:10Z
                token: commando_mode_1_transition
                transition:
                  channel: API
                  commando_enabled: true
                  reason: Lost connection
                  user_name: rhowse
              schema:
                $ref: '#/components/schemas/commando_mode_transition_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Transition not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve Commando Mode transition
      tags:
        - Commando Mode
  /commandomodes/{commandomode_token}/transitions:
    get:
      description: |-
        Retrieve a list of Commando Mode transitions for a specific control set.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCommandomodesCommandomodetokenTransitions
      parameters:
        - description: Number of Commando Mode control set transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Unique identifier of the Commando Mode control set.
          explode: false
          in: path
          name: commandomode_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - commando_mode_token: commando_mode_1
                    created_time: 2022-02-14T18:48:10Z
                    token: commando_mode_1_transition
                    transition:
                      channel: API
                      commando_enabled: true
                      reason: Lost connection
                    user_name: rhowse
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CommandoModeTransitionListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List Commando Mode transitions set
      tags:
        - Commando Mode
  /commandomodes/{token}:
    get:
      description: Retrieve a specific Commando Mode control set.
      operationId: getCommandomodesToken
      parameters:
        - description: Unique identifier of the Commando Mode control set you want
            to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                commando_mode_enables:
                  program_funding_source: pgm_funding_src_1
                  velocity_controls:
                    - vel_control_1
                created_time: 2022-02-14T18:48:10Z
                current_state:
                  channel: SYSTEM
                  commando_enabled: false
                  reason: New Commando Mode created
                last_modified_time: 2022-02-14T18:48:10Z
                program_gateway_funding_source_token: pgm_gateway_src_1
                token: commando_mode_1
              schema:
                $ref: '#/components/schemas/commando_mode_response'
          description: Success
        '404':
          content: {
            }
          description: Commando Mode not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve Commando Mode control set
      tags:
        - Commando Mode
  /credit/accounts:
    get:
      description: |-
        Retrieve an array of credit accounts.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listAccounts
      parameters:
        - description: The unique identifier of the credit card associated with the
            account.
          explode: true
          in: query
          name: card_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing card token
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - activation_time: 2021-08-26T22:55:52.302Z
                    available_credit: 3232
                    config:
                      billing_cycle_day: 1
                      fees:
                        - active: true
                          created_date: 2021-08-26T22:55:52.124Z
                          schedule:
                            - effective_date: 2021-08-26T22:55:52.124Z
                              method: FLAT
                              value: 25
                          type: LATE_PAYMENT_FEE
                          updated_date: 2021-08-26T22:55:52.124Z
                      payment_due_day: 31
                      payment_holds:
                        ach_hold_days: 0
                        check_hold_days: 0
                      rewards: [
                        ]
                    created_time: 2021-08-26T22:55:52.100Z
                    credit_limit: 6000
                    credit_product_token: credit_product_token1234
                    currency_code: USD
                    current_balance: 0
                    description: Consumer credit account for John Jacob
                    external_offer_id: external-offer-11
                    latest_statement_cycle_type: TRANSACTING
                    name: John Jacob
                    remaining_min_payment_due: 25
                    remaining_statement_balance: 2768
                    status: ACTIVE
                    token: credit_account_token1234
                    type: CONSUMER
                    updated_time: 2021-08-26T22:55:52.304Z
                    usages:
                      - aprs:
                          - active: true
                            created_date: 2021-08-26T22:55:52.106Z
                            schedule:
                              - effective_date: 2021-08-26T22:55:52.106Z
                                value: 14.99
                            type: GO_TO
                            updated_date: 2021-08-26T22:55:52.106Z
                        fees: [
                          ]
                        type: PURCHASE
                    user_token: user_token1234
                end_index: 4
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/AccountsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List accounts
      tags:
        - Credit Accounts
    post:
      description: Create a new credit account.
      operationId: createCreditAccount
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              config:
                billing_cycle_day: 1
                fees:
                  - schedule:
                      - method: FLAT
                        value: 6
                    type: LATE_PAYMENT_FEE
                payment_due_day: 31
              credit_limit: 1500
              credit_product_token: my_credit_product1234
              description: Consumer credit account for Jack Smith
              external_offer_id: my_ext_offer_12
              name: Jack Smith's account
              token: my_account_token_12
              usages:
                - aprs:
                    - schedule:
                        - value: 12
                      type: GO_TO
                  type: PURCHASE
              user_token: user1234
            schema:
              $ref: '#/components/schemas/AccountCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                activation_time: 2021-08-26T22:55:52.302Z
                available_credit: 1500
                config:
                  billing_cycle_day: 1
                  fees:
                    - active: true
                      created_date: 2021-09-03T19:06:27.946Z
                      schedule:
                        - effective_date: 2021-09-03T19:06:27.946Z
                          method: FLAT
                          value: 6
                      type: LATE_PAYMENT_FEE
                      updated_date: 2021-09-03T19:06:27.946Z
                  payment_due_day: 31
                  payment_holds:
                    ach_hold_days: 0
                    check_hold_days: 0
                  rewards: [
                    ]
                created_time: 2021-09-03T19:06:27.915Z
                credit_limit: 1500
                credit_product_token: my_credit_product1234
                currency_code: USD
                current_balance: 0
                description: Consumer credit account for Jack Smith
                external_offer_id: my_ext_offer_12
                latest_statement_cycle_type: TRANSACTING
                name: Jack Smith's account
                remaining_min_payment_due: 0
                remaining_statement_balance: 0
                status: UNACTIVATED
                token: my_account_token_12
                type: CONSUMER
                updated_time: 2021-09-03T19:06:27.915Z
                usages:
                  - aprs:
                      - active: true
                        created_date: 2021-09-03T19:06:27.927Z
                        schedule:
                          - effective_date: 2021-09-03T19:06:27.927Z
                            value: 12
                        type: GO_TO
                        updated_date: 2021-09-03T19:06:27.927Z
                    fees: [
                      ]
                    type: PURCHASE
                user_token: user1234
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create account
      tags:
        - Credit Accounts
  /credit/accounts/{account_token}:
    get:
      description: Retrieve a credit account.
      operationId: retrieveAccount
      parameters:
        - description: |-
            The unique identifier of the credit account to retrieve.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                activation_time: 2021-08-26T22:55:52.302Z
                available_credit: 3232
                config:
                  billing_cycle_day: 1
                  fees:
                    - active: true
                      created_date: 2021-08-26T22:55:52.124Z
                      schedule:
                        - effective_date: 2021-08-26T22:55:52.124Z
                          method: FLAT
                          value: 25
                      type: LATE_PAYMENT_FEE
                      updated_date: 2021-08-26T22:55:52.124Z
                  payment_due_day: 31
                  payment_holds:
                    ach_hold_days: 0
                    check_hold_days: 0
                  rewards: [
                    ]
                created_time: 2021-08-26T22:55:52.100Z
                credit_limit: 6000
                credit_product_token: credit_product_token1234
                currency_code: USD
                current_balance: 0
                description: Consumer credit account for John Jacob
                external_offer_id: external-offer-11
                latest_statement_cycle_type: TRANSACTING
                name: John Jacob
                remaining_min_payment_due: 25
                remaining_statement_balance: 2768
                status: ACTIVE
                token: credit_account_token1234
                type: CONSUMER
                updated_time: 2021-08-26T22:55:52.304Z
                usages:
                  - aprs:
                      - active: true
                        created_date: 2021-08-26T22:55:52.106Z
                        schedule:
                          - effective_date: 2021-08-26T22:55:52.106Z
                            value: 14.99
                        type: GO_TO
                        updated_date: 2021-08-26T22:55:52.106Z
                    fees: [
                      ]
                    type: PURCHASE
                user_token: user_token1234
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: A JSON object containing account information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account
      tags:
        - Credit Accounts
    put:
      description: Update a credit account.
      operationId: updateAccount
      parameters:
        - description: |-
            The unique identifier of the credit account to update.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              config:
                payment_holds:
                  ach_hold_days: 3
                  check_hold_days: 5
              credit_limit:
                value: 6000
              latest_statement_cycle_type: TRANSACTING
            schema:
              $ref: '#/components/schemas/AccountUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                activation_time: 2021-08-26T22:55:52.302Z
                available_credit: 3232
                config:
                  billing_cycle_day: 1
                  fees:
                    - active: true
                      created_date: 2021-08-26T22:55:52.124Z
                      schedule:
                        - effective_date: 2021-08-26T22:55:52.124Z
                          method: FLAT
                          value: 25
                      type: LATE_PAYMENT_FEE
                      updated_date: 2021-08-26T22:55:52.124Z
                  payment_due_day: 31
                  payment_holds:
                    ach_hold_days: 3
                    check_hold_days: 5
                  rewards: [
                    ]
                created_time: 2021-08-26T22:55:52.100Z
                credit_limit: 6000
                credit_product_token: credit_product_token1234
                currency_code: USD
                current_balance: 0
                description: Consumer credit account for John Jacob
                external_offer_id: external-offer-11
                latest_statement_cycle_type: TRANSACTING
                name: John Jacob
                remaining_min_payment_due: 25
                remaining_statement_balance: 2768
                status: ACTIVE
                token: credit_account_token1234
                type: CONSUMER
                updated_time: 2021-08-26T22:55:52.304Z
                usages:
                  - aprs:
                      - active: true
                        created_date: 2021-08-26T22:55:52.106Z
                        schedule:
                          - effective_date: 2021-08-26T22:55:52.106Z
                            value: 14.99
                        type: GO_TO
                        updated_date: 2021-08-26T22:55:52.106Z
                    fees: [
                      ]
                    type: PURCHASE
                user_token: user_token1234
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: A JSON object containing account information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update account
      tags:
        - Credit Accounts
  /credit/accounts/{account_token}/accounttransitions:
    get:
      description: |-
        Retrieve an array of transitions on a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listAccountTransitions
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve transitions.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_token: my_account_token_12
                    created_time: 2021-09-03T19:22:45.290Z
                    original_status: UNACTIVATED
                    status: ACTIVE
                    token: my_account_transition_token1234
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AccountTransitionsPage'
          description: A list of JSON objects containing paginated account transitions
            information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account transitions
      tags:
        - Account Transitions
    post:
      description: Transition a credit account to a new status.
      operationId: transitionAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to transition a status.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              status: ACTIVE
            schema:
              $ref: '#/components/schemas/AccountTransitionReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                created_time: 2021-09-03T19:22:45.290Z
                original_status: UNACTIVATED
                status: ACTIVE
                token: my_account_transition_token1234
              schema:
                $ref: '#/components/schemas/AccountTransitionResponse'
          description: A JSON object containing transition information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Transition account status
      tags:
        - Account Transitions
  /credit/accounts/{account_token}/accounttransitions/{token}:
    get:
      description: Retrieve a transition for a credit account.
      operationId: getAccountTransition
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve a transition.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the account transition you want to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/accounttransitions` to retrieve existing account transition tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account transition token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                created_time: 2021-09-03T19:22:45.290Z
                original_status: UNACTIVATED
                status: ACTIVE
                token: my_account_transition_token1234
              schema:
                $ref: '#/components/schemas/AccountTransitionResponse'
          description: A JSON object containing account transition record.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account transition
      tags:
        - Account Transitions
  /credit/accounts/{account_token}/adjustments:
    get:
      description: |-
        Retrieve an array of adjustments for a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, pagination>>.
      operationId: getAdjustmentsByAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve adjustments.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The number of resources to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: my_account_token_12
                    adjustment_detail_object: null
                    amount: -25
                    currency_code: USD
                    description: Waived late payment fee
                    detail_token: null
                    external_adjustment_id: null
                    note: null
                    original_ledger_entry_token: a0216141-13d6-e2e2-7227-abcd12345678
                    reason: OTHER
                    related_detail_object: null
                    related_detail_token: null
                    token: my_account_adjustment_token1234
                    type: FEE
                  - account_token: my_account_token_12
                    adjustment_detail_object:
                      account_token: my_account_token_12
                      average_daily_balance: 181.67
                      created_date: 2021-08-01T07:00:19.755Z
                      currency_code: USD
                      daily_periodic_rate: 4.1068E-4
                      days_in_billing_cycle: 31
                      goto_apr: 14.99
                      interest_amount: 2.31
                      statement_balance: 208.93
                      statement_closing_date: 2021-08-01T03:59:59.999Z
                      statement_opening_date: 2021-07-01T04:00:00
                      statement_token: statement_token_75b
                      token: interest_detail_token1234
                      updated_date: 2021-08-01T07:00:19.755Z
                    amount: -100
                    currency_code: USD
                    description: interest adjustment
                    detail_token: interest_detail_token1234
                    external_adjustment_id: e37e27a1-ad70-382e-846d-a31ab59d00f9
                    note: interest adjustment for dispute
                    original_ledger_entry_token: a0216141-13d6-e2e2-7227-abcd12345678
                    reason: OTHER
                    related_detail_object:
                      account_token: account_token_12
                      amount: 500
                      category: FRAUD
                      created_time: 2021-07-01T00:27:09Z
                      ledger_entry_token: journal_entry_token1222
                      notes: string
                      resolved_at: 2021-07-01T00:27:09Z
                      status: ACTIVE
                      token: dispute_token_1234
                      updated_time: 2021-07-01T00:27:09Z
                    related_detail_token: dispute_token1234
                    token: my_account_adjustment_token1234
                    type: INTEREST
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AccountAdjustmentPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account adjustments
      tags:
        - Adjustments
    post:
      description: Create an adjustment for an existing credit account.
      operationId: createAdjustmentForAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to create an adjustment.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: -25
              currency_code: USD
              description: Waived late payment fee
              original_ledger_entry_token: 2384f927-e4fe-47af-8ff6-0712ee41a2eb
            schema:
              $ref: '#/components/schemas/AccountAdjustmentReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                adjustment_detail_object: null
                amount: -25
                created_time: 2022-04-01T23:41:58.802Z
                currency_code: USD
                description: Waived late payment fee
                detail_token: null
                external_adjustment_id: null
                note: null
                original_ledger_entry_token: a0216141-13d6-e2e2-7227-abcd12345678
                reason: OTHER
                related_detail_object: null
                related_detail_token: null
                token: my_account_adjustment_token1234
                type: FEE
              schema:
                $ref: '#/components/schemas/AccountAdjustmentResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create account adjustment
      tags:
        - Adjustments
  /credit/accounts/{account_token}/adjustments/{adjustment_token}:
    get:
      description: Retrieve an adjustment for a credit account.
      operationId: retrieveAdjustment
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve an adjustment.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the adjustment to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/adjustments` to retrieve existing account adjustment tokens.
          explode: false
          in: path
          name: adjustment_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing adjustment token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                adjustment_detail_object: null
                amount: -25
                currency_code: USD
                description: Waived late payment fee
                detail_token: null
                external_adjustment_id: null
                note: null
                original_ledger_entry_token: a0216141-13d6-e2e2-7227-abcd12345678
                reason: OTHER
                related_detail_object: null
                related_detail_token: null
                token: my_account_adjustment_token1234
                type: FEE
              schema:
                $ref: '#/components/schemas/AccountAdjustmentResponse'
          description: A JSON object containing account_adjustment information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account adjustment
      tags:
        - Adjustments
  /credit/accounts/{account_token}/cards:
    get:
      description: |-
        Retrieve an array of cards for a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getCardsByAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve credit cards.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The status of the credit cards to return.
          explode: true
          in: query
          name: status
          required: false
          schema:
            type: string
            x-allowableValues: Valid credit card status
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: my_account_token_12
                    created_time: 2021-09-03T19:39:53.719Z
                    token: credit_card_token1234
                    updated_time: 2021-09-03T19:39:53.719Z
                    user_token: user1234
                  - account_token: my_account_token_13
                    created_time: 2021-09-13T19:19:51.412Z
                    token: credit_card_token5678
                    updated_time: 2021-09-13T19:19:51.421Z
                    user_token: user5678
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/AccountCardsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account cards
      tags:
        - Account Cards
    post:
      description: |-
        Create a credit card for an existing credit account.

        [NOTE]
        You can ship cards to an address different from the <</core-api/users, user>> address.
        After creating a card, send a `PUT` request to the `/cards` endpoint with the new address in the `fulfillment.shipping` object.
        For more, see <</core-api/cards#putCardsToken, Update card>>.
      operationId: createCardForAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to create a credit card.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              card_product_token: my-card-product1234
              user_token: user1234
            schema:
              $ref: '#/components/schemas/CardCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                created_time: 2021-09-03T19:39:53.719Z
                token: my_credit_card_token1234
                updated_time: 2021-09-03T19:39:53.719Z
                user_token: user1234
              schema:
                $ref: '#/components/schemas/CardResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create account card
      tags:
        - Account Cards
  /credit/accounts/{account_token}/cards/{card_token}:
    get:
      description: Retrieve a credit card for a credit account.
      operationId: getCardByAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve a credit card.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the credit card to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/cards` to retrieve existing credit card tokens.
          explode: false
          in: path
          name: card_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing card token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                created_time: 2021-09-03T19:39:53.719Z
                token: my_credit_card_token1234
                updated_time: 2021-09-03T19:39:53.719Z
                user_token: user1234
              schema:
                $ref: '#/components/schemas/CardResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account card
      tags:
        - Account Cards
  /credit/accounts/{account_token}/creditbalancerefunds:
    post:
      description: Create a new balance refund, which can be issued to the account
        holder if their credit account balance is negative.
      operationId: createBalanceRefund
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to create a balance refund.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 500
              currency_code: USD
              description: credit balance refund
              method: CHECK
            schema:
              $ref: '#/components/schemas/AccountCreditBalanceRefundReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                amount: 0
                created_time: 2021-07-14T20:17:28Z
                description: credit balance refund
                method: CHECK
                status: COMPLETED
                token: credit_balance_refund_token1234
                updated_time: 2021-07-14T20:17:28Z
              schema:
                $ref: '#/components/schemas/AccountCreditBalanceRefundResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create balance refund
      tags:
        - Balance Refunds
  /credit/accounts/{account_token}/delinquencystate:
    get:
      description: |-
        Retrieve details on the current delinquency state of a credit account.

        An account is delinquent when it is past due on payments and current when it is up to date on payments.
      operationId: retrieveDelinquencyState
      parameters:
        - description: |-
            Unique identifier of the credit account for which you want to retrieve delinquency state details.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                current_example:
                  summary: The following code block shows details of a current account.
                  value:
                    account_token: account_token_111
                    buckets: [
                      ]
                    current_due: 100
                    date_account_current: 2022-01-01T04:59:59.999Z
                    date_account_delinquent: null
                    is_delinquent: false
                    total_days_past_due: 0
                    total_due: 100
                    total_past_due: 0
                delinquent_example:
                  summary: The following code block shows details of a delinquent
                    account.
                  value:
                    account_token: account_token_123
                    buckets:
                      - bucket_number: 1
                        current_due: 40
                        days_past_due: 30
                        past_due_carried_forward: 60
                        payment_due_date: 2022-05-01T03:59:59.999Z
                        total_due: 100
                      - bucket_number: 2
                        current_due: 40
                        days_past_due: 60
                        past_due_carried_forward: 20
                        payment_due_date: 2022-04-01T03:59:59.999Z
                        total_due: 60
                      - bucket_number: 3
                        current_due: 20
                        days_past_due: 91
                        past_due_carried_forward: 0
                        payment_due_date: 2022-03-01T04:59:59.999Z
                        total_due: 20
                    current_due: 40
                    date_account_current: null
                    date_account_delinquent: 2022-03-01T04:59:59.999Z
                    is_delinquent: true
                    total_days_past_due: 91
                    total_due: 140
                    total_past_due: 100
              schema:
                $ref: '#/components/schemas/DelinquencyStateResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve delinquency state
      tags:
        - Delinquency
  /credit/accounts/{account_token}/delinquencystate/transitions:
    get:
      description: |-
        Retrieve an array of delinquency transitions for a credit account.

        A delinquency transition occurs when an account transitions between delinquent and current.
        An account becomes delinquent when it falls behind on payments and becomes current when payments are made up to date.
      operationId: retrieveDelinquencyTransitions
      parameters:
        - description: |-
            Unique identifier of the credit account whose delinquency transitions you want to retrieve.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `impactTime`, and not by the field names appearing in response bodies such as `impact_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -impactTime
            enum:
              - impactTime
              - -impactTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: account_token_1
                    created_time: 2022-08-23T11:25:34.342Z
                    impact_time: 2022-08-23T11:25:34.002Z
                    is_invalidated: false
                    original_status: DELINQUENT
                    status: CURRENT
                    token: delinquency_transition_token_2
                  - account_token: account_token_1
                    created_time: 2022-08-01T04:16:33.302Z
                    impact_time: 2022-08-01T04:16:33.011Z
                    is_invalidated: false
                    original_status: CURRENT
                    status: DELINQUENT
                    token: delinquency_transition_token_1
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/DelinquencyTransitionsResponsePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List delinquency transitions
      tags:
        - Delinquency
  /credit/accounts/{account_token}/delinquencystate/transitions/{delinquency_transition_token}:
    get:
      description: |-
        Retrieve a specific delinquency transition for a credit account.

        A delinquency transition occurs when an account transitions between delinquent and current.
        An account becomes delinquent when it falls behind on payments and becomes current when payments are made up to date.
      operationId: retrieveDelinquencyTransition
      parameters:
        - description: |-
            Unique identifier of the credit account whose delinquency transition you want to retrieve.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: Unique identifier of the delinquency transition.
          explode: false
          in: path
          name: delinquency_transition_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing delinquency transition token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: account_token_1
                created_time: 2022-08-23T11:25:34.342Z
                impact_time: 2022-08-23T11:25:34.002Z
                is_invalidated: false
                original_status: DELINQUENT
                status: CURRENT
                token: delinquency_transition_token_1
              schema:
                $ref: '#/components/schemas/DelinquencyTransitionResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve delinquency transition
      tags:
        - Delinquency
  /credit/accounts/{account_token}/disputes:
    get:
      description: |-
        Retrieve an array of disputes on a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getDisputesByAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve the disputes.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_token: account_token_12
                    amount: 500
                    category: FRAUD
                    created_time: 2021-07-01T00:27:09Z
                    ledger_entry_token: journal_entry_token1222
                    notes: fraudulent purchase
                    resolved_at: 2021-07-01T00:27:09Z
                    status: ACTIVE
                    token: dispute_token_1234
                    updated_time: 2021-07-01T00:27:09Z
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/DisputeResponsePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account disputes
      tags:
        - Credit Disputes
    post:
      description: Create a dispute of a journal entry on a credit account.
      operationId: createDisputeForAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to create a dispute.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 500
              category: FRAUD
              ledger_entry_token: journal_entry_token1222
              token: dispute_token_1234
            schema:
              $ref: '#/components/schemas/DisputeCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: account_token_12
                amount: 500
                category: FRAUD
                created_time: 2021-07-01T00:27:09Z
                ledger_entry_token: journal_entry_token1222
                notes: fraudulent purchase
                resolved_at: 2021-07-01T00:27:09Z
                status: ACTIVE
                token: dispute_token_1234
                updated_time: 2021-07-01T00:27:09Z
              schema:
                $ref: '#/components/schemas/DisputeResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create account dispute
      tags:
        - Credit Disputes
  /credit/accounts/{account_token}/disputes/{dispute_token}:
    get:
      description: Retrieve a dispute from a credit account.
      operationId: retrieveDispute
      parameters:
        - description: |-
            The unique identifier of the credit account from which to retrieve a dispute.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the dispute to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/disputes` to retrieve existing dispute tokens.
          explode: false
          in: path
          name: dispute_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing dispute token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: account_token_12
                amount: 500
                category: FRAUD
                created_time: 2021-07-01T00:27:09Z
                ledger_entry_token: journal_entry_token1222
                notes: string
                resolved_at: 2021-07-01T00:27:09Z
                status: ACTIVE
                token: dispute_token_1234
                updated_time: 2021-07-01T00:27:09Z
              schema:
                $ref: '#/components/schemas/DisputeResponse'
          description: Transaction Dispute object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account dispute
      tags:
        - Credit Disputes
  /credit/accounts/{account_token}/disputes/{dispute_token}/transitions:
    post:
      description: Update the amount or status of a dispute on a credit account.
      operationId: transitionDispute
      parameters:
        - description: |-
            The unique identifier of the credit account from which to update a dispute.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the dispute to update.

            Send a `GET` request to `/credit/accounts/{account_token}/disputes` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: dispute_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing dispute token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 500
              status: AH_WON
            schema:
              $ref: '#/components/schemas/DisputeTransitionReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                amount: 500
                created_time: 2021-07-01T00:27:09Z
                notes: account holder evidence accepted
                status: AH_WON
                token: dispute_update_token1234
              schema:
                $ref: '#/components/schemas/DisputeTransitionResponse'
          description: Transitioned transaction dispute object.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update account dispute
      tags:
        - Credit Disputes
  /credit/accounts/{account_token}/documents:
    get:
      description: Retrieve an array of documents on a credit account.
      operationId: getAccountDocuments
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to get documents.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDocumentsResponse'
          description: Account documents
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List documents
      tags:
        - Account Documents
  /credit/accounts/{account_token}/documents/{document_type}:
    get:
      description: Retrieve a specific type of document on a credit account.
      operationId: getDocumentByAccountAndType
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve a specific type of document.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: document_type
          required: true
          schema:
            $ref: '#/components/schemas/AccountAndDocumentAssetType'
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDocumentResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve document
      tags:
        - Account Documents
  /credit/accounts/{account_token}/documents/{document_type}/history:
    get:
      description: Retrieve the history of a specific type of document on a credit
        account.
      operationId: getDocumentHistoryByAccountAndType
      parameters:
        - description: |-
            The unique identifier of the credit account for which to get document history.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: document_type
          required: true
          schema:
            $ref: '#/components/schemas/AccountAndDocumentAssetType'
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `effectiveDate`, and not by the field names appearing in response bodies such as `effective_date`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -effectiveDate
            enum:
              - effectiveDate
              - -effectiveDate
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDocumentsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve document history
      tags:
        - Account Documents
  /credit/accounts/{account_token}/journalentries:
    get:
      description: |-
        Retrieve an array of journal entries on a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>> and <</core-api/object-expansion, object expansion>>.
      operationId: ListAccountJournalEntries
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve journal entries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: The starting date of the date range from which to return journal
            entries.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
          style: form
        - description: The ending date of the date range from which to return journal
            entries.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
          style: form
        - description: An array of statuses by which to filter journal entries.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            items:
              enum:
                - POSTED
                - PENDING
              type: string
            type: array
          style: form
        - description: |-
            An array of groups by which to filter journal entries.

            To return all journal entry groups, do not include this query parameter.
          explode: true
          in: query
          name: groups
          required: false
          schema:
            items:
              enum:
                - PURCHASE
                - ORIGINAL_CREDIT
                - FEE
                - BALANCE_REFUND
                - PAYMENT
                - INTEREST
                - DISPUTE
                - REFUND
                - ADJUSTMENT
                - REWARD
              type: string
            type: array
          style: form
        - description: Embeds the specified object into the response.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            enum:
              - detailObject
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
              - impactTime
              - -impactTime
            type: string
          style: form
        - description: |-
            An array of card tokens by which to filter journal entries.
            Returns journal entries associated with the specified card tokens.

            Send a `GET` request to `/credit/accounts/{account_token}/cards/` to retrieve existing card tokens.
          explode: true
          in: query
          name: card_tokens
          required: false
          schema:
            items:
              type: string
            type: array
            x-allowableValues: Existing card token
          style: form
        - description: |-
            An array of user tokens by which to filter journal entries.
            Returns journal entries associated with the specified user tokens.

            Send a `GET` request to `/users` to retrieve existing user tokens.
          explode: true
          in: query
          name: user_tokens
          required: false
          schema:
            items:
              type: string
            type: array
            x-allowableValues: Existing user token
          style: form
        - description: |-
            An array of <</core-api/event-types#_credit_journal_entry_events, event types>> by which to filter journal entries.

            To return all event types, do not include this query parameter.
          explode: true
          in: query
          name: types
          required: false
          schema:
            items:
              enum:
                - authorization
                - authorization.advice
                - authorization.incremental
                - authorization.reversal
                - authorization.reversal.issuerexpiration
                - authorization.clearing
                - refund
                - refund.authorization
                - refund.authorization.advice
                - refund.authorization.reversal
                - refund.authorization.clearing
                - refund.authorization.reversal.issuerexpiration
                - originalcredit.authorization
                - originalcredit.authorization.clearing
                - originalcredit.authorization.reversal
                - originalcredit.authpluscapture
                - originalcredit.authpluscapture.reversal
                - originalcredit.authorization.reversal.issuerexpiration
                - account.balancerefund
                - account.reward.cashback
                - account.reward.auto.cashback
                - account.reward.auto.cashback.reversal
                - account.payment
                - account.payment.completed
                - account.payment.returned
                - account.payment.canceled
                - account.payment.refunded
                - account.payment.completed.hold.released
                - account.payment.completed.hold
                - account.interest
                - account.fee.payment.late
                - account.fee.payment.returned
                - account.fee.interest.minimum
                - account.dispute
                - account.dispute.reversal
                - account.dispute.won
                - account.dispute.lost
                - account.dispute.lost.graceperiod
                - account.adjustment
                - account.adjustment.purchase
                - account.adjustment.fee
                - account.adjustment.interest
                - account.adjustment.reward
              type: string
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: my_account_token_12
                    amount: 2.31
                    card_token: my_credit_card_token7794
                    created_time: 2021-08-01T07:00:19.756Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      average_daily_balance: 181.67
                      created_date: 2021-08-01T07:00:19.755Z
                      currency_code: USD
                      daily_periodic_rate: 4.1068E-4
                      days_in_billing_cycle: 31
                      goto_apr: 14.99
                      interest_amount: 2.31
                      statement_balance: 208.93
                      statement_closing_date: 2021-08-01T03:59:59.999Z
                      statement_opening_date: 2021-07-01T04:00:00
                      statement_token: statement_token_75b
                      token: detail_token_96749
                      updated_date: 2021-08-01T07:00:19.755Z
                    detail_token: detail_token_96749
                    group: INTEREST
                    id: '11112222'
                    impact_time: 2021-08-01T03:59:59.999Z
                    memo: Interest charge on purchases
                    request_time: 2021-08-01T03:59:59.999Z
                    status: POSTED
                    token: interest_journal_entry_token1111
                    type: account.interest
                    user_token: user_token4632
                  - account_token: my_account_token_12
                    amount: 15
                    card_token: my_credit_card_token7794
                    created_time: 2021-07-01T07:00:24.240Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      amount: 15
                      created: 2021-07-01T07:00:24.239Z
                      currency_code: USD
                      description: Late Payment Fee
                      method: FLAT
                      token: detail_token_11221
                      type: LATE_PAYMENT_FEE
                      value: 25
                    detail_token: detail_token_11221
                    group: FEE
                    id: '44445678'
                    impact_time: 2021-07-01T03:59:59.999Z
                    memo: Late payment fee
                    request_time: 2021-07-01T03:59:59.999Z
                    status: POSTED
                    token: fee_journal_entry_token2121
                    type: account.fee.payment.late
                    user_token: user_token4632
                  - account_token: my_account_token_12
                    amount: 9.11
                    card_token: my_credit_card_token7794
                    created_time: 2021-09-26T11:53:48.228Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: 0
                      acquirer_fee_amount: 0
                      acquirer_reference_data: 4.355106395860054E22
                      acting_user_token: user_token4632
                      amount: 9.11
                      approval_code: 946791
                      batch_number: 2021048291031352
                      card:
                        last_four: 4489
                        metadata: {
                          }
                      card_acceptor:
                        city: OAKLAND
                        country_code: US
                        mcc: 5814
                        mid: 555600244811
                        name: SWEET TREATS 0484
                        postal_code: 94612
                        state: CA
                      card_token: my_credit_card_token7794
                      clearing_record_sequence_number: 0
                      created_time: 2021-09-26T11:53:46Z
                      currency_code: USD
                      currency_conversion:
                        network:
                          conversion_rate: 1
                          original_amount: 9.11
                          original_currency_code: 840
                      duration: 378
                      fees:
                        amount: 0.19131
                        credit_debit: C
                        type: INTERCHANGE_FEE
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -9.11
                            ledger_balance: 61.7
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -9.11
                        ledger_balance: 61.7
                        pending_credits: 0
                      gpa_order:
                        amount: 9.11
                        created_time: 2021-09-25T20:59:43Z
                        currency_code: USD
                        funding:
                          amount: 9.11
                          source:
                            active: true
                            created_time: 2021-06-22T18:41:14Z
                            is_default_account: false
                            last_modified_time: 2021-06-22T18:41:14Z
                            name: My Funding Source
                            token: funding_source_token6789
                            type: programgateway
                        funding_source_token: funding_source_token6789
                        jit_funding:
                          acting_user_token: user_token4632
                          amount: 9.11
                          method: pgfs.authorization.capture
                          original_jit_funding_token: jit_funding_token4be7
                          token: jit_funding_token43a3
                          user_token: user_token4632
                        last_modified_time: 2021-09-26T11:53:47Z
                        response:
                          code: 0
                          memo: Approved or completed successfully
                        state: COMPLETION
                        token: gpa_order_token2c2c5
                        transaction_token: transaction_token42352a
                        user_token: user_token4632
                      identifier: 6457
                      issuer_interchange_amount: 0.19131
                      issuer_payment_node: 042f97a3458b59e3cce0269f66e864d8
                      issuer_received_time: 2021-09-26T11:53:46.886Z
                      network: VISA
                      network_metadata:
                        product_id: VISA_TRADITIONAL
                        program_id: ''
                      network_reference_id: 218552461989029
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: false
                        pin_present: false
                        purchase_amount_only: false
                        terminal_id: 101
                      preceding_related_transaction_token: journal_entry_token2460
                      request_amount: 9.11
                      response:
                        code: 0
                        memo: Approved or completed successfully
                      settlement_date: 2021-09-26T00:00:00Z
                      state: COMPLETION
                      subnetwork: VISANET
                      token: detail_token_645736
                      transaction_metadata:
                        payment_channel: OTHER
                      type: authorization.clearing
                      user:
                        metadata:
                          notification_email: hello@myemail.com
                      user_token: user_token4632
                      user_transaction_time: 2021-09-25T20:59:43Z
                    detail_token: detail_token_645736
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-09-26T11:53:48.228Z
                    memo: SWEET TREATS 0484
                    related_token: journal_entry_token2460
                    request_time: 2021-09-25T20:59:43
                    root_token: journal_entry_token2460
                    status: POSTED
                    token: purchase_journal_entry_token6789
                    type: authorization.clearing
                    user_token: user_token4632
                end_index: 4
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/JournalEntriesPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account journal entries
      tags:
        - Journal Entries
  /credit/accounts/{account_token}/journalentries/{journal_entry_token}:
    get:
      description: Retrieve a journal entry for a credit account.
      operationId: getAccountJournalEntry
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve journal entries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the journal entry you want to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/journalentries` to retrieve existing journal entry tokens.
          explode: false
          in: path
          name: journal_entry_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing journal entry token
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                fee_example:
                  summary: The following code block shows a sample `FEE` journal entry.
                  value:
                    account_token: my_account_token_12
                    amount: 15
                    card_token: my_credit_card_token7794
                    created_time: 2021-07-01T07:00:24.240Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      amount: 15
                      created: 2021-07-01T07:00:24.239Z
                      currency_code: USD
                      description: Late Payment Fee
                      method: FLAT
                      token: detail_token_11221
                      type: LATE_PAYMENT_FEE
                      value: 25
                    detail_token: detail_token_11221
                    group: FEE
                    id: '44445678'
                    impact_time: 2021-07-01T03:59:59.999Z
                    memo: Late payment fee
                    request_time: 2021-07-01T03:59:59.999Z
                    status: POSTED
                    token: fee_journal_entry_token2121
                    type: account.fee.payment.late
                    user_token: user_token4632
                interest_example:
                  summary: The following code block shows a sample `INTEREST` journal
                    entry.
                  value:
                    account_token: my_account_token_12
                    amount: 2.31
                    card_token: my_credit_card_token7794
                    created_time: 2021-08-01T07:00:19.756Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      average_daily_balance: 181.67
                      created_date: 2021-08-01T07:00:19.755Z
                      currency_code: USD
                      daily_periodic_rate: 4.1068E-4
                      days_in_billing_cycle: 31
                      goto_apr: 14.99
                      interest_amount: 2.31
                      statement_balance: 208.93
                      statement_closing_date: 2021-08-01T03:59:59.999Z
                      statement_opening_date: 2021-07-01T04:00:00
                      statement_token: statement_token_75b
                      token: detail_token_96749
                      updated_date: 2021-08-01T07:00:19.755Z
                    detail_token: detail_token_96749
                    group: INTEREST
                    id: '11112222'
                    impact_time: 2021-08-01T03:59:59.999Z
                    memo: Interest charge on purchases
                    request_time: 2021-08-01T03:59:59.999Z
                    status: POSTED
                    token: interest_journal_entry_token1111
                    type: account.interest
                    user_token: user_token4632
                purchase_example:
                  summary: The following code block shows a sample `PURCHASE` journal
                    entry.
                  value:
                    account_token: my_account_token_12
                    amount: 9.11
                    card_token: my_credit_card_token7794
                    created_time: 2021-09-26T11:53:48.228Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: 0
                      acquirer_fee_amount: 0
                      acquirer_reference_data: 4.355106395860054E22
                      acting_user_token: user_token4632
                      amount: 9.11
                      approval_code: 946791
                      batch_number: 2021048291031352
                      card:
                        last_four: 4489
                        metadata: {
                          }
                      card_acceptor:
                        city: OAKLAND
                        country_code: US
                        mcc: 5814
                        mid: 555600244811
                        name: SWEET TREATS 0484
                        postal_code: 94612
                        state: CA
                      card_token: my_credit_card_token7794
                      clearing_record_sequence_number: 0
                      created_time: 2021-09-26T11:53:46Z
                      currency_code: USD
                      currency_conversion:
                        network:
                          conversion_rate: 1
                          original_amount: 9.11
                          original_currency_code: 840
                      duration: 378
                      fees:
                        amount: 0.19131
                        credit_debit: C
                        type: INTERCHANGE_FEE
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -9.11
                            ledger_balance: 61.7
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -9.11
                        ledger_balance: 61.7
                        pending_credits: 0
                      gpa_order:
                        amount: 9.11
                        created_time: 2021-09-25T20:59:43Z
                        currency_code: USD
                        funding:
                          amount: 9.11
                          source:
                            active: true
                            created_time: 2021-06-22T18:41:14Z
                            is_default_account: false
                            last_modified_time: 2021-06-22T18:41:14Z
                            name: My Funding Source
                            token: funding_source_token6789
                            type: programgateway
                        funding_source_token: funding_source_token6789
                        jit_funding:
                          acting_user_token: user_token4632
                          amount: 9.11
                          method: pgfs.authorization.capture
                          original_jit_funding_token: jit_funding_token4be7
                          token: jit_funding_token43a3
                          user_token: user_token4632
                        last_modified_time: 2021-09-26T11:53:47Z
                        response:
                          code: 0
                          memo: Approved or completed successfully
                        state: COMPLETION
                        token: gpa_order_token2c2c5
                        transaction_token: transaction_token42352a
                        user_token: user_token4632
                      identifier: 6457
                      issuer_interchange_amount: 0.19131
                      issuer_payment_node: 042f97a3458b59e3cce0269f66e864d8
                      issuer_received_time: 2021-09-26T11:53:46.886Z
                      network: VISA
                      network_metadata:
                        product_id: VISA_TRADITIONAL
                        program_id: ''
                      network_reference_id: 218552461989029
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: false
                        pin_present: false
                        purchase_amount_only: false
                        terminal_id: 101
                      preceding_related_transaction_token: journal_entry_token2460
                      request_amount: 9.11
                      response:
                        code: 0
                        memo: Approved or completed successfully
                      settlement_date: 2021-09-26T00:00:00Z
                      state: COMPLETION
                      subnetwork: VISANET
                      token: detail_token_645736
                      transaction_metadata:
                        payment_channel: OTHER
                      type: authorization.clearing
                      user:
                        metadata:
                          notification_email: hello@myemail.com
                      user_token: user_token4632
                      user_transaction_time: 2021-09-25T20:59:43Z
                    detail_token: detail_token_645736
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-09-26T11:53:48.228Z
                    memo: SWEET TREATS 0484
                    related_token: journal_entry_token2460
                    request_time: 2021-09-25T20:59:43
                    root_token: journal_entry_token2460
                    status: POSTED
                    token: journal_entry_token6789
                    type: authorization.clearing
                    user_token: user_token4632
              schema:
                $ref: '#/components/schemas/JournalEntry'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account journal entry
      tags:
        - Journal Entries
  /credit/accounts/{account_token}/ledgerentries:
    get:
      description: |-
        Retrieve an array of ledger entries on a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>> and <</core-api/object-expansion, object expansion>>.
      operationId: ListAccountLedgerEntries
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve ledger entries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: The starting date of the date range from which to return ledger
            entries.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            example: 2019-01-01
            format: date
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
          style: form
        - description: The ending date of the date range from which to return ledger
            entries.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            example: 2019-01-01
            format: date
            type: string
            x-allowableValues: 'Format: yyyy-MM-dd or yyyy-MM-ddThh:mm:ssZ'
          style: form
        - description: An array of statuses by which to filter ledger entries.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            items:
              type: string
            type: array
            x-allowableValues: A valid ledger entry status
          style: form
        - description: The description of the ledger entries to return.
          explode: true
          in: query
          name: description
          required: false
          schema:
            type: string
            x-allowableValues: 255 char max
          style: form
        - description: |-
            An array of groups by which to filter ledger entries.

            To return all ledger entry groups, do not include this query parameter.
          explode: true
          in: query
          name: groups
          required: false
          schema:
            items:
              type: string
            type: array
            x-allowableValues: A valid ledger entry group
          style: form
        - description: The number of ledger entries to return.
          explode: true
          in: query
          name: amount
          required: false
          schema:
            type: number
            x-allowableValues: Any integer
          style: form
        - description: Embeds the specified object into the response.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            enum:
              - detailObject
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 3
                data:
                  - account_token: my_account_token_12
                    amount: 2.31
                    card_token: my_credit_card_token7794
                    created_time: 2021-08-01T07:00:19.756Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      average_daily_balance: 181.67
                      created_date: 2021-08-01T07:00:19.755Z
                      currency_code: USD
                      daily_periodic_rate: 4.1068E-4
                      days_in_billing_cycle: 31
                      goto_apr: 14.99
                      interest_amount: 2.31
                      statement_balance: 208.93
                      statement_closing_date: 2021-08-01T03:59:59.999Z
                      statement_opening_date: 2021-07-01T04:00:00
                      statement_token: statement_token_75b
                      token: detail_token_96749
                      updated_date: 2021-08-01T07:00:19.755Z
                    detail_token: detail_token_96749
                    group: INTEREST
                    id: '11112222'
                    impact_time: 2021-08-01T03:59:59.999Z
                    memo: Interest charge on purchases
                    request_time: 2021-08-01T03:59:59.999Z
                    status: POSTED
                    token: interest_ledger_entry_token1111
                    type: account.interest
                  - account_token: my_account_token_12
                    amount: 15
                    card_token: my_credit_card_token7794
                    created_time: 2021-07-01T07:00:24.240Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      amount: 15
                      created: 2021-07-01T07:00:24.239Z
                      currency_code: USD
                      description: Late Payment Fee
                      method: FLAT
                      token: detail_token_11221
                      type: LATE_PAYMENT_FEE
                      value: 25
                    detail_token: detail_token_11221
                    group: FEE
                    id: '44445678'
                    impact_time: 2021-07-01T03:59:59.999Z
                    memo: Late payment fee
                    request_time: 2021-07-01T03:59:59.999Z
                    status: POSTED
                    token: fee_ledger_entry_token2121
                    type: account.fee.latepayment
                  - account_token: my_account_token_12
                    amount: 9.11
                    card_token: my_credit_card_token7794
                    created_time: 2021-09-26T11:53:48.228Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: 0
                      acquirer_fee_amount: 0
                      acquirer_reference_data: 4.355106395860054E22
                      acting_user_token: user_token4632
                      amount: 9.11
                      approval_code: 946791
                      batch_number: 2021048291031352
                      card:
                        last_four: 4489
                        metadata: {
                          }
                      card_acceptor:
                        city: OAKLAND
                        country_code: US
                        mcc: 5814
                        mid: 555600244811
                        name: SWEET TREATS 0484
                        postal_code: 94612
                        state: CA
                      card_token: my_credit_card_token7794
                      clearing_record_sequence_number: 0
                      created_time: 2021-09-26T11:53:46Z
                      currency_code: USD
                      currency_conversion:
                        network:
                          conversion_rate: 1
                          original_amount: 9.11
                          original_currency_code: 840
                      duration: 378
                      fees:
                        amount: 0.19131
                        credit_debit: C
                        type: INTERCHANGE_FEE
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -9.11
                            ledger_balance: 61.7
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -9.11
                        ledger_balance: 61.7
                        pending_credits: 0
                      gpa_order:
                        amount: 9.11
                        created_time: 2021-09-25T20:59:43Z
                        currency_code: USD
                        funding:
                          amount: 9.11
                          source:
                            active: true
                            created_time: 2021-06-22T18:41:14Z
                            is_default_account: false
                            last_modified_time: 2021-06-22T18:41:14Z
                            name: My Funding Source
                            token: funding_source_token6789
                            type: programgateway
                        funding_source_token: funding_source_token6789
                        jit_funding:
                          acting_user_token: user_token4632
                          amount: 9.11
                          method: pgfs.authorization.capture
                          original_jit_funding_token: jit_funding_token4be7
                          token: jit_funding_token43a3
                          user_token: user_token4632
                        last_modified_time: 2021-09-26T11:53:47Z
                        response:
                          code: 0
                          memo: Approved or completed successfully
                        state: COMPLETION
                        token: gpa_order_token2c2c5
                        transaction_token: transaction_token42352a
                        user_token: user_token4632
                      identifier: 6457
                      issuer_interchange_amount: 0.19131
                      issuer_payment_node: 042f97a3458b59e3cce0269f66e864d8
                      issuer_received_time: 2021-09-26T11:53:46.886Z
                      network: VISA
                      network_metadata:
                        product_id: VISA_TRADITIONAL
                        program_id: ''
                      network_reference_id: 218552461989029
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: false
                        pin_present: false
                        purchase_amount_only: false
                        terminal_id: 101
                      preceding_related_transaction_token: ledger_entry_token2460
                      request_amount: 9.11
                      response:
                        code: 0
                        memo: Approved or completed successfully
                      settlement_date: 2021-09-26T00:00:00Z
                      state: COMPLETION
                      subnetwork: VISANET
                      token: detail_token_645736
                      transaction_metadata:
                        payment_channel: OTHER
                      type: authorization.clearing
                      user:
                        metadata:
                          notification_email: hello@myemail.com
                      user_token: user_token4632
                      user_transaction_time: 2021-09-25T20:59:43Z
                    detail_token: detail_token_645736
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-09-26T11:53:48.228Z
                    memo: SWEET TREATS 0484
                    related_token: ledger_entry_token2460
                    request_time: 2021-09-25T20:59:43
                    root_token: ledger_entry_token2460
                    status: POSTED
                    token: purchase_ledger_entry_token6789
                    type: authorization.clearing
                end_index: 4
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/LedgerEntriesPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account ledger entries
      tags:
        - Ledger Entries
  /credit/accounts/{account_token}/ledgerentries/{ledger_entry_token}:
    get:
      description: Retrieve a ledger entry for a credit account.
      operationId: getAccountLedgerEntry
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve ledger entries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the ledger entry you want to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/ledgerentries` to retrieve existing ledger entry tokens.
          explode: false
          in: path
          name: ledger_entry_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing ledger entry token
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                fee_example:
                  summary: The following code block shows a sample fee ledger entry.
                  value:
                    account_token: my_account_token_12
                    amount: 15
                    card_token: my_credit_card_token7794
                    created_time: 2021-07-01T07:00:24.240Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      amount: 15
                      created: 2021-07-01T07:00:24.239Z
                      currency_code: USD
                      description: Late Payment Fee
                      method: FLAT
                      token: detail_token_11221
                      type: LATE_PAYMENT_FEE
                      value: 25
                    detail_token: detail_token_11221
                    group: FEE
                    id: '44445678'
                    impact_time: 2021-07-01T03:59:59.999Z
                    memo: Late payment fee
                    request_time: 2021-07-01T03:59:59.999Z
                    status: POSTED
                    token: fee_ledger_entry_token2121
                    type: account.fee.latepayment
                interest_example:
                  summary: The following code block shows a sample interest ledger
                    entry.
                  value:
                    account_token: my_account_token_12
                    amount: 2.31
                    card_token: my_credit_card_token7794
                    created_time: 2021-08-01T07:00:19.756Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      average_daily_balance: 181.67
                      created_date: 2021-08-01T07:00:19.755Z
                      currency_code: USD
                      daily_periodic_rate: 4.1068E-4
                      days_in_billing_cycle: 31
                      goto_apr: 14.99
                      interest_amount: 2.31
                      statement_balance: 208.93
                      statement_closing_date: 2021-08-01T03:59:59.999Z
                      statement_opening_date: 2021-07-01T04:00:00
                      statement_token: statement_token_75b
                      token: detail_token_96749
                      updated_date: 2021-08-01T07:00:19.755Z
                    detail_token: detail_token_96749
                    group: INTEREST
                    id: '11112222'
                    impact_time: 2021-08-01T03:59:59.999Z
                    memo: Interest charge on purchases
                    request_time: 2021-08-01T03:59:59.999Z
                    status: POSTED
                    token: interest_ledger_entry_token1111
                    type: account.interest
                purchase_example:
                  summary: The following code block shows a sample `PURCHASE` ledger
                    entry.
                  value:
                    account_token: my_account_token_12
                    amount: 9.11
                    card_token: my_credit_card_token7794
                    created_time: 2021-09-26T11:53:48.228Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: 0
                      acquirer_fee_amount: 0
                      acquirer_reference_data: 4.355106395860054E22
                      acting_user_token: user_token4632
                      amount: 9.11
                      approval_code: 946791
                      batch_number: 2021048291031352
                      card:
                        last_four: 4489
                        metadata: {
                          }
                      card_acceptor:
                        city: OAKLAND
                        country_code: US
                        mcc: 5814
                        mid: 555600244811
                        name: SWEET TREATS 0484
                        postal_code: 94612
                        state: CA
                      card_token: my_credit_card_token7794
                      clearing_record_sequence_number: 0
                      created_time: 2021-09-26T11:53:46Z
                      currency_code: USD
                      currency_conversion:
                        network:
                          conversion_rate: 1
                          original_amount: 9.11
                          original_currency_code: 840
                      duration: 378
                      fees:
                        amount: 0.19131
                        credit_debit: C
                        type: INTERCHANGE_FEE
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -9.11
                            ledger_balance: 61.7
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -9.11
                        ledger_balance: 61.7
                        pending_credits: 0
                      gpa_order:
                        amount: 9.11
                        created_time: 2021-09-25T20:59:43Z
                        currency_code: USD
                        funding:
                          amount: 9.11
                          source:
                            active: true
                            created_time: 2021-06-22T18:41:14Z
                            is_default_account: false
                            last_modified_time: 2021-06-22T18:41:14Z
                            name: My Funding Source
                            token: funding_source_token6789
                            type: programgateway
                        funding_source_token: funding_source_token6789
                        jit_funding:
                          acting_user_token: user_token4632
                          amount: 9.11
                          method: pgfs.authorization.capture
                          original_jit_funding_token: jit_funding_token4be7
                          token: jit_funding_token43a3
                          user_token: user_token4632
                        last_modified_time: 2021-09-26T11:53:47Z
                        response:
                          code: 0
                          memo: Approved or completed successfully
                        state: COMPLETION
                        token: gpa_order_token2c2c5
                        transaction_token: transaction_token42352a
                        user_token: user_token4632
                      identifier: 6457
                      issuer_interchange_amount: 0.19131
                      issuer_payment_node: 042f97a3458b59e3cce0269f66e864d8
                      issuer_received_time: 2021-09-26T11:53:46.886Z
                      network: VISA
                      network_metadata:
                        product_id: VISA_TRADITIONAL
                        program_id: ''
                      network_reference_id: 218552461989029
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: false
                        pin_present: false
                        purchase_amount_only: false
                        terminal_id: 101
                      preceding_related_transaction_token: ledger_entry_token2460
                      request_amount: 9.11
                      response:
                        code: 0
                        memo: Approved or completed successfully
                      settlement_date: 2021-09-26T00:00:00Z
                      state: COMPLETION
                      subnetwork: VISANET
                      token: detail_token_645736
                      transaction_metadata:
                        payment_channel: OTHER
                      type: authorization.clearing
                      user:
                        metadata:
                          notification_email: hello@myemail.com
                      user_token: user_token4632
                      user_transaction_time: 2021-09-25T20:59:43Z
                    detail_token: detail_token_645736
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-09-26T11:53:48.228Z
                    memo: SWEET TREATS 0484
                    related_token: ledger_entry_token2460
                    request_time: 2021-09-25T20:59:43
                    root_token: ledger_entry_token2460
                    status: POSTED
                    token: ledger_entry_token6789
                    type: authorization.clearing
                    user_token: user_token4632
              schema:
                $ref: '#/components/schemas/LedgerEntry'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account ledger entry
      tags:
        - Ledger Entries
  /credit/accounts/{account_token}/payments:
    get:
      description: |-
        Retrieve an array of payments on a credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listPayments
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve payments.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: Beginning of the date range of the payments to return.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            example: 2019-01-01
            format: date
            type: string
          style: form
        - description: End of the date range of the payments to return.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            example: 2019-01-01
            format: date
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
        - description: An array of statuses by which to filter payments.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            items:
              $ref: '#/components/schemas/PaymentStatus'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    amount: 2500
                    created_time: 2022-01-31T15:03:09.717Z
                    currency_code: USD
                    description: Account statement payment
                    hold_days: 1
                    hold_end_time: 2022-02-03T11:32:24.727Z
                    is_manually_released: false
                    metadata: \"bank_account_last_4_digits\":\"7234\\"bank_name\":\"Bank
                      Finance Plus\"
                    method: ACH
                    on_hold: false
                    payment_source_token: 4474c16b-7ba7-435b-8854-237d492e3f32
                    returned_details: null
                    status: COMPLETED
                    token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    transitions:
                      - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                        created_time: 2022-02-01T02:04:11.645Z
                        payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                        status: PROCESSING
                        token: b62d45d5-4495-4490-a898-3781229b235d
                      - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                        created_time: 2022-02-01T03:39:22.505Z
                        payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                        status: SUBMITTED
                        token: 82d79178-5c97-41c2-80e5-bd99bb6bb61c
                      - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                        created_time: 2022-01-31T15:30:45.028Z
                        payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                        status: PENDING
                        token: c2a83d12-eeff-460a-b88a-bf7a2e40b251
                      - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                        created_time: 2022-02-02T11:32:24.727Z
                        payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                        status: COMPLETED
                        token: 156b5134-b37d-49cf-89d5-7123b321ba5c
                      - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                        created_time: 2022-01-31T15:03:09.723Z
                        payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                        status: INITIATED
                        token: 64ca6c83-937c-4d37-86ae-14766bf87540
                    updated_time: 2022-02-03T12:00:30.072Z
                  - account_token: my_account_token_12
                    amount: 25
                    created_time: 2021-09-03T23:03:05.675Z
                    currency_code: USD
                    description: minimum payment
                    hold_days: 0
                    is_manually_released: false
                    method: CHECK
                    on_hold: false
                    status: COMPLETED
                    token: my_payment_25
                    transitions:
                      - account_token: my_account_token_12
                        created_time: 2021-09-03T23:03:05.683Z
                        payment_token: my_payment_25
                        status: COMPLETED
                        token: my_transition_token1234
                    updated_time: 2021-09-03T23:03:05.675Z
                end_index: 2
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/PaymentsPage'
          description: Paginated list of payments for the given token
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account payments
      tags:
        - Payments
    post:
      description: Create a new payment to apply toward a credit account's balance.
      operationId: createPayment
      parameters:
        - description: |-
            The unique identifier of the credit account for which to create a payment.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 2500
              currency_code: USD
              description: Account statement payment
              method: ACH
              payment_source_token: payment_source_token_1112
              token: payment_token_1239
            schema:
              $ref: '#/components/schemas/PaymentCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                amount: 2500
                created_time: 2022-01-31T15:03:09.717Z
                currency_code: USD
                description: Account statement payment
                hold_days: 1
                hold_end_time: 2022-02-03T11:32:24.727Z
                is_manually_released: false
                metadata: \"bank_account_last_4_digits\":\"7234\\"bank_name\":\"Bank
                  Finance Plus\"
                method: ACH
                on_hold: false
                payment_source_token: 4474c16b-7ba7-435b-8854-237d492e3f32
                refund_details: null
                returned_details: null
                status: COMPLETED
                token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                transitions:
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-02-01T02:04:11.645Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: PROCESSING
                    token: b62d45d5-4495-4490-a898-3781229b235d
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-02-01T03:39:22.505Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: SUBMITTED
                    token: 82d79178-5c97-41c2-80e5-bd99bb6bb61c
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-01-31T15:30:45.028Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: PENDING
                    token: c2a83d12-eeff-460a-b88a-bf7a2e40b251
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-02-02T11:32:24.727Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: COMPLETED
                    token: 156b5134-b37d-49cf-89d5-7123b321ba5c
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-01-31T15:03:09.723Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: INITIATED
                    token: 64ca6c83-937c-4d37-86ae-14766bf87540
                updated_time: 2022-02-03T12:00:30.072Z
              schema:
                $ref: '#/components/schemas/PaymentDetailResponse'
          description: Newly created payment or existing payment with provided payment
            token
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create account payment
      tags:
        - Payments
  /credit/accounts/{account_token}/payments/{payment_token}:
    get:
      description: Retrieve a payment for a credit account.
      operationId: retrievePayment
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve a payment.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment to retrieve.

            Send a `GET` request to `/credit/accounts/{token}/payments` to retrieve existing payment tokens.
          explode: false
          in: path
          name: payment_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                amount: 2500
                created_time: 2022-01-31T15:03:09.717Z
                currency_code: USD
                description: Account statement payment
                hold_days: 1
                hold_end_time: 2022-02-03T11:32:24.727Z
                is_manually_released: false
                metadata: \"bank_account_last_4_digits\":\"7234\\"bank_name\":\"Bank
                  Finance Plus\"
                method: ACH
                on_hold: false
                payment_source_token: 4474c16b-7ba7-435b-8854-237d492e3f32
                returned_details: null
                status: COMPLETED
                token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                transitions:
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-02-01T02:04:11.645Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: PROCESSING
                    token: b62d45d5-4495-4490-a898-3781229b235d
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-02-01T03:39:22.505Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: SUBMITTED
                    token: 82d79178-5c97-41c2-80e5-bd99bb6bb61c
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-01-31T15:30:45.028Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: PENDING
                    token: c2a83d12-eeff-460a-b88a-bf7a2e40b251
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-02-02T11:32:24.727Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: COMPLETED
                    token: 156b5134-b37d-49cf-89d5-7123b321ba5c
                  - account_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                    created_time: 2022-01-31T15:03:09.723Z
                    payment_token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
                    status: INITIATED
                    token: 64ca6c83-937c-4d37-86ae-14766bf87540
                updated_time: 2022-02-03T12:00:30.072Z
              schema:
                $ref: '#/components/schemas/PaymentDetailResponse'
          description: Payment object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account payment
      tags:
        - Payments
  /credit/accounts/{account_token}/payments/{payment_token}/releasehold:
    post:
      description: Manually release a payment hold on a credit account.
      operationId: releasePaymentHold
      parameters:
        - description: |-
            The unique identifier of the credit account on which a payment hold is being released.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment currently on hold.

            Send a `GET` request to `/credit/accounts/{account_token}/payments` to retrieve existing payment tokens.
          explode: false
          in: path
          name: payment_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                amount: 25
                created_time: 2021-09-09T22:42:35.065Z
                currency_code: USD
                description: minimum payment
                hold_days: 5
                hold_end_time: 2021-09-09T22:48:09.721Z
                is_manually_released: true
                metadata: check_number123
                method: CHECK
                on_hold: false
                status: COMPLETED
                token: my_payment_25
                transitions:
                  - account_token: account-12
                    created_time: 2021-09-09T22:42:35.068Z
                    payment_token: my_payment_25
                    status: COMPLETED
                    token: my_transition_token1234
                updated_time: 2021-09-09T22:48:09.722Z
              schema:
                $ref: '#/components/schemas/PaymentDetailResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Release payment hold
      tags:
        - Payments
  /credit/accounts/{account_token}/payments/{payment_token}/transitions:
    post:
      description: Transition a credit account payment's status to a new status.
      operationId: transitionPayment
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to transition a payment status.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment whose status you want to transition.

            Send a `GET` request to `/credit/accounts/{account_token}/payments` endpoint to retrieve existing payment tokens for a given account.
          explode: false
          in: path
          name: payment_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              status: RETURNED
            schema:
              $ref: '#/components/schemas/PaymentTransitionReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTransitionResponse'
          description: Payment Transition Response object.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Transition account payment status
      tags:
        - Payments
  /credit/accounts/{account_token}/paymentschedules:
    get:
      description: |-
        Retrieve an array of payment schedules on a specific credit account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: retrievePaymentSchedules
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve payment schedules.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: Status of the payment schedules to retrieve.
          explode: true
          in: query
          name: statuses
          required: false
          schema:
            items:
              $ref: '#/components/schemas/PaymentScheduleStatus'
            type: array
          style: form
        - description: Frequency of the payment schedules to retrieve.
          explode: true
          in: query
          name: frequency
          required: false
          schema:
            items:
              $ref: '#/components/schemas/PaymentScheduleFrequency'
            type: array
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: account1
                    amount: null
                    amount_category: REMAINING_STATEMENT_BALANCE
                    created_time: 2022-08-22T22:17:11.407Z
                    currency_code: USD
                    description: Sample payoff
                    frequency: MONTHLY
                    next_payment_impact_date: 2022-08-31
                    payment_day: PAYMENT_DUE_DAY
                    payment_source_token: source1
                    status: ACTIVE
                    token: mytoken
                    updated_time: 2022-08-22T22:17:11.407Z
                  - account_token: account1
                    amount: 100
                    amount_category: FIXED
                    created_time: 2022-07-22T22:13:31.426Z
                    currency_code: USD
                    description: Sample payment
                    frequency: ONCE
                    next_payment_impact_date: 2022-08-10
                    payment_day: PAYMENT_DUE_DAY
                    payment_source_token: source1
                    status: COMPLETED
                    token: mytoken1
                    updated_time: 2022-07-22T22:13:31.426Z
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/PaymentSchedulePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List payment schedules
      tags:
        - Payment Schedules
    post:
      description: Create a new payment schedule, either one-time or recurring.
      operationId: createPaymentSchedule
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to create a payment schedule.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 100
              amount_category: FIXED
              currency_code: USD
              description: Account statement payment
              frequency: MONTHLY
              payment_day: PAYMENT_DUE_DAY
              payment_source_token: payment_source_token_1112
              token: payment_schedule_token_1239
            schema:
              $ref: '#/components/schemas/PaymentScheduleCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: 12f10563-d5f2-11ec-889b-bd3a73e55331
                amount: 2500
                amount_category: FIXED
                created_time: 2022-01-12T15:03:09.717Z
                currency_code: USD
                description: Scheduled account payment
                frequency: ONCE
                next_payment_impact_date: 2022-01-31
                payment_source_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                status: COMPLETED
                token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
              schema:
                $ref: '#/components/schemas/PaymentScheduleResponse'
          description: Newly created payment schedule
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create payment schedule
      tags:
        - Payment Schedules
  /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}:
    get:
      description: Retrieve a single payment schedule on a specific credit account.
      operationId: retrievePaymentSchedule
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve a payment schedule.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment schedule that you want to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens.
          explode: false
          in: path
          name: payment_schedule_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: 12f10563-d5f2-11ec-889b-bd3a73e55331
                amount: 2500
                amount_category: FIXED
                created_time: 2022-01-12T15:03:09.717Z
                currency_code: USD
                description: Scheduled account payment
                frequency: ONCE
                next_payment_impact_date: 2022-01-31
                payment_source_token: 7d68f45b-1232-4283-a0ea-6b0418d37692
                status: COMPLETED
                token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
              schema:
                $ref: '#/components/schemas/PaymentScheduleResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve payment schedule
      tags:
        - Payment Schedules
  /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions:
    get:
      description: Retrieve an array of payment schedule transitions on a specific
        credit account.
      operationId: retrievePaymentScheduleTransitions
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve payment schedule transitions.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment schedule for which you want to retrieve transitions.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens.
          explode: false
          in: path
          name: payment_schedule_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_token: account1
                    created_time: 2022-08-23T11:25:34.342Z
                    payment_schedule_token: payment1
                    status: TERMINATED
                    token: transition1
                    updated_time: 2022-08-23T11:25:34.342Z
                  - account_token: account2
                    created_time: 2022-08-22T22:17:11.407Z
                    payment_schedule_token: payment2
                    status: ACTIVE
                    token: transition2
                    updated_time: 2022-08-22T22:17:11.407Z
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/PaymentScheduleTransitionPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve payment schedule transitions
      tags:
        - Payment Schedules
    post:
      description: Transition a payment schedule to a new status.
      operationId: createPaymentScheduleTransition
      parameters:
        - description: |-
            The unique identifier of the credit account on which to transition a payment schedule.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment schedule whose status is to transition.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens.
          explode: false
          in: path
          name: payment_schedule_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              status: TERMINATED
              token: 4749ab00-fec1-471c-ac5b-b8d31d06d7e4
            schema:
              $ref: '#/components/schemas/PaymentScheduleTransitionCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: credit_account_token_1232
                created_time: 2022-01-12T15:03:09.717Z
                payment_schedule_token: payment_schedule_token_1232
                status: TERMINATED
                token: payment_schedule_transition_token_111
                updated_time: 2022-01-12T15:03:09.717Z
              schema:
                $ref: '#/components/schemas/PaymentScheduleTransitionResponse'
          description: Newly created payment schedule transition
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create payment schedule transition
      tags:
        - Payment Schedules
  /credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions/{token}:
    get:
      description: Retrieve a single payment schedule transition on a specific credit
        account.
      operationId: retrievePaymentScheduleTransition
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve a payment schedule transition.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the payment schedule you want to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens.
          explode: false
          in: path
          name: payment_schedule_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment schedule token
          style: simple
        - description: |-
            The unique identifier of the payment schedule transition you want to retrieve.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules/{payment_schedule_token}/transitions` to retrieve existing payment schedule transition tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment schedule transition token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: account1
                created_time: 2022-08-22T22:17:11.407Z
                payment_schedule_token: payment1
                status: ACTIVE
                token: transition2
                updated_time: 2022-08-22T22:17:11.407Z
              schema:
                $ref: '#/components/schemas/PaymentScheduleTransitionResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve payment schedule transition
      tags:
        - Payment Schedules
  /credit/accounts/{account_token}/periodicfeeschedules:
    get:
      description: Get all active and upcoming periodic fee schedules of an account
      operationId: getPeriodicFeeSchedules
      parameters:
        - description: account token
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicFeeSchedulePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get all active and upcoming periodic fee schedules of an account
      tags:
        - Account
  /credit/accounts/{account_token}/rewards:
    post:
      description: Create a reward for an existing credit account.
      operationId: createReward
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to create a reward.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              account_token: my_account_token_12
              amount: 20
              created_time: 2021-09-03T22:53:57.895Z
              currency_code: USD
              description: $20 reward
              token: my_rewards_token1234
              type: CASH_BACK
              updated_time: 2021-09-03T22:53:57.895Z
            schema:
              $ref: '#/components/schemas/RewardCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                amount: 20
                created_time: 2021-09-03T22:53:57.895Z
                currency_code: USD
                description: $20 reward
                token: my_rewards_token1234
                type: CASH_BACK
                updated_time: 2021-09-03T22:53:57.895Z
              schema:
                $ref: '#/components/schemas/RewardResponse'
          description: Newly created reward
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create account reward
      tags:
        - Account Rewards
  /credit/accounts/{account_token}/statements:
    get:
      description: |-
        Retrieve an array of statement summaries tied to a cardholder's account.

        The statement summary, which is a summary of account activity on a statement, provides account holders with a synopsis of activity that occurred on the account during a specified billing cycle.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
        You can use optional query parameters to return a statement based on its exact opening or closing date, or a statement whose closing date falls within a range of dates.
      operationId: getStatementSummariesByAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve statement summaries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            Returns statements with a matching opening date.

            If both `start_date` and `end_date` are specified, statements whose closing date falls between the start and end dates are returned.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            format: date-time
            type: string
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
          style: form
        - description: |-
            Returns statements with a matching closing date.

            If both `start_date` and `end_date` are specified, statements whose closing date falls between the start and end dates are returned.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            format: date-time
            type: string
            x-allowableValues: 'Format: yyyy-MM-ddThh:mm:ssZ'
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_token: my_account_token_12
                    available_credit: 800
                    closing_balance: 2000
                    closing_date: 2021-07-01T00:27:09Z
                    created_time: 2021-07-01T00:27:09Z
                    credit_limit: 10000
                    credits: 0
                    cycle_type: BEGINNING_REVOLVING
                    days_in_billing_cycle: 31
                    fees: 0
                    interest: 0
                    opening_balance: 1000
                    opening_date: 2021-07-01T00:27:09Z
                    past_due_amount: 0
                    payments: 0
                    purchases: 200
                    token: acc0544e-4075-fe67-93dd-6b5cd443adb1
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/StatementSummaryPage'
          description: A JSON object containing a list of Statement Summaries
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account statement summaries
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/files:
    get:
      description: Retrieve an array of statement files for a specific credit account.
      operationId: getStatementFilesByAccount
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve statement files.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: The start date of the statement files to return.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            example: 2020-01-01T00:00:00Z
            format: date-time
            type: string
          style: form
        - description: The end date of the statement files to return.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            example: 2020-03-01T03:59:59Z
            format: date-time
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_token: credit_account_token1234
                    closing_date: 2021-07-31T00:27:09
                    opening_date: 2021-07-01T00:27:09
                    signed_url: <signed_https_url_pointing_to_a_resource_on_S3>
                    statement_summary_token: 37f07818-2a2c-4c82-a721-a479936d5b2e
                    token: file_token
                    type: STATEMENT_PDF
                  - account_token: credit_account_token4567
                    closing_date: 2021-06-30T00:27:09
                    opening_date: 2021-06-01T00:27:09
                    signed_url: <signed_https_url_pointing_to_a_resource_on_S3>
                    statement_summary_token: 79938791-5e15-456a-bf13-c39142c9a763
                    token: file_token
                    type: STATEMENT_PDF
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/StatementFilePage'
          description: A JSON object containing a list of Statement Files
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List files for an account
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}:
    get:
      description: Retrieve a statement summary for a credit account.
      operationId: retrieveStatementSummary
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve a statement summary.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary to retrieve.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                available_credit: 800
                closing_balance: 2000
                closing_date: 2021-07-01T00:27:09Z
                created_time: 2021-07-01T00:27:09Z
                credit_limit: 10000
                credits: 0
                cycle_type: BEGINNING_REVOLVING
                days_in_billing_cycle: 31
                fees: 0
                interest: 0
                opening_balance: 1000
                opening_date: 2021-07-01T00:27:09Z
                past_due_amount: 0
                payments: 0
                purchases: 200
                token: acc0544e-4075-fe67-93dd-6b5cd443adb1
              schema:
                $ref: '#/components/schemas/StatementSummary'
          description: A JSON object containing statement_summary information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account statement summary
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/files:
    get:
      description: Retrieve an array of statement files for a specific statement summary.
      operationId: retrieveStatementFiles
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve statement files for a statement summary.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary whose statement files you want to retrieve.

            Send a `GET` request to `/credit/accounts/{token}/statements` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
        - description: The number of statement files to return.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index from which to begin returning files.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_token: credit_account_token1234
                    closing_date: 2021-07-31T00:27:09
                    opening_date: 2021-07-01T00:27:09
                    signed_url: <signed_https_url_pointing_to_a_resource_on_S3>
                    statement_summary_token: 37f07818-2a2c-4c82-a721-a479936d5b2e
                    token: file_token
                    type: STATEMENT_PDF
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/StatementFilePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List files for a statement summary
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/interestcharges:
    get:
      description: Retrieve the interest charges on a credit account's statement summary.
      operationId: retrieveStatementInterestCharges
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve the statement interest charges.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary from which to retrieve the interest charges.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: credit_account_token1234
                data:
                  - amount: 2.31
                    apr_type: GO_TO
                    apr_value: 14.99
                    balance_subject_to_interest_rate: 181.67
                    balance_type: PURCHASE
                statement_summary_token: statement_summary_token1234
                user_token: user_token1234
              schema:
                $ref: '#/components/schemas/StatementInterestChargesPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account statement interest charges
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/journalentries:
    get:
      description: |-
        Retrieve an array of journal entries on a credit account's statement summary.

        This endpoint supports <</core-api/sorting-and-pagination, sorting>>.
      operationId: listStatementJournalEntries
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve the statement journal entries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary from which to retrieve journal entries.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
        - description: Specifies the number of journal entries to return.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Specifies the sort order index from which to begin returning
            journal entries.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: Embeds the specified object into the response.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            enum:
              - detailObject
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 3
                data:
                  - account_token: my_account_token_12
                    amount: 2.31
                    card_token: my_credit_card_token7794
                    created_time: 2021-08-01T07:00:19.756Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      average_daily_balance: 181.67
                      created_date: 2021-08-01T07:00:19.755Z
                      currency_code: USD
                      daily_periodic_rate: 4.1068E-4
                      days_in_billing_cycle: 31
                      goto_apr: 14.99
                      interest_amount: 2.31
                      statement_balance: 208.93
                      statement_closing_date: 2021-08-01T03:59:59.999Z
                      statement_opening_date: 2021-07-01T04:00:00
                      statement_token: statement_token_75b
                      token: detail_token_96749
                      updated_date: 2021-08-01T07:00:19.755Z
                    detail_token: detail_token_96749
                    group: INTEREST
                    id: '11112222'
                    impact_time: 2021-08-01T03:59:59.999Z
                    memo: Interest charge on purchases
                    request_time: 2021-08-01T03:59:59.999Z
                    status: POSTED
                    token: interest_journal_entry_token1111
                    type: account.interest
                    user_token: user_token1111
                  - account_token: my_account_token_12
                    amount: 15
                    card_token: my_credit_card_token7794
                    created_time: 2021-07-01T07:00:24.240Z
                    currency_code: USD
                    detail_object:
                      account_token: my_account_token_12
                      amount: 15
                      created: 2021-07-01T07:00:24.239Z
                      currency_code: USD
                      description: Late Payment Fee
                      method: FLAT
                      token: detail_token_11221
                      type: LATE_PAYMENT_FEE
                      value: 25
                    detail_token: detail_token_11221
                    group: FEE
                    id: '44445678'
                    impact_time: 2021-07-01T03:59:59.999Z
                    memo: Late payment fee
                    request_time: 2021-07-01T03:59:59.999Z
                    status: POSTED
                    token: fee_journal_entry_token2121
                    type: account.fee.payment.late
                    user_token: user_token2121
                  - account_token: my_account_token_12
                    amount: 9.11
                    card_token: my_credit_card_token7794
                    created_time: 2021-09-26T11:53:48.228Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: 0
                      acquirer_fee_amount: 0
                      acquirer_reference_data: 4.355106395860054E22
                      acting_user_token: user_token4632
                      amount: 9.11
                      approval_code: 946791
                      batch_number: 2021048291031352
                      card:
                        last_four: 4489
                        metadata: {
                          }
                      card_acceptor:
                        city: OAKLAND
                        country_code: US
                        mcc: 5814
                        mid: 555600244811
                        name: SWEET TREATS 0484
                        postal_code: 94612
                        state: CA
                      card_token: my_credit_card_token7794
                      clearing_record_sequence_number: 0
                      created_time: 2021-09-26T11:53:46Z
                      currency_code: USD
                      currency_conversion:
                        network:
                          conversion_rate: 1
                          original_amount: 9.11
                          original_currency_code: 840
                      duration: 378
                      fees:
                        amount: 0.19131
                        credit_debit: C
                        type: INTERCHANGE_FEE
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -9.11
                            ledger_balance: 61.7
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -9.11
                        ledger_balance: 61.7
                        pending_credits: 0
                      gpa_order:
                        amount: 9.11
                        created_time: 2021-09-25T20:59:43Z
                        currency_code: USD
                        funding:
                          amount: 9.11
                          source:
                            active: true
                            created_time: 2021-06-22T18:41:14Z
                            is_default_account: false
                            last_modified_time: 2021-06-22T18:41:14Z
                            name: My Funding Source
                            token: funding_source_token6789
                            type: programgateway
                        funding_source_token: funding_source_token6789
                        jit_funding:
                          acting_user_token: user_token4632
                          amount: 9.11
                          method: pgfs.authorization.capture
                          original_jit_funding_token: jit_funding_token4be7
                          token: jit_funding_token43a3
                          user_token: user_token4632
                        last_modified_time: 2021-09-26T11:53:47Z
                        response:
                          code: 0
                          memo: Approved or completed successfully
                        state: COMPLETION
                        token: gpa_order_token2c2c5
                        transaction_token: transaction_token42352a
                        user_token: user_token4632
                      identifier: 6457
                      issuer_interchange_amount: 0.19131
                      issuer_payment_node: 042f97a3458b59e3cce0269f66e864d8
                      issuer_received_time: 2021-09-26T11:53:46.886Z
                      network: VISA
                      network_metadata:
                        product_id: VISA_TRADITIONAL
                        program_id: ''
                      network_reference_id: 218552461989029
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: false
                        pin_present: false
                        purchase_amount_only: false
                        terminal_id: 101
                      preceding_related_transaction_token: journal_entry_token2460
                      request_amount: 9.11
                      response:
                        code: 0
                        memo: Approved or completed successfully
                      settlement_date: 2021-09-26T00:00:00Z
                      state: COMPLETION
                      subnetwork: VISANET
                      token: detail_token_645736
                      transaction_metadata:
                        payment_channel: OTHER
                      type: authorization.clearing
                      user:
                        metadata:
                          notification_email: hello@myemail.com
                      user_token: user_token4632
                      user_transaction_time: 2021-09-25T20:59:43Z
                    detail_token: detail_token_645736
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-09-26T11:53:48.228Z
                    memo: SWEET TREATS 0484
                    related_token: journal_entry_token2460
                    request_time: 2021-09-25T20:59:43
                    root_token: journal_entry_token2460
                    status: POSTED
                    token: purchase_journal_entry_token6789
                    type: authorization.clearing
                    user_token: user_token12
                end_index: 4
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/JournalEntriesPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account statement journal entries
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/ledgerentries:
    get:
      description: |-
        [IMPORTANT]
        This feature is deprecated.
        It has been replaced by statement journal entries.
        To list statement journal entries, see <</core-api/credit-account-journal-entries#listStatementJournalEntries, List account statement journal entries>>.

        Retrieve an array of ledger entries on a credit account's statement summary.

        This endpoint supports <</core-api/sorting-and-pagination, sorting>>.
      operationId: listStatementLedgerEntries
      parameters:
        - description: |-
            The unique identifier of the credit account for which to retrieve the statement ledger entries.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary from which to retrieve ledger entries.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
        - description: Embeds the specified object into the response.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            enum:
              - detailObject
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                - account_token: my_account_token_12
                  amount: 9.11
                  card_token: my_credit_card_token7794
                  created_time: 2021-09-26T11:53:48.228Z
                  currency_code: USD
                  detail_object:
                    acquirer:
                      system_trace_audit_number: 0
                    acquirer_fee_amount: 0
                    acquirer_reference_data: 4.355106395860054E22
                    acting_user_token: user_token4632
                    amount: 9.11
                    approval_code: 946791
                    batch_number: 2021048291031352
                    card:
                      last_four: 4489
                      metadata: {
                        }
                    card_acceptor:
                      city: OAKLAND
                      country_code: US
                      mcc: 5814
                      mid: 555600244811
                      name: SWEET TREATS 0484
                      postal_code: 94612
                      state: CA
                    card_token: my_credit_card_token7794
                    clearing_record_sequence_number: 0
                    created_time: 2021-09-26T11:53:46Z
                    currency_code: USD
                    currency_conversion:
                      network:
                        conversion_rate: 1
                        original_amount: 9.11
                        original_currency_code: 840
                    duration: 378
                    fees:
                      amount: 0.19131
                      credit_debit: C
                      type: INTERCHANGE_FEE
                    gpa:
                      available_balance: 0
                      balances:
                        USD:
                          available_balance: 0
                          credit_balance: 0
                          currency_code: USD
                          impacted_amount: -9.11
                          ledger_balance: 61.7
                          pending_credits: 0
                      credit_balance: 0
                      currency_code: USD
                      impacted_amount: -9.11
                      ledger_balance: 61.7
                      pending_credits: 0
                    gpa_order:
                      amount: 9.11
                      created_time: 2021-09-25T20:59:43Z
                      currency_code: USD
                      funding:
                        amount: 9.11
                        source:
                          active: true
                          created_time: 2021-06-22T18:41:14Z
                          is_default_account: false
                          last_modified_time: 2021-06-22T18:41:14Z
                          name: My Funding Source
                          token: funding_source_token6789
                          type: programgateway
                      funding_source_token: funding_source_token6789
                      jit_funding:
                        acting_user_token: user_token4632
                        amount: 9.11
                        method: pgfs.authorization.capture
                        original_jit_funding_token: jit_funding_token4be7
                        token: jit_funding_token43a3
                        user_token: user_token4632
                      last_modified_time: 2021-09-26T11:53:47Z
                      response:
                        code: 0
                        memo: Approved or completed successfully
                      state: COMPLETION
                      token: gpa_order_token2c2c5
                      transaction_token: transaction_token42352a
                      user_token: user_token4632
                    identifier: 6457
                    issuer_interchange_amount: 0.19131
                    issuer_payment_node: 042f97a3458b59e3cce0269f66e864d8
                    issuer_received_time: 2021-09-26T11:53:46.886Z
                    network: VISA
                    network_metadata:
                      product_id: VISA_TRADITIONAL
                      program_id: ''
                    network_reference_id: 218552461989029
                    pos:
                      is_installment: false
                      is_recurring: false
                      partial_approval_capable: false
                      pin_present: false
                      purchase_amount_only: false
                      terminal_id: 101
                    preceding_related_transaction_token: ledger_entry_token2460
                    request_amount: 9.11
                    response:
                      code: 0
                      memo: Approved or completed successfully
                    settlement_date: 2021-09-26T00:00:00Z
                    state: COMPLETION
                    subnetwork: VISANET
                    token: detail_token_645736
                    transaction_metadata:
                      payment_channel: OTHER
                    type: authorization.clearing
                    user:
                      metadata:
                        notification_email: hello@myemail.com
                    user_token: user_token4632
                    user_transaction_time: 2021-09-25T20:59:43Z
                  detail_token: detail_token_645736
                  group: PURCHASE
                  id: '12345678'
                  impact_time: 2021-09-26T11:53:48.228Z
                  memo: SWEET TREATS 0484
                  related_token: ledger_entry_token2460
                  request_time: 2021-09-25T20:59:43
                  root_token: ledger_entry_token2460
                  status: POSTED
                  token: ledger_entry_token6789
                  type: authorization.clearing
              schema:
                items:
                  $ref: '#/components/schemas/LedgerEntry'
                type: array
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List account statement ledger entries
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/paymentinfo:
    get:
      description: Retrieve the payment information on a credit account's statement
        summary.
      operationId: retrieveStatementPaymentInfo
      parameters:
        - description: |-
            The unique identifier of the credit account for which you want to retrieve the statement payment information.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary from which to retrieve the payment information.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2021-07-01T00:27:09Z
                minimum_payment_due: 25
                new_statement_balance: 2000
                payment_cutoff_date: 2021-07-01T00:27:09Z
                payment_due_date: 2021-07-01T00:27:09Z
                statement_summary_token: acc0544e-4075-fe67-93dd-6b5cd443adb1
                three_year_savings: 0
                token: 5e3182dc-fc8f-4a83-8038-8808297ca0ca
                warnings:
                  - disclosure: NEGATIVE_OR_NO_AMORTIZATION
                    interest_paid: 0
                    monthly_payment: 0
                    pay_off_period: 1
                    period_type: MONTH
                    total_paid: 0
                    type: MIN_PAYMENT
              schema:
                $ref: '#/components/schemas/StatementPaymentInfo'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account statement payment information
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/rewards:
    get:
      description: Retrieve the rewards on a credit account's statement summary.
      operationId: retrieveStatementReward
      parameters:
        - description: |-
            The unique identifier of the credit account from which to retrieve statement rewards.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary from which to retrieve rewards.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2022-09-01T00:27:09Z
                current_billing_cycle_reward: 0
                previous_billing_cycle_reward: 0
                token: account_statement_reward1234
              schema:
                $ref: '#/components/schemas/StatementReward'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account statement rewards
      tags:
        - Statements
  /credit/accounts/{account_token}/statements/{statement_summary_token}/yeartodate:
    get:
      description: Retrieve the year-to-date fee and interest totals on a credit account's
        statement summary.
      operationId: retrieveYearToDateForStatementSummary
      parameters:
        - description: |-
            The unique identifier of the credit account from which to retrieve statement year-to-date totals.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          explode: false
          in: path
          name: account_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing account token
          style: simple
        - description: |-
            The unique identifier of the statement summary from which to retrieve year-to-date totals.

            Send a `GET` request to `/credit/accounts/{token}/statements/` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: statement_summary_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing statement summary token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: my_account_token_12
                created_time: 2021-07-01T00:27:09Z
                statement_token: c07918af-2ffa-4da9-972c-6b3d24b2a772
                token: c40b683b-ad88-51b6-a1fa-bc9961bc011e
                total_fees: 0
                total_interest: 0
              schema:
                $ref: '#/components/schemas/YearToDate'
          description: A JSON object containing year-to-date information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve account statement year-to-date totals
      tags:
        - Statements
  /credit/applications:
    post:
      description: Create a new application.
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              any_non_taxable_income: false
              bundle_token: bundle_token_1111
              e_disclosure_tracking_token: tracking_token_X3NoybmxnaCIsEtQ0mZpbGZ
              monthly_mortgage_or_rent: 1200
              primary_income_source: SELF_EMPLOYED
              privacy_policy_tracking_token: tracking_token_ImlzcyI6ImxJQ1kiLD0VufJ
              residence_type: OWN
              rewards_disclosure_pre_terms_tracking_token: tracking_token_ZjNmZ0MzIyNDYsImlhdCI6M
              soct_tracking_token: tracking_token_HAiOjE2Y1NzIyMjYri3fPDg
              token: application_token_1111
              total_annual_income: 95000
              user_token: user_token_1111
            schema:
              $ref: '#/components/schemas/CreateApplicationsRequest'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                account_token: account_token_1111
                any_non_taxable_income: false
                bundle_token: bundle_token_1111
                created_date: 2022-07-07T19:47:46.268Z
                decision_token: decision_token_1111
                e_disclosure_accepted_at: 2022-07-07T19:47:46.184Z
                monthly_mortgage_or_rent: 1200
                primary_income_source: SELF_EMPLOYED
                privacy_policy_accepted_at: 2022-07-07T19:47:46.188Z
                residence_type: OWN
                rewards_disclosure_pre_terms_accepted_at: 2022-07-07T19:47:46.187Z
                soct_accepted_at: 2022-07-07T19:47:46.181Z
                state: CREATED
                token: application_token_1111
                total_annual_income: 95000
                updated_date: 2022-07-07T19:47:46.268Z
                user_token: user_token_1111
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create application
      tags:
        - Applications
  /credit/applications/files:
    get:
      description: |-
        Retrieve an array of files on a bundle or application

        Each top-level object returned in the array contains the fields documented in the <</core-api/credit-applications#_response_body_4, response body>>. The name of each object is its corresponding file type:

        * `BENEFITS_DISCLOSURE`
        * `CARD_MEMBER_AGREEMENT`
        * `E_DISCLOSURE`
        * `NOAA`
        * `PRIVACY_POLICY`
        * `REWARDS_DISCLOSURE_PRE_TERMS`
        * `REWARDS_DISCLOSURE_POST_TERMS`
        * `SOCT`
        * `TERMS_SCHEDULE`
      operationId: retrieveFiles
      parameters:
        - description: |-
            Unique identifier of the bundle whose files you want to retrieve.

            The following file types are returned with the `bundle_token`:

            * `CARD_MEMBER_AGREEMENT`
            * `E_DISCLOSURE`
            * `PRIVACY_POLICY`
            * `REWARDS_DISCLOSURE_PRE_TERMS`
            * `REWARDS_DISCLOSURE_POST_TERMS`
            * `SOCT`
          explode: true
          in: query
          name: bundle_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: form
        - description: |-
            Unique identifier of the application whose files you want to retrieve.

            The following file types are returned with the `application_token`:

            * `BENEFITS_DISCLOSURE`
            * `CARD_MEMBER_AGREEMENT`
            * `E_DISCLOSURE`
            * `NOAA`
            * `PRIVACY_POLICY`
            * `REWARDS_DISCLOSURE_PRE_TERMS`
            * `REWARDS_DISCLOSURE_POST_TERMS`
            * `SOCT`
            * `TERMS_SCHEDULE`
          explode: true
          in: query
          name: application_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing application token
          style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                application_token_example:
                  summary: |-
                    The following code block shows the files returned on an application if the application is approved.
                    The name of each top-level object is its corresponding file type.
                  value:
                    BENEFITS_DISCLOSURE:
                      file_type: BENEFITS_DISCLOSURE
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_yIxO2NvZY4YjEiLCJzi1lNTB
                    CARD_MEMBER_AGREEMENT:
                      file_type: CARD_MEMBER_AGREEMENT
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_c1YjY2NjBlOGEiLCJzdGF0Z
                    E_DISCLOSURE:
                      file_type: E_DISCLOSURE
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                    PRIVACY_POLICY:
                      file_type: PRIVACY_POLICY
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                    REWARDS_DISCLOSURE_POST_TERMS:
                      file_type: REWARDS_DISCLOSURE_POST_TERMS
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_eyJraWQiOiJtODVlYS1I6I
                    REWARDS_DISCLOSURE_PRE_TERMS:
                      file_type: REWARDS_DISCLOSURE_PRE_TERMS
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                    SOCT:
                      file_type: SOCT
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                    TERMS_SCHEDULE:
                      file_type: TERMS_SCHEDULE
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_e4MjgtnaCIsyIJTkciLCJ0e
                bundle_token_example:
                  summary: |-
                    The following code block shows the files returned on a bundle.
                    The name of each top-level object is its corresponding file type.
                  value:
                    CARD_MEMBER_AGREEMENT:
                      file_type: CARD_MEMBER_AGREEMENT
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_c1YjY2NjBlOGEiLCJzdGF0Z
                    E_DISCLOSURE:
                      file_type: E_DISCLOSURE
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_X3NoybmxnaCIsEtQ0mZpbGZ
                    PRIVACY_POLICY:
                      file_type: PRIVACY_POLICY
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_ImlzcyI6ImxJQ1kiLD0VufJ
                    REWARDS_DISCLOSURE_POST_TERMS:
                      file_type: REWARDS_DISCLOSURE_POST_TERMS
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_eyJraWQiOiJtODVlYS1I6I
                    REWARDS_DISCLOSURE_PRE_TERMS:
                      file_type: REWARDS_DISCLOSURE_PRE_TERMS
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_ZjNmZ0MzIyNDYsImlhdCI6M
                    SOCT:
                      file_type: SOCT
                      links:
                        html: https://url.com/link_to_html_file
                        json: https://url.com/link_to_json_file
                        pdf: https://url.com/link_to_pdf_file
                      tracking_token: tracking_token_HAiOjE2Y1NzIyMjYri3fPDg
              schema:
                $ref: '#/components/schemas/fileMapResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: File does not exist
        '500':
          content: {
            }
          description: Server error
      summary: List files on a bundle or application
      tags:
        - Applications
  /credit/applications/files/{type}:
    get:
      description: Retrieve a specific type of file on a bundle or application.
      operationId: getFileByType
      parameters:
        - description: |-
            The type of file to retrieve.

            * `SOCT` - The Summary of Credit Terms (SOCT), which outlines the interest rates, interest charges, and fees associated with the credit account being offered to the user.
            * `REWARDS_DISCLOSURE_PRE_TERMS` - The Rewards Disclosure Pre-terms, which discloses detailed information about the rewards program on the credit account being offered to the user before a decision is rendered on their application.
            * `REWARDS_DISCLOSURE_POST_TERMS` - The Rewards Disclosure Post-terms, which discloses detailed information about the rewards program on the user's credit account if their application is approved.
            * `BENEFITS_DISCLOSURE` - The Benefits Disclosure, which which is given to a user if their application is approved and discloses detailed information about the benefits on the user's credit account.
            * `CARD_MEMBER_AGREEMENT` - The Card Member Agreement, which specifies the terms and conditions of the user's credit account, including the interest rates, interest charges, fees, minimum payment calculations, and more.
            * `PRIVACY_POLICY` - The Privacy Policy, which explains how the information on the user's application is collected, handled, and processed.
            * `E_DISCLOSURE` - The eDisclosure, which states that the user has agreed to receive disclosures electronically.
            * `TERMS_SCHEDULE` - The Terms Schedule, which is given to a user if their application is approved and specifies the interest rate details on the user's credit account.
            * `NOAA` - The Notice of Adverse Action (NOAA), which is given to a user if their application is declined and informs them of the specific reasons why they were denied a credit account.
          explode: false
          in: path
          name: type
          required: true
          schema:
            $ref: '#/components/schemas/FileType'
          style: simple
        - description: |-
            Unique identifier of the bundle on which you want to retrieve a file.

            Required if retrieving one of the following file types:

            * `CARD_MEMBER_AGREEMENT`
            * `E_DISCLOSURE`
            * `PRIVACY_POLICY`
            * `REWARDS_DISCLOSURE_PRE_TERMS`
            * `REWARDS_DISCLOSURE_POST_TERMS`
            * `SOCT`
          explode: true
          in: query
          name: bundle_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: form
        - description: |-
            Unique identifier of the application on which you want to retrieve a file.

            Required if retrieving one of the following files:

            * `BENEFITS_DISCLOSURE`
            * `NOAA`
            * `TERMS_SCHEDULE`
          explode: true
          in: query
          name: application_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing application token
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                file_type: NOAA
                links:
                  html: https://url.com/link_to_html_file
                  json: https://url.com/link_to_json_file
                  pdf: https://url.com/link_to_pdf_file
                tracking_token: tracking_token_Cf7xNsl6vGtHn%2BcTH96zdf
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: File does not exist
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve file on a bundle or application
      tags:
        - Applications
  /credit/applications/{token}:
    get:
      description: Retrieve a specific application.
      operationId: retrieveApplication
      parameters:
        - description: Unique identifier of the application to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing application token
          style: simple
        - description: Embeds the specified object into the response.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ExpandObjects'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: account_token_1111
                any_non_taxable_income: false
                bundle_token: bundle_token_1111
                created_date: 2022-07-07T19:47:46Z
                decision_model:
                  application_token: 0467ff1b-798a-492a-a743-f490a3ccd892
                  card_product_level: TRADITIONAL
                  created_date: 2022-07-07T19:47:47Z
                  credit_bureau:
                    address:
                      address1: 2 Baldwin Place
                      address2: P.O. Box 1000
                      city: Chester
                      state: PA
                      zip: '19016'
                    name: TransUnion Customer Relations
                    phone_number: 1-800-888-4213
                    website: www.transunion.com
                  credit_limit: 15000
                  credit_score: 821
                  credit_score_date: 2022-07-07
                  decision_date: 2022-07-07T00:00:00Z
                  decision_id: ee7325e7-d13e-40db-8498-a784b76adc7d
                  denial_reasons:
                    - '[]'
                  margin: 20
                  prime_rate: 3.25
                  purchase_apr: 23.25
                  received_best_rate: false
                  score_factors:
                    - '[TOO FEW ACCOUNTS CURRENTLY PAID AS AGREED'
                    - ' LACK OF RECENT INSTALLMENT LOAN INFORMATION'
                    - ' TOO MANY ACCOUNTS WITH BALANCES'
                    - ' LENGTH OF TIME REVOLVING ACCOUNTS HAVE BEEN ESTABLISHED]'
                  score_range: 300-850
                  status: APPROVED
                  submitted_date_time: 2022-07-07T19:47:47Z
                  token: b660b53c-0971-4ca2-b2cf-fc8739e860da
                  user_token: user_token_1111
                decision_token: decision_token_1111
                e_disclosure_accepted_at: 2022-07-07T19:47:46Z
                monthly_mortgage_or_rent: 1200
                primary_income_source: SELF_EMPLOYED
                privacy_policy_accepted_at: 2022-07-07T19:47:46Z
                residence_type: OWN
                rewards_disclosure_pre_terms_accepted_at: 2022-07-07T19:47:46Z
                soct_accepted_at: 2022-07-07T19:47:46Z
                state: APPROVED
                token: application_token_1111
                total_annual_income: 95000
                updated_date: 2022-07-07T19:48:16Z
                user_token: user_token_1111
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Application does not exist
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve application
      tags:
        - Applications
  /credit/applications/{token}/transitions:
    get:
      description: Retrieve an array of transitions on a specific application.
      operationId: pageApplicationTransitions
      parameters:
        - description: The unique identifier of the application for which you want
            to retrieve transitions.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsTransitionPage'
          description: Success
        '404':
          content: {
            }
          description: Application does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: List application transitions
      tags:
        - Applications
    post:
      description: Transition the current state of an application to a new state.
      operationId: transitionApplication
      parameters:
        - description: Unique identifier of the application whose state you want to
            transition.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing application token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              application_state: ACCEPTED
              benefits_disclosure_tracking_token: tracking_token_JXRapWJL2BI4EwdNqjBBvpI5
              card_member_agreement_tracking_token: tracking_token_c1YjY2NjBlOGEiLCJzdGF0Z
              rewards_disclosure_post_terms_tracking_token: tracking_token_ZjNmZ0MzIyNDYsImlhdCI
              terms_schedule_tracking_token: tracking_token_CpkwJCoqzucVnJNwj5BsKC9e5
            schema:
              $ref: '#/components/schemas/ApplicationTransitionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                application_token: application_token_1111
                created_time: 2019-08-24T14:15:22Z
                original_status: APPROVED
                status: ACCEPTED
                token: app_state_transition_token_1111
              schema:
                $ref: '#/components/schemas/ApplicationTransitionResponse'
          description: Successful application transition.
        '400':
          content: {
            }
          description: User input error/Bad request/Invalid Ack Token
        '404':
          content: {
            }
          description: Application does not exist
        '500':
          content: {
            }
          description: Server error
      summary: Transition application state
      tags:
        - Applications
  /credit/bundles:
    get:
      description: |-
        Retrieve an array of bundles.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listBundles
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
        - description: An array of statuses by which to filter bundles.
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              $ref: '#/components/schemas/BundleResourceStatus'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - apr_policy_detail:
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A golden APR policy
                      effective_date: 2022-05-01
                      name: Gold APR Policy
                      purchases:
                        external_token: my_external_purchase_token1234
                        name: A purchase at a merchant
                        tiers:
                          - apr: 0
                            margin_rate: 1
                          - apr: 0
                            margin_rate: 5
                      token: my_apr_policy_token_1234
                      updated_time: 2022-04-05T16:04:48.643Z
                    apr_policy_token: my_apr_policy_token_1234
                    created_time: 2022-04-01T23:41:58.802Z
                    credit_product_policy_detail:
                      card_products:
                        - level: TRADITIONAL
                          network: VISA
                          token: my_card_product_token1234
                      classification: CONSUMER
                      created_time: 2022-04-01T23:41:58.802Z
                      credit_line:
                        max: 3500
                        min: 50
                      currency_code: USD
                      description: A golden credit product policy
                      interest_calculation:
                        application_of_credits:
                          cycle_type: END_REVOLVING
                          day: 15
                        day_count: ACTUAL
                        exclude_tran_types:
                          - ANNUAL_FEE
                          - LATE_PAYMENT_FEE
                          - CASH_BACK_STATEMENT_CREDIT
                        grace_days_application: NEXT_CYCLE_DATE
                        interest_application:
                          - PRINCIPAL
                          - FEES
                        interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                        method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                        minimum_interest: 1
                      name: Gold Credit Product Policy
                      payments:
                        allocation_order:
                          - INTEREST
                          - FEES
                          - PRINCIPAL
                        billing_cycle_day: 1
                        due_day: 31
                        min_payment_calculation:
                          include_overlimit_amount: true
                          include_past_due_amount: false
                          min_payment_flat_amount: 20
                          min_payment_percentage:
                            include_fees_charged:
                              - LATE_PAYMENT_FEE
                            include_interest_charged: false
                            percentage_of_balance: 1
                      product_sub_type: CREDIT_CARD
                      product_type: REVOLVING
                      token: my_credit_product_policy_token_1234
                      updated_time: 2022-04-05T16:04:48.643Z
                      usage:
                        - PURCHASE
                    credit_product_policy_token: my_credit_product_policy_token_1234
                    description: A golden
                    document_policy_detail:
                      account_statement:
                        template_token: an_account_statement_template_token1234
                        template_urls:
                          html: https://url.com/an_account_statement_template_token1234.html
                      benefits_disclosure:
                        asset_token: a_benefits_disclosure_asset_token1234
                        asset_urls:
                          html: https://url.com/a_benefits_disclosure_asset_token1234.html
                          pdf: https://url.com/a_benefits_disclosure_asset_token1234.pdf
                          png: https://url.com/a_benefits_disclosure_asset_token1234.png
                      card_member_agreement:
                        asset_token: a_card_member_agreement_asset_token1234
                        asset_urls:
                          html: https://url.com/a_card_member_agreement_asset_token1234.html
                          pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                          png: https://url.com/a_card_member_agreement_asset_token1234.png
                      created_time: 2022-04-01T23:41:58.802Z
                      e_disclosure:
                        asset_token: a_e_disclosure_asset_token1234
                        asset_urls:
                          html: https://url.com/a_e_disclosure_asset_token1234.html
                          pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                          png: https://url.com/a_e_disclosure_asset_token1234.png
                      name: My Document Policy
                      notice_of_adverse_action:
                        template_token: a_notice_of_adverse_action_template_token1234
                        template_urls:
                          html: https://url.com/a_notice_of_adverse_action_template_token1234.html
                      privacy_policy:
                        asset_token: a_privacy_policy_asset_token1234
                        asset_urls:
                          html: https://url.com/a_privacy_policy_asset_token1234.html
                          pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                          png: https://url.com/a_privacy_policy_asset_token1234.png
                      rewards_disclosure:
                        asset_token: a_rewards_disclosure_asset_token1234
                        asset_urls:
                          html: https://url.com/a_rewards_disclosure_asset_token1234.html
                          pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                          png: https://url.com/a_rewards_disclosure_asset_token1234.png
                        template_token: a_rewards_disclosure_template_token1234
                        template_urls:
                          html: https://url.com/a_rewards_disclosure_template_token1234.html
                      summary_of_credit_terms:
                        asset_token: a_summary_of_credit_terms_asset_token1234
                        asset_urls:
                          html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                          pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                          png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                        template_token: a_summary_of_credit_terms_template_token1234
                        template_urls:
                          html: https://url.com/a_summary_of_credit_terms_template_token1234.html
                      terms_schedule:
                        template_token: a_terms_schedule_template_token1234
                        template_urls:
                          html: https://url.com/a_terms_schedule_template_token1234.html
                      token: my_document_policy_token_1234
                      updated_time: 2022-04-05T16:04:48.643Z
                    document_policy_token: my_document_policy_token_1234
                    fee_policy_detail:
                      account:
                        late_payment:
                          default_method: FLAT
                          default_value: 10
                        returned_payment:
                          default_method: FLAT
                          default_value: 10
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A golden fee policy
                      name: Gold Fee Policy
                      token: my_fee_policy_token_1234
                      updated_time: 2022-04-05T16:04:48.643Z
                    fee_policy_token: my_fee_policy_token_1234
                    name: Gold Credit Bundle
                    offer_policy_detail:
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A golden offer policy
                      name: Gold Offer Policy
                      token: my_offer_policy_token_1234
                      updated_time: 2022-04-05T16:04:48.643Z
                    offer_policy_token: my_offer_policy_token_1234
                    parent_token: my_parent_token_1234
                    reward_policy_detail:
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A golden reward policy
                      name: Gold Reward Policy
                      rules:
                        - filters:
                            amount:
                              greater_than: 1
                              less_than: 10
                            mcc_dynamic:
                              includes:
                                - HIGHEST_SPEND
                          outcome:
                            max_amount: 100
                            percentage: 20
                          type: CASHBACK
                      token: my_reward_policy_token_1234
                      updated_time: 2022-04-05T16:04:48.643Z
                    reward_policy_token: my_reward_policy_token_1234
                    status: DRAFT
                    token: my_bundle_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                  - apr_policy_detail:
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A silver APR policy
                      effective_date: 2022-06-01
                      name: Silver APR Policy
                      purchases:
                        external_token: my_external_purchase_token4321
                        name: A purchase at a merchant
                        tiers:
                          - apr: 0
                            margin_rate: 3
                          - apr: 0
                            margin_rate: 6
                      token: my_apr_policy_token_4321
                      updated_time: 2022-04-05T16:04:48.643Z
                    apr_policy_token: my_apr_policy_token_4321
                    created_time: 2022-04-01T23:41:58.802Z
                    credit_product_policy_detail:
                      card_products:
                        - level: TRADITIONAL
                          network: VISA
                          token: my_card_product_token4321
                      classification: CONSUMER
                      created_time: 2022-04-01T23:41:58.802Z
                      credit_line:
                        max: 3100
                        min: 50
                      currency_code: USD
                      description: A silver credit product policy
                      interest_calculation:
                        application_of_credits:
                          cycle_type: END_REVOLVING
                          day: 15
                        day_count: ACTUAL
                        exclude_tran_types:
                          - ANNUAL_FEE
                          - LATE_PAYMENT_FEE
                          - CASH_BACK_STATEMENT_CREDIT
                        grace_days_application: NEXT_CYCLE_DATE
                        interest_application:
                          - PRINCIPAL
                          - FEES
                        interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                        method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                        minimum_interest: 1
                      name: Silver Credit Product Policy
                      payments:
                        allocation_order:
                          - INTEREST
                          - FEES
                          - PRINCIPAL
                        billing_cycle_day: 1
                        due_day: 31
                        min_payment_calculation:
                          include_overlimit_amount: true
                          include_past_due_amount: false
                          min_payment_flat_amount: 20
                          min_payment_percentage:
                            include_fees_charged:
                              - LATE_PAYMENT_FEE
                            include_interest_charged: false
                            percentage_of_balance: 1
                      product_sub_type: CREDIT_CARD
                      product_type: REVOLVING
                      token: my_credit_product_policy_token_4321
                      updated_time: 2022-04-05T16:04:48.643Z
                      usage:
                        - PURCHASE
                    credit_product_policy_token: my_credit_product_policy_token_4321
                    description: A silver
                    document_policy_detail:
                      account_statement:
                        template_token: an_account_statement_template_token4321
                        template_urls:
                          html: https://url.com/an_account_statement_template_token4321.html
                      benefits_disclosure:
                        asset_token: a_benefits_disclosure_asset_token4321
                        asset_urls:
                          html: https://url.com/a_benefits_disclosure_asset_token4321.html
                          pdf: https://url.com/a_benefits_disclosure_asset_token4321.pdf
                          png: https://url.com/a_benefits_disclosure_asset_token4321.png
                      card_member_agreement:
                        asset_token: a_card_member_agreement_asset_token4321
                        asset_urls:
                          html: https://url.com/a_card_member_agreement_asset_token4321.html
                          pdf: https://url.com/a_card_member_agreement_asset_token4321.pdf
                          png: https://url.com/a_card_member_agreement_asset_token4321.png
                      created_time: 2022-04-01T23:41:58.802Z
                      e_disclosure:
                        asset_token: a_e_disclosure_asset_token4321
                        asset_urls:
                          html: https://url.com/a_e_disclosure_asset_token4321.html
                          pdf: https://url.com/a_e_disclosure_asset_token4321.pdf
                          png: https://url.com/a_e_disclosure_asset_token4321.png
                      name: My Document Policy
                      notice_of_adverse_action:
                        template_token: a_notice_of_adverse_action_template_token4321
                        template_urls:
                          html: https://url.com/a_notice_of_adverse_action_template_token4321.html
                      privacy_policy:
                        asset_token: a_privacy_policy_asset_token4321
                        asset_urls:
                          html: https://url.com/a_privacy_policy_asset_token4321.html
                          pdf: https://url.com/a_privacy_policy_asset_token4321.pdf
                          png: https://url.com/a_privacy_policy_asset_token4321.png
                      rewards_disclosure:
                        asset_token: a_rewards_disclosure_asset_token4321
                        asset_urls:
                          html: https://url.com/a_rewards_disclosure_asset_token4321.html
                          pdf: https://url.com/a_rewards_disclosure_asset_token4321.pdf
                          png: https://url.com/a_rewards_disclosure_asset_token4321.png
                        template_token: a_rewards_disclosure_template_token4321
                        template_urls:
                          html: https://url.com/a_rewards_disclosure_template_token4321.html
                      summary_of_credit_terms:
                        asset_token: a_summary_of_credit_terms_asset_token4321
                        asset_urls:
                          html: https://url.com/a_summary_of_credit_terms_asset_token4321.html
                          pdf: https://url.com/a_summary_of_credit_terms_asset_token4321.pdf
                          png: https://url.com/a_summary_of_credit_terms_asset_token4321.png
                        template_token: a_summary_of_credit_terms_template_token4321
                        template_urls:
                          html: https://url.com/a_summary_of_credit_terms_template_token4321.html
                      terms_schedule:
                        template_token: a_terms_schedule_template_token4321
                        template_urls:
                          html: https://url.com/a_terms_schedule_template_token4321.html
                      token: my_document_policy_token_4321
                      updated_time: 2022-04-05T16:04:48.643Z
                    document_policy_token: my_document_policy_token_4321
                    fee_policy_detail:
                      account:
                        late_payment:
                          default_method: FLAT
                          default_value: 10
                        returned_payment:
                          default_method: FLAT
                          default_value: 10
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A silver fee policy
                      name: Silver Fee Policy
                      token: my_fee_policy_token_4321
                      updated_time: 2022-04-05T16:04:48.643Z
                    fee_policy_token: my_fee_policy_token_4321
                    name: Silver Credit Bundle
                    offer_policy_detail:
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A silver offer policy
                      name: Silver Offer Policy
                      token: my_offer_policy_token_4321
                      updated_time: 2022-04-05T16:04:48.643Z
                    offer_policy_token: my_offer_policy_token_4321
                    parent_token: my_parent_token_4321
                    reward_policy_detail:
                      created_time: 2022-04-01T23:41:58.802Z
                      description: A silver reward policy
                      name: Silver Reward Policy
                      rules:
                        - filters:
                            amount:
                              greater_than: 1
                              less_than: 10
                            mcc_dynamic:
                              includes:
                                - HIGHEST_SPEND
                          outcome:
                            max_amount: 100
                            percentage: 20
                          type: CASHBACK
                      token: my_reward_policy_token_4321
                      updated_time: 2022-04-05T16:04:48.643Z
                    reward_policy_token: my_reward_policy_token_4321
                    status: DRAFT
                    token: my_bundle_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/BundleResponsePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List bundles
      tags:
        - Bundles (Beta)
    post:
      description: Create a bundle.
      operationId: createBundle
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              apr_policy_token: my_apr_policy_token_1234
              credit_product_policy_token: my_credit_product_policy_token_1234
              description: A golden
              document_policy_token: my_document_policy_token_1234
              fee_policy_token: my_fee_policy_token_1234
              name: Gold Credit Bundle
              offer_policy_token: my_offer_policy_token_1234
              reward_policy_token: my_reward_policy_token_1234
              status: DRAFT
              token: my_bundle_token_1234
            schema:
              $ref: '#/components/schemas/BundleCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                apr_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden APR policy
                  effective_date: 2022-05-01
                  name: Gold APR Policy
                  purchases:
                    external_token: my_external_purchase_token1234
                    name: A purchase at a merchant
                    tiers:
                      - apr: 0
                        margin_rate: 1
                      - apr: 0
                        margin_rate: 5
                  token: my_apr_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                apr_policy_token: my_apr_policy_token_1234
                created_time: 2022-04-01T23:41:58.802Z
                credit_product_policy_detail:
                  card_products:
                    - level: TRADITIONAL
                      network: VISA
                      token: my_card_product_token1234
                  classification: CONSUMER
                  created_time: 2022-04-01T23:41:58.802Z
                  credit_line:
                    max: 3500
                    min: 50
                  currency_code: USD
                  description: A golden credit product policy
                  interest_calculation:
                    application_of_credits:
                      cycle_type: END_REVOLVING
                      day: 15
                    day_count: ACTUAL
                    exclude_tran_types:
                      - ANNUAL_FEE
                      - LATE_PAYMENT_FEE
                      - CASH_BACK_STATEMENT_CREDIT
                    grace_days_application: NEXT_CYCLE_DATE
                    interest_application:
                      - PRINCIPAL
                      - FEES
                    interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                    method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                    minimum_interest: 1
                  name: Gold Credit Product Policy
                  payments:
                    allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    billing_cycle_day: 1
                    due_day: 31
                    min_payment_calculation:
                      include_overlimit_amount: true
                      include_past_due_amount: false
                      min_payment_flat_amount: 20
                      min_payment_percentage:
                        include_fees_charged:
                          - LATE_PAYMENT_FEE
                        include_interest_charged: false
                        percentage_of_balance: 1
                  product_sub_type: CREDIT_CARD
                  product_type: REVOLVING
                  token: my_credit_product_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                  usage:
                    - PURCHASE
                credit_product_policy_token: my_credit_product_policy_token_1234
                description: A golden
                document_policy_detail:
                  account_statement:
                    template_token: an_account_statement_template_token1234
                    template_urls:
                      html: https://url.com/an_account_statement_template_token1234.html
                  benefits_disclosure:
                    asset_token: a_benefits_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_benefits_disclosure_asset_token1234.html
                      pdf: https://url.com/a_benefits_disclosure_asset_token1234.pdf
                      png: https://url.com/a_benefits_disclosure_asset_token1234.png
                  card_member_agreement:
                    asset_token: a_card_member_agreement_asset_token1234
                    asset_urls:
                      html: https://url.com/a_card_member_agreement_asset_token1234.html
                      pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                      png: https://url.com/a_card_member_agreement_asset_token1234.png
                  created_time: 2022-04-01T23:41:58.802Z
                  e_disclosure:
                    asset_token: a_e_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_e_disclosure_asset_token1234.html
                      pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                      png: https://url.com/a_e_disclosure_asset_token1234.png
                  name: My Document Policy
                  notice_of_adverse_action:
                    template_token: a_notice_of_adverse_action_template_token1234
                    template_urls:
                      html: https://url.com/a_notice_of_adverse_action_template_token1234.html
                  privacy_policy:
                    asset_token: a_privacy_policy_asset_token1234
                    asset_urls:
                      html: https://url.com/a_privacy_policy_asset_token1234.html
                      pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                      png: https://url.com/a_privacy_policy_asset_token1234.png
                  rewards_disclosure:
                    asset_token: a_rewards_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_rewards_disclosure_asset_token1234.html
                      pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                      png: https://url.com/a_rewards_disclosure_asset_token1234.png
                    template_token: a_rewards_disclosure_template_token1234
                    template_urls:
                      html: https://url.com/a_rewards_disclosure_template_token1234.html
                  summary_of_credit_terms:
                    asset_token: a_summary_of_credit_terms_asset_token1234
                    asset_urls:
                      html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                      pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                      png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                    template_token: a_summary_of_credit_terms_template_token1234
                    template_urls:
                      html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                  terms_schedule:
                    template_token: a_terms_schedule_template_token1234
                    template_urls:
                      html: https://url.com/a_terms_schedule_template_token1234.html
                  token: my_document_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                document_policy_token: my_document_policy_token_1234
                fee_policy_detail:
                  account:
                    late_payment:
                      default_method: FLAT
                      default_value: 10
                    returned_payment:
                      default_method: FLAT
                      default_value: 10
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden fee policy
                  name: Gold Fee Policy
                  token: my_fee_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                fee_policy_token: my_fee_policy_token_1234
                name: Gold Credit Bundle
                offer_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden offer policy
                  name: Gold Offer Policy
                  token: my_offer_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                offer_policy_token: my_offer_policy_token_1234
                parent_token: my_parent_token_1234
                reward_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden reward policy
                  name: Gold Reward Policy
                  rules:
                    - filters:
                        amount:
                          greater_than: 1
                          less_than: 10
                        mcc_dynamic:
                          includes:
                            - HIGHEST_SPEND
                      outcome:
                        max_amount: 100
                        percentage: 20
                      type: CASHBACK
                  token: my_reward_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                reward_policy_token: my_reward_policy_token_1234
                status: DRAFT
                token: my_bundle_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/BundleResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create bundle
      tags:
        - Bundles (Beta)
  /credit/bundles/{token}:
    get:
      description: Retrieve a specific bundle.
      operationId: retrieveBundle
      parameters:
        - description: |-
            The unique identifier of the bundle to retrieve.

            Send a `GET` request to `/credit/bundles` to retrieve existing  tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: simple
        - description: |-
            Embeds the associated object of the specified type into the response.
            For more, see <</core-api/object-expansion, object expansion>>.
          explode: true
          in: query
          name: expand_objects
          required: false
          schema:
            items:
              $ref: '#/components/schemas/PolicyType'
            maxItems: 5
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                apr_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden APR policy
                  effective_date: 2022-05-01
                  name: Gold APR Policy
                  purchases:
                    external_token: my_external_purchase_token1234
                    name: A purchase at a merchant
                    tiers:
                      - apr: 0
                        margin_rate: 1
                      - apr: 0
                        margin_rate: 5
                  token: my_apr_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                apr_policy_token: my_apr_policy_token_1234
                created_time: 2022-04-01T23:41:58.802Z
                credit_product_policy_detail:
                  card_products:
                    - level: TRADITIONAL
                      network: VISA
                      token: my_card_product_token1234
                  classification: CONSUMER
                  created_time: 2022-04-01T23:41:58.802Z
                  credit_line:
                    max: 3500
                    min: 50
                  currency_code: USD
                  description: A golden credit product policy
                  interest_calculation:
                    application_of_credits:
                      cycle_type: END_REVOLVING
                      day: 15
                    day_count: ACTUAL
                    exclude_tran_types:
                      - ANNUAL_FEE
                      - LATE_PAYMENT_FEE
                      - CASH_BACK_STATEMENT_CREDIT
                    grace_days_application: NEXT_CYCLE_DATE
                    interest_application:
                      - PRINCIPAL
                      - FEES
                    interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                    method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                    minimum_interest: 1
                  name: Gold Credit Product Policy
                  payments:
                    allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    billing_cycle_day: 1
                    due_day: 31
                    min_payment_calculation:
                      include_overlimit_amount: true
                      include_past_due_amount: false
                      min_payment_flat_amount: 20
                      min_payment_percentage:
                        include_fees_charged:
                          - LATE_PAYMENT_FEE
                        include_interest_charged: false
                        percentage_of_balance: 1
                  product_sub_type: CREDIT_CARD
                  product_type: REVOLVING
                  token: my_credit_product_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                  usage:
                    - PURCHASE
                credit_product_policy_token: my_credit_product_policy_token_1234
                description: A golden
                document_policy_detail:
                  account_statement:
                    template_token: an_account_statement_template_token1234
                    template_urls:
                      html: https://url.com/an_account_statement_template_token1234.html
                  benefits_disclosure:
                    asset_token: a_benefits_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_benefits_disclosure_asset_token1234.html
                      pdf: https://url.com/a_benefits_disclosure_asset_token1234.pdf
                      png: https://url.com/a_benefits_disclosure_asset_token1234.png
                  card_member_agreement:
                    asset_token: a_card_member_agreement_asset_token1234
                    asset_urls:
                      html: https://url.com/a_card_member_agreement_asset_token1234.html
                      pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                      png: https://url.com/a_card_member_agreement_asset_token1234.png
                  created_time: 2022-04-01T23:41:58.802Z
                  e_disclosure:
                    asset_token: a_e_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_e_disclosure_asset_token1234.html
                      pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                      png: https://url.com/a_e_disclosure_asset_token1234.png
                  name: My Document Policy
                  notice_of_adverse_action:
                    template_token: a_notice_of_adverse_action_template_token1234
                    template_urls:
                      html: https://url.com/a_notice_of_adverse_action_template_token1234.html
                  privacy_policy:
                    asset_token: a_privacy_policy_asset_token1234
                    asset_urls:
                      html: https://url.com/a_privacy_policy_asset_token1234.html
                      pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                      png: https://url.com/a_privacy_policy_asset_token1234.png
                  rewards_disclosure:
                    asset_token: a_rewards_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_rewards_disclosure_asset_token1234.html
                      pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                      png: https://url.com/a_rewards_disclosure_asset_token1234.png
                    template_token: a_rewards_disclosure_template_token1234
                    template_urls:
                      html: https://url.com/a_rewards_disclosure_template_token1234.html
                  summary_of_credit_terms:
                    asset_token: a_summary_of_credit_terms_asset_token1234
                    asset_urls:
                      html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                      pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                      png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                    template_token: a_summary_of_credit_terms_template_token1234
                    template_urls:
                      html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                  terms_schedule:
                    template_token: a_terms_schedule_template_token1234
                    template_urls:
                      html: https://url.com/a_terms_schedule_template_token1234.html
                  token: my_document_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                document_policy_token: my_document_policy_token_1234
                fee_policy_detail:
                  account:
                    late_payment:
                      default_method: FLAT
                      default_value: 10
                    returned_payment:
                      default_method: FLAT
                      default_value: 10
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden fee policy
                  name: Gold Fee Policy
                  token: my_fee_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                fee_policy_token: my_fee_policy_token_1234
                name: Gold Credit Bundle
                offer_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden offer policy
                  name: Gold Offer Policy
                  token: my_offer_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                offer_policy_token: my_offer_policy_token_1234
                parent_token: my_parent_token_1234
                reward_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden reward policy
                  name: Gold Reward Policy
                  rules:
                    - filters:
                        amount:
                          greater_than: 1
                          less_than: 10
                        mcc_dynamic:
                          includes:
                            - HIGHEST_SPEND
                      outcome:
                        max_amount: 100
                        percentage: 20
                      type: CASHBACK
                  token: my_reward_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                reward_policy_token: my_reward_policy_token_1234
                status: DRAFT
                token: my_bundle_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/BundleResponse'
          description: A JSON object containing bundle information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve bundle
      tags:
        - Bundles (Beta)
    put:
      description: Update a specific bundle that is not `ACTIVE` or `ARCHIVED`. Bundles
        are created in a `DRAFT` state, and are still modifiable at this point. Using
        the transitions endpoint a bundle can be transitioned from `DRAFT`, to `ACTIVE`.
        Once a bundle is active, it is immutable, and cannot be modified.
      operationId: updateBundle
      parameters:
        - description: |-
            Token of the bundle to update.

            Send a `GET` request to `/credit/bundles` to retrieve existing  tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              apr_policy_token: my_apr_policy_token_1234
              credit_product_policy_token: my_credit_product_policy_token_1234
              description: Description of the renamed bundle
              document_policy_token: my_document_policy_token_1234
              fee_policy_token: my_fee_policy_token_1234
              name: Renamed Bundle
              offer_policy_token: my_offer_policy_token_1234
              reward_policy_token: my_reward_policy_token_1234
              token: my_bundle_token_1234
            schema:
              $ref: '#/components/schemas/BundleUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                apr_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden APR policy
                  effective_date: 2022-05-01
                  name: Gold APR Policy
                  purchases:
                    external_token: my_external_purchase_token1234
                    name: A purchase at a merchant
                    tiers:
                      - apr: 0
                        margin_rate: 1
                      - apr: 0
                        margin_rate: 5
                  token: my_apr_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                apr_policy_token: my_apr_policy_token_1234
                created_time: 2022-04-01T23:41:58.802Z
                credit_product_policy_detail:
                  card_products:
                    - level: TRADITIONAL
                      network: VISA
                      token: my_card_product_token1234
                  classification: CONSUMER
                  created_time: 2022-04-01T23:41:58.802Z
                  credit_line:
                    max: 3500
                    min: 50
                  currency_code: USD
                  description: A golden credit product policy
                  interest_calculation:
                    application_of_credits:
                      cycle_type: END_REVOLVING
                      day: 15
                    day_count: ACTUAL
                    exclude_tran_types:
                      - ANNUAL_FEE
                      - LATE_PAYMENT_FEE
                      - CASH_BACK_STATEMENT_CREDIT
                    grace_days_application: NEXT_CYCLE_DATE
                    interest_application:
                      - PRINCIPAL
                      - FEES
                    interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                    method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                    minimum_interest: 1
                  name: Gold Credit Product Policy
                  payments:
                    allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    billing_cycle_day: 1
                    due_day: 31
                    min_payment_calculation:
                      include_overlimit_amount: true
                      include_past_due_amount: false
                      min_payment_flat_amount: 20
                      min_payment_percentage:
                        include_fees_charged:
                          - LATE_PAYMENT_FEE
                        include_interest_charged: false
                        percentage_of_balance: 1
                  product_sub_type: CREDIT_CARD
                  product_type: REVOLVING
                  token: my_credit_product_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                  usage:
                    - PURCHASE
                credit_product_policy_token: my_credit_product_policy_token_1234
                description: Description of the renamed bundle
                document_policy_detail:
                  account_statement:
                    template_token: an_account_statement_template_token1234
                    template_urls:
                      html: https://url.com/an_account_statement_template_token1234.html
                  benefits_disclosure:
                    asset_token: a_benefits_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_benefits_disclosure_asset_token1234.html
                      pdf: https://url.com/a_benefits_disclosure_asset_token1234.pdf
                      png: https://url.com/a_benefits_disclosure_asset_token1234.png
                  card_member_agreement:
                    asset_token: a_card_member_agreement_asset_token1234
                    asset_urls:
                      html: https://url.com/a_card_member_agreement_asset_token1234.html
                      pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                      png: https://url.com/a_card_member_agreement_asset_token1234.png
                  created_time: 2022-04-01T23:41:58.802Z
                  e_disclosure:
                    asset_token: a_e_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_e_disclosure_asset_token1234.html
                      pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                      png: https://url.com/a_e_disclosure_asset_token1234.png
                  name: My Document Policy
                  notice_of_adverse_action:
                    template_token: a_notice_of_adverse_action_template_token1234
                    template_urls:
                      html: https://url.com/a_notice_of_adverse_action_template_token1234.html
                  privacy_policy:
                    asset_token: a_privacy_policy_asset_token1234
                    asset_urls:
                      html: https://url.com/a_privacy_policy_asset_token1234.html
                      pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                      png: https://url.com/a_privacy_policy_asset_token1234.png
                  rewards_disclosure:
                    asset_token: a_rewards_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_rewards_disclosure_asset_token1234.html
                      pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                      png: https://url.com/a_rewards_disclosure_asset_token1234.png
                    template_token: a_rewards_disclosure_template_token1234
                    template_urls:
                      html: https://url.com/a_rewards_disclosure_template_token1234.html
                  summary_of_credit_terms:
                    asset_token: a_summary_of_credit_terms_asset_token1234
                    asset_urls:
                      html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                      pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                      png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                    template_token: a_summary_of_credit_terms_template_token1234
                    template_urls:
                      html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                  terms_schedule:
                    template_token: a_terms_schedule_template_token1234
                    template_urls:
                      html: https://url.com/a_terms_schedule_template_token1234.html
                  token: my_document_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                document_policy_token: my_document_policy_token_1234
                fee_policy_detail:
                  account:
                    late_payment:
                      default_method: FLAT
                      default_value: 10
                    returned_payment:
                      default_method: FLAT
                      default_value: 10
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden fee policy
                  name: Gold Fee Policy
                  token: my_fee_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                fee_policy_token: my_fee_policy_token_1234
                name: Renamed Bundle
                offer_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden offer policy
                  name: Gold Offer Policy
                  token: my_offer_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                offer_policy_token: my_offer_policy_token_1234
                parent_token: my_parent_token_1234
                reward_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden reward policy
                  name: Gold Reward Policy
                  rules:
                    - filters:
                        amount:
                          greater_than: 1
                          less_than: 10
                        mcc_dynamic:
                          includes:
                            - HIGHEST_SPEND
                      outcome:
                        max_amount: 100
                        percentage: 20
                      type: CASHBACK
                  token: my_reward_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                reward_policy_token: my_reward_policy_token_1234
                status: DRAFT
                token: my_bundle_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/BundleResponse'
          description: A JSON object containing bundle information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update bundle
      tags:
        - Bundles (Beta)
  /credit/bundles/{token}/clone:
    post:
      description: Create a new bundle based on an existing bundle.
      operationId: cloneBundle
      parameters:
        - description: |-
            The unique identifier of the bundle to clone.

            Send a `GET` request to `/bundles` to retrieve existing bundle tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                apr_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden APR policy
                  effective_date: 2022-05-01
                  name: Gold APR Policy
                  purchases:
                    external_token: my_external_purchase_token1234
                    name: A purchase at a merchant
                    tiers:
                      - apr: 0
                        margin_rate: 1
                      - apr: 0
                        margin_rate: 5
                  token: my_apr_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                apr_policy_token: my_apr_policy_token_1234
                created_time: 2022-04-01T23:41:58.802Z
                credit_product_policy_detail:
                  card_products:
                    - level: TRADITIONAL
                      network: VISA
                      token: my_card_product_token1234
                  classification: CONSUMER
                  created_time: 2022-04-01T23:41:58.802Z
                  credit_line:
                    max: 3500
                    min: 50
                  currency_code: USD
                  description: A golden credit product policy
                  interest_calculation:
                    application_of_credits:
                      cycle_type: END_REVOLVING
                      day: 15
                    day_count: ACTUAL
                    exclude_tran_types:
                      - ANNUAL_FEE
                      - LATE_PAYMENT_FEE
                      - CASH_BACK_STATEMENT_CREDIT
                    grace_days_application: NEXT_CYCLE_DATE
                    interest_application:
                      - PRINCIPAL
                      - FEES
                    interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                    method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                    minimum_interest: 1
                  name: Gold Credit Product Policy
                  payments:
                    allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    billing_cycle_day: 1
                    due_day: 31
                    min_payment_calculation:
                      include_overlimit_amount: true
                      include_past_due_amount: false
                      min_payment_flat_amount: 20
                      min_payment_percentage:
                        include_fees_charged:
                          - LATE_PAYMENT_FEE
                        include_interest_charged: false
                        percentage_of_balance: 1
                  product_sub_type: CREDIT_CARD
                  product_type: REVOLVING
                  token: my_credit_product_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                  usage:
                    - PURCHASE
                credit_product_policy_token: my_credit_product_policy_token_1234
                description: A golden
                document_policy_detail:
                  account_statement:
                    template_token: an_account_statement_template_token1234
                    template_urls:
                      html: https://url.com/an_account_statement_template_token1234.html
                  benefits_disclosure:
                    asset_token: a_benefits_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_benefits_disclosure_asset_token1234.html
                      pdf: https://url.com/a_benefits_disclosure_asset_token1234.pdf
                      png: https://url.com/a_benefits_disclosure_asset_token1234.png
                  card_member_agreement:
                    asset_token: a_card_member_agreement_asset_token1234
                    asset_urls:
                      html: https://url.com/a_card_member_agreement_asset_token1234.html
                      pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                      png: https://url.com/a_card_member_agreement_asset_token1234.png
                  created_time: 2022-04-01T23:41:58.802Z
                  e_disclosure:
                    asset_token: a_e_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_e_disclosure_asset_token1234.html
                      pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                      png: https://url.com/a_e_disclosure_asset_token1234.png
                  name: My Document Policy
                  notice_of_adverse_action:
                    template_token: a_notice_of_adverse_action_template_token1234
                    template_urls:
                      html: https://url.com/a_notice_of_adverse_action_template_token1234.html
                  privacy_policy:
                    asset_token: a_privacy_policy_asset_token1234
                    asset_urls:
                      html: https://url.com/a_privacy_policy_asset_token1234.html
                      pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                      png: https://url.com/a_privacy_policy_asset_token1234.png
                  rewards_disclosure:
                    asset_token: a_rewards_disclosure_asset_token1234
                    asset_urls:
                      html: https://url.com/a_rewards_disclosure_asset_token1234.html
                      pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                      png: https://url.com/a_rewards_disclosure_asset_token1234.png
                    template_token: a_rewards_disclosure_template_token1234
                    template_urls:
                      html: https://url.com/a_rewards_disclosure_template_token1234.html
                  summary_of_credit_terms:
                    asset_token: a_summary_of_credit_terms_asset_token1234
                    asset_urls:
                      html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                      pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                      png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                    template_token: a_summary_of_credit_terms_template_token1234
                    template_urls:
                      html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                  terms_schedule:
                    template_token: a_terms_schedule_template_token1234
                    template_urls:
                      html: https://url.com/a_terms_schedule_template_token1234.html
                  token: my_document_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                document_policy_token: my_document_policy_token_1234
                fee_policy_detail:
                  account:
                    late_payment:
                      default_method: FLAT
                      default_value: 10
                    returned_payment:
                      default_method: FLAT
                      default_value: 10
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden fee policy
                  name: Gold Fee Policy
                  token: my_fee_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                fee_policy_token: my_fee_policy_token_1234
                name: Gold Credit Bundle
                offer_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden offer policy
                  name: Gold Offer Policy
                  token: my_offer_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                offer_policy_token: my_offer_policy_token_1234
                parent_token: my_parent_token_1234
                reward_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A golden reward policy
                  name: Gold Reward Policy
                  rules:
                    - filters:
                        amount:
                          greater_than: 1
                          less_than: 10
                        mcc_dynamic:
                          includes:
                            - HIGHEST_SPEND
                      outcome:
                        max_amount: 100
                        percentage: 20
                      type: CASHBACK
                  token: my_reward_policy_token_1234
                  updated_time: 2022-04-05T16:04:48.643Z
                reward_policy_token: my_reward_policy_token_1234
                status: DRAFT
                token: my_bundle_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/BundleResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Clone bundle
      tags:
        - Bundles (Beta)
  /credit/bundles/{token}/lineage:
    get:
      description: |-
        Retrieve an array of related product bundles.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listRelatedBundles
      parameters:
        - description: |-
            The unique identifier of the parent product bundle.

            Send a `GET` request to `/bundles` to retrieve existing product bundles tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
        - description: An array of statuses by which to filter bundles.
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              $ref: '#/components/schemas/BundleResourceStatus'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponsePage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List related bundles
      tags:
        - Bundles (Beta)
  /credit/bundles/{token}/promote:
    put:
      description: Promote a specific bundle, which replaces the current active bundle
        and activates the promoted bundle.
      operationId: promoteBundle
      parameters:
        - description: |-
            The unique identifier of the bundle to promote.

            Send a `GET` request to `/bundles` to retrieve existing bundle tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                apr_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A silver APR policy
                  effective_date: 2022-06-01
                  name: Silver APR Policy
                  purchases:
                    external_token: my_external_purchase_token4321
                    name: A purchase at a merchant
                    tiers:
                      - apr: 0
                        margin_rate: 3
                      - apr: 0
                        margin_rate: 6
                  token: my_apr_policy_token_4321
                  updated_time: 2022-04-05T16:04:48.643Z
                apr_policy_token: my_apr_policy_token_4321
                created_time: 2022-04-01T23:41:58.802Z
                credit_product_policy_detail:
                  card_products:
                    - level: TRADITIONAL
                      network: VISA
                      token: my_card_product_token4321
                  classification: CONSUMER
                  created_time: 2022-04-01T23:41:58.802Z
                  credit_line:
                    max: 3100
                    min: 50
                  currency_code: USD
                  description: A silver credit product policy
                  interest_calculation:
                    application_of_credits:
                      cycle_type: END_REVOLVING
                      day: 15
                    day_count: ACTUAL
                    exclude_tran_types:
                      - ANNUAL_FEE
                      - LATE_PAYMENT_FEE
                      - CASH_BACK_STATEMENT_CREDIT
                    grace_days_application: NEXT_CYCLE_DATE
                    interest_application:
                      - PRINCIPAL
                      - FEES
                    interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                    method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                    minimum_interest: 1
                  name: Silver Credit Product Policy
                  payments:
                    allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    billing_cycle_day: 1
                    due_day: 31
                    min_payment_calculation:
                      include_overlimit_amount: true
                      include_past_due_amount: false
                      min_payment_flat_amount: 20
                      min_payment_percentage:
                        include_fees_charged:
                          - LATE_PAYMENT_FEE
                        include_interest_charged: false
                        percentage_of_balance: 1
                  product_sub_type: CREDIT_CARD
                  product_type: REVOLVING
                  token: my_credit_product_policy_token_4321
                  updated_time: 2022-04-05T16:04:48.643Z
                  usage:
                    - PURCHASE
                credit_product_policy_token: my_credit_product_policy_token_4321
                description: A silver
                document_policy_detail:
                  account_statement:
                    template_token: an_account_statement_template_token4321
                    template_urls:
                      html: https://url.com/an_account_statement_template_token4321.html
                  benefits_disclosure:
                    asset_token: a_benefits_disclosure_asset_token4321
                    asset_urls:
                      html: https://url.com/a_benefits_disclosure_asset_token4321.html
                      pdf: https://url.com/a_benefits_disclosure_asset_token4321.pdf
                      png: https://url.com/a_benefits_disclosure_asset_token4321.png
                  card_member_agreement:
                    asset_token: a_card_member_agreement_asset_token4321
                    asset_urls:
                      html: https://url.com/a_card_member_agreement_asset_token4321.html
                      pdf: https://url.com/a_card_member_agreement_asset_token4321.pdf
                      png: https://url.com/a_card_member_agreement_asset_token4321.png
                  created_time: 2022-04-01T23:41:58.802Z
                  e_disclosure:
                    asset_token: a_e_disclosure_asset_token4321
                    asset_urls:
                      html: https://url.com/a_e_disclosure_asset_token4321.html
                      pdf: https://url.com/a_e_disclosure_asset_token4321.pdf
                      png: https://url.com/a_e_disclosure_asset_token4321.png
                  name: My Document Policy
                  notice_of_adverse_action:
                    template_token: a_notice_of_adverse_action_template_token4321
                    template_urls:
                      html: https://url.com/a_notice_of_adverse_action_template_token4321.html
                  privacy_policy:
                    asset_token: a_privacy_policy_asset_token4321
                    asset_urls:
                      html: https://url.com/a_privacy_policy_asset_token4321.html
                      pdf: https://url.com/a_privacy_policy_asset_token4321.pdf
                      png: https://url.com/a_privacy_policy_asset_token4321.png
                  rewards_disclosure:
                    asset_token: a_rewards_disclosure_asset_token4321
                    asset_urls:
                      html: https://url.com/a_rewards_disclosure_asset_token4321.html
                      pdf: https://url.com/a_rewards_disclosure_asset_token4321.pdf
                      png: https://url.com/a_rewards_disclosure_asset_token4321.png
                    template_token: a_rewards_disclosure_template_token4321
                    template_urls:
                      html: https://url.com/a_rewards_disclosure_template_token4321.html
                  summary_of_credit_terms:
                    asset_token: a_summary_of_credit_terms_asset_token4321
                    asset_urls:
                      html: https://url.com/a_summary_of_credit_terms_asset_token4321.html
                      pdf: https://url.com/a_summary_of_credit_terms_asset_token4321.pdf
                      png: https://url.com/a_summary_of_credit_terms_asset_token4321.png
                    template_token: a_summary_of_credit_terms_template_token4321
                    template_urls:
                      html: https://url.com/a_summary_of_credit_terms_template_token4321.html
                  terms_schedule:
                    template_token: a_terms_schedule_template_token4321
                    template_urls:
                      html: https://url.com/a_terms_schedule_template_token4321.html
                  token: my_document_policy_token_4321
                  updated_time: 2022-04-05T16:04:48.643Z
                document_policy_token: my_document_policy_token_4321
                fee_policy_detail:
                  account:
                    late_payment:
                      default_method: FLAT
                      default_value: 10
                    returned_payment:
                      default_method: FLAT
                      default_value: 10
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A silver fee policy
                  name: Silver Fee Policy
                  token: my_fee_policy_token_4321
                  updated_time: 2022-04-05T16:04:48.643Z
                fee_policy_token: my_fee_policy_token_4321
                name: Silver Credit Bundle
                offer_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A silver offer policy
                  name: Silver Offer Policy
                  token: my_offer_policy_token_4321
                  updated_time: 2022-04-05T16:04:48.643Z
                offer_policy_token: my_offer_policy_token_4321
                parent_token: my_parent_token_4321
                reward_policy_detail:
                  created_time: 2022-04-01T23:41:58.802Z
                  description: A silver reward policy
                  name: Silver Reward Policy
                  rules:
                    - filters:
                        amount:
                          greater_than: 1
                          less_than: 10
                        mcc_dynamic:
                          includes:
                            - HIGHEST_SPEND
                      outcome:
                        max_amount: 100
                        percentage: 20
                      type: CASHBACK
                  token: my_reward_policy_token_4321
                  updated_time: 2022-04-05T16:04:48.643Z
                reward_policy_token: my_reward_policy_token_4321
                status: DRAFT
                token: my_bundle_token_4321
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/BundleResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Promote bundle
      tags:
        - Bundles (Beta)
  /credit/bundles/{token}/transitions:
    post:
      description: Transition the status of a specific bundle.
      operationId: transitionBundle
      parameters:
        - description: |-
            Token of the bundle whose status you want to transition.

            Send a `GET` request to `/credit/bundles` to retrieve existing  tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing bundle token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              status: PENDING_APPROVAL
            schema:
              $ref: '#/components/schemas/BundleTransitionReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                bundle_token: my_bundle_token_1234
                created_time: 2022-06-04T05:59:14.979Z
                original_status: DRAFT
                status: PENDING_APPROVAL
                token: my_transition_token_1234
              schema:
                $ref: '#/components/schemas/BundleTransitionResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Transition a bundle
      tags:
        - Bundles (Beta)
  /credit/paymentsources:
    get:
      description: |-
        Retrieve an array of payment sources.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listPaymentSources
      parameters:
        - description: The unique identifier of the credit account associated with
            the payment source.
          explode: true
          in: query
          name: account_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing account token
          style: form
        - description: The unique identifier of the user associated with the payment
            source.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
            x-allowableValues: Existing user token
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_suffix: '5678'
                    account_token: my_account_token_12
                    created_time: 2021-05-19T19:19:24Z
                    last_modified_time: 2021-05-19T19:19:24Z
                    name: John Jacob
                    owner: INDIVIDUAL
                    routing_number: payment_source_routing_number
                    source_type: CHECKING
                    status: ACTIVE
                    token: my_payment_source_token_6789
                    user_token: user5678
                    verification_status: ACH_VERIFIED
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PaymentSourcePage'
          description: Response containing a list of all payment sources for a provided
            account
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List payment sources
      tags:
        - Payment Sources
    post:
      description: Create a payment source from which to make payments.
      operationId: createPaymentSource
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              account_number: 4567_payment_source_account_number
              account_token: my_account_token_12
              name: John Jacob
              owner: INDIVIDUAL
              routing_number: 56789_payment_source_routing_number
              source_type: CHECKING
              token: my_payment_source_token_6789
              user_token: user5678
              verification_override: true
            schema:
              $ref: '#/components/schemas/PaymentSourceCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_suffix: '5678'
                account_token: my_account_token_12
                created_time: 2021-05-19T19:19:24Z
                last_modified_time: 2021-05-19T19:19:24Z
                name: John Jacob
                owner: INDIVIDUAL
                routing_number: payment_source_routing_number
                source_type: CHECKING
                status: ACTIVE
                token: my_payment_source_token_6789
                user_token: user5678
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/PaymentSourceResponse'
          description: Response containing the created payment source
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create payment source
      tags:
        - Payment Sources
  /credit/paymentsources/{token}:
    get:
      description: Retrieve a payment source.
      operationId: retrievePaymentSource
      parameters:
        - description: |-
            The unique identifier of the payment source to retrieve.

            Send a `GET` request to `/credit/paymentsources` to retrieve existing payment source tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment source token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '5678'
                account_token: my_account_token_12
                created_time: 2021-05-19T19:19:24Z
                last_modified_time: 2021-05-19T19:19:24Z
                name: John Jacob
                owner: INDIVIDUAL
                routing_number: payment_source_routing_number
                source_type: CHECKING
                status: ACTIVE
                token: my_payment_source_token_6789
                user_token: user5678
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/PaymentSourceResponse'
          description: Response containing details for the requested payment source
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve payment source
      tags:
        - Payment Sources
    put:
      description: Update details of a payment source.
      operationId: updatePaymentSource
      parameters:
        - description: |-
            The unique identifier of the payment source to retrieve.

            Send a `GET` request to `/credit/paymentsources` to retrieve existing payment source tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing payment source token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              status: ACTIVE
            schema:
              $ref: '#/components/schemas/PaymentSourceUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '5678'
                account_token: my_account_token_12
                created_time: 2021-05-19T19:19:24Z
                last_modified_time: 2021-05-19T19:19:24Z
                name: John Jacob
                owner: INDIVIDUAL
                routing_number: payment_source_routing_number
                source_type: CHECKING
                status: ACTIVE
                token: my_payment_source_token_6789
                user_token: user5678
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/PaymentSourceResponse'
          description: Response containing updated payment source
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update payment source
      tags:
        - Payment Sources
  /credit/policies/aprs:
    get:
      description: |-
        Retrieve an array of existing APR policies.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getAprPolicies
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `effectiveDate`, and not by the field names appearing in response bodies such as `effective_date`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -effectiveDate
            enum:
              - effectiveDate
              - -effectiveDate
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - created_time: 2022-04-01T23:41:58.802Z
                    description: A golden APR policy
                    effective_date: 2022-05-01
                    name: Gold APR Policy
                    purchases:
                      external_token: my_external_purchase_token1234
                      name: A purchase at a merchant
                      tiers:
                        - apr: 0
                          margin_rate: 1
                        - apr: 0
                          margin_rate: 5
                    token: my_apr_policy_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                  - created_time: 2022-04-01T23:41:58.802Z
                    description: A silver APR policy
                    effective_date: 2022-06-01
                    name: Silver APR Policy
                    purchases:
                      external_token: my_external_purchase_token4321
                      name: A purchase at a merchant
                      tiers:
                        - apr: 0
                          margin_rate: 3
                        - apr: 0
                          margin_rate: 6
                    token: my_apr_policy_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PolicyAprsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List APR policies
      tags:
        - Policies (Beta)
    post:
      description: Create a new annual percentage rate (APR) policy.
      operationId: createAprPolicy
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              description: A golden APR policy
              name: Gold APR Policy
              purchases:
                external_token: my_external_purchase_token1234
                name: A purchase at a merchant
                tiers:
                  - apr: 0
                    margin_rate: 1
                  - apr: 0
                    margin_rate: 5
              token: my_apr_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyAprCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden APR policy
                effective_date: 2022-05-01
                name: Gold APR Policy
                purchases:
                  external_token: my_external_purchase_token1234
                  name: A purchase at a merchant
                  tiers:
                    - apr: 0
                      margin_rate: 1
                    - apr: 0
                      margin_rate: 5
                token: my_apr_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create APR policy
      tags:
        - Policies (Beta)
  /credit/policies/aprs/{token}:
    get:
      description: |-
        Retrieve a specific annual percentage rate (APR) policy.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getAprPolicyByToken
      parameters:
        - description: |-
            The unique identifier of the APR policy to retrieve.

            Send a `GET` request to `/policies/aprs` to retrieve existing APR policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing APR policy token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden APR policy
                effective_date: 2022-05-01
                name: Gold APR Policy
                purchases:
                  external_token: my_external_purchase_token1234
                  name: A purchase at a merchant
                  tiers:
                    - apr: 0
                      margin_rate: 1
                    - apr: 0
                      margin_rate: 5
                token: my_apr_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve APR policy
      tags:
        - Policies (Beta)
    put:
      description: Update a specific APR policy.
      operationId: updateAprPolicyWithToken
      parameters:
        - description: |-
            The unique identifier of the APR policy to update.

            Send a `GET` request to `/policies/aprs` to retrieve existing APR policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing APR policy token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Description of the renamed APR Policy
              name: Renamed APR Policy
              purchases:
                external_token: my_external_purchase_token1234
                name: A purchase at a merchant
                tiers:
                  - apr: 0
                    margin_rate: 1
                  - apr: 0
                    margin_rate: 5
              token: my_apr_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyAprUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
          description: Expected response
        default:
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: Description of the renamed APR Policy
                effective_date: 2022-05-01
                name: Renamed APR Policy
                purchases:
                  external_token: my_external_purchase_token1234
                  name: A purchase at a merchant
                  tiers:
                    - apr: 0
                      margin_rate: 1
                    - apr: 0
                      margin_rate: 5
                token: my_apr_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update APR policy
      tags:
        - Policies (Beta)
  /credit/policies/aprs/{token}/clone:
    post:
      description: Create a new annual percentage rate (APR) policy based on an existing
        APR policy.
      operationId: cloneAprPolicy
      parameters:
        - description: |-
            The unique identifier of the APR policy to clone.

            Send a `GET` request to `/policies/aprs` to retrieve existing APR policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing APR policy token
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden APR policy
                effective_date: 2022-05-01
                name: Gold APR Policy
                purchases:
                  external_token: my_external_purchase_token1234
                  name: A purchase at a merchant
                  tiers:
                    - apr: 0
                      margin_rate: 1
                    - apr: 0
                      margin_rate: 5
                token: my_apr_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyAprResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Clone APR policy
      tags:
        - Policies (Beta)
  /credit/policies/aprs/{token}/schedule:
    get:
      description: |-
        Retrieve an array of the historic annual percentage rate (APR) schedules on a specific APR policy.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getAprPolicySchedulesWithToken
      parameters:
        - description: |-
            The unique identifier of the APR policy on which to retrieve APR schedules.

            Send a `GET` request to `/policies/aprs` to retrieve existing product policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing APR policy token
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - created_time: 2022-04-01T23:41:58.802Z
                    description: A golden APR policy
                    effective_date: 2022-05-01
                    name: Gold APR Policy
                    purchases:
                      external_token: my_external_purchase_token1234
                      name: A purchase at a merchant
                      tiers:
                        - apr: 0
                          margin_rate: 1
                        - apr: 0
                          margin_rate: 5
                    token: my_apr_policy_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                  - created_time: 2022-04-01T23:41:58.802Z
                    description: A silver APR policy
                    effective_date: 2022-06-01
                    name: Silver APR Policy
                    purchases:
                      external_token: my_external_purchase_token4321
                      name: A purchase at a merchant
                      tiers:
                        - apr: 0
                          margin_rate: 1
                        - apr: 0
                          margin_rate: 5
                    token: my_apr_policy_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PolicyAprsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List APR schedules
      tags:
        - Policies (Beta)
  /credit/policies/documents:
    get:
      description: |-
        Retrieve an array of existing document policies.
        A document policy consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.
        Assets contain finalized values after a bundle is created; templates do not contain finalized values.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listDocumentPolicies
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_statement:
                      template_token: an_account_statement_template_token1234
                      template_urls:
                        html: https://url.com/an_account_statement_template_token1234.html
                    benefits_disclosure_premium:
                      asset_token: a_benefits_disclosure_premium_asset_token1234
                      asset_urls:
                        html: https://url.com/a_benefits_disclosure_premium_asset_token1234.html
                        pdf: https://url.com/a_benefits_disclosure_premium_asset_token1234.pdf
                        png: https://url.com/a_benefits_disclosure_premium_asset_token1234.png
                    benefits_disclosure_traditional:
                      asset_token: a_benefits_disclosure_traditional_asset_token1234
                      asset_urls:
                        html: https://url.com/a_benefits_disclosure_traditional_asset_token1234.html
                        pdf: https://url.com/a_benefits_disclosure_traditional_asset_token1234.pdf
                        png: https://url.com/a_benefits_disclosure_traditional_asset_token1234.png
                    card_member_agreement:
                      asset_token: a_card_member_agreement_asset_token1234
                      asset_urls:
                        html: https://url.com/a_card_member_agreement_asset_token1234.html
                        pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                        png: https://url.com/a_card_member_agreement_asset_token1234.png
                    created_time: 2022-04-01T23:41:58.802Z
                    e_disclosure:
                      asset_token: a_e_disclosure_asset_token1234
                      asset_urls:
                        html: https://url.com/a_e_disclosure_asset_token1234.html
                        pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                        png: https://url.com/a_e_disclosure_asset_token1234.png
                    name: My Document Policy
                    noaa_multiple_reason_with_dodd_frank:
                      template_token: an_noaa_multiple_reason_with_dodd_frank_template_token1234
                      template_urls:
                        html: https://url.com/an_noaa_multiple_reason_with_dodd_frank_template_token1234.html
                    noaa_single_reason:
                      template_token: an_noaa_single_reason_template_token1234
                      template_urls:
                        html: https://url.com/an_noaa_single_reason_template_token1234.html
                    noaa_single_reason_with_dodd_frank:
                      template_token: an_noaa_single_reason_with_dodd_frank_template_token1234
                      template_urls:
                        html: https://url.com/an_noaa_single_reason_with_dodd_frank_template_token1234.html
                    privacy_policy:
                      asset_token: a_privacy_policy_asset_token1234
                      asset_urls:
                        html: https://url.com/a_privacy_policy_asset_token1234.html
                        pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                        png: https://url.com/a_privacy_policy_asset_token1234.png
                    rewards_disclosure:
                      asset_token: a_rewards_disclosure_asset_token1234
                      asset_urls:
                        html: https://url.com/a_rewards_disclosure_asset_token1234.html
                        pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                        png: https://url.com/a_rewards_disclosure_asset_token1234.png
                      template_token: a_rewards_disclosure_template_token1234
                      template_urls:
                        html: https://url.com/a_rewards_disclosure_template_token1234.html
                    summary_of_credit_terms:
                      asset_token: a_summary_of_credit_terms_asset_token1234
                      asset_urls:
                        html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                        pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                        png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                      template_token: a_summary_of_credit_terms_template_token1234
                      template_urls:
                        html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                    terms_schedule:
                      template_token: a_terms_schedule_template_token1234
                      template_urls:
                        html: https://url.com/a_terms_schedule_template_token1234.html
                    token: my_document_policy_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                  - account_statement:
                      template_token: an_account_statement_template_token4321
                      template_urls:
                        html: https://url.com/an_account_statement_template_token4321.html
                    benefits_disclosure_premium:
                      asset_token: a_benefits_disclosure_premium_asset_token4321
                      asset_urls:
                        html: https://url.com/a_benefits_disclosure_premium_asset_token4321.html
                        pdf: https://url.com/a_benefits_disclosure_premium_asset_token4321.pdf
                        png: https://url.com/a_benefits_disclosure_premium_asset_token4321.png
                    benefits_disclosure_traditional:
                      asset_token: a_benefits_disclosure_traditional_asset_token4321
                      asset_urls:
                        html: https://url.com/a_benefits_disclosure_traditional_asset_token4321.html
                        pdf: https://url.com/a_benefits_disclosure_traditional_asset_token4321.pdf
                        png: https://url.com/a_benefits_disclosure_traditional_asset_token4321.png
                    card_member_agreement:
                      asset_token: a_card_member_agreement_asset_token4321
                      asset_urls:
                        html: https://url.com/a_card_member_agreement_asset_token4321.html
                        pdf: https://url.com/a_card_member_agreement_asset_token4321.pdf
                        png: https://url.com/a_card_member_agreement_asset_token4321.png
                    created_time: 2022-04-01T23:41:58.802Z
                    e_disclosure:
                      asset_token: a_e_disclosure_asset_token4321
                      asset_urls:
                        html: https://url.com/a_e_disclosure_asset_token4321.html
                        pdf: https://url.com/a_e_disclosure_asset_token4321.pdf
                        png: https://url.com/a_e_disclosure_asset_token4321.png
                    name: Silver Document Policy
                    noaa_multiple_reason_with_dodd_frank:
                      template_token: an_noaa_multiple_reason_with_dodd_frank_template_token4321
                      template_urls:
                        html: https://url.com/an_noaa_multiple_reason_with_dodd_frank_template_token4321.html
                    noaa_single_reason:
                      template_token: an_noaa_single_reason_template_token4321
                      template_urls:
                        html: https://url.com/an_noaa_single_reason_template_token4321.html
                    noaa_single_reason_with_dodd_frank:
                      template_token: an_noaa_single_reason_with_dodd_frank_template_token4321
                      template_urls:
                        html: https://url.com/an_noaa_single_reason_with_dodd_frank_template_token4321.html
                    privacy_policy:
                      asset_token: a_privacy_policy_asset_token4321
                      asset_urls:
                        html: https://url.com/a_privacy_policy_asset_token4321.html
                        pdf: https://url.com/a_privacy_policy_asset_token4321.pdf
                        png: https://url.com/a_privacy_policy_asset_token4321.png
                    rewards_disclosure:
                      asset_token: a_rewards_disclosure_asset_token4321
                      asset_urls:
                        html: https://url.com/a_rewards_disclosure_asset_token4321.html
                        pdf: https://url.com/a_rewards_disclosure_asset_token4321.pdf
                        png: https://url.com/a_rewards_disclosure_asset_token4321.png
                      template_token: a_rewards_disclosure_template_token4321
                      template_urls:
                        html: https://url.com/a_rewards_disclosure_template_token4321.html
                    summary_of_credit_terms:
                      asset_token: a_summary_of_credit_terms_asset_token4321
                      asset_urls:
                        html: https://url.com/a_summary_of_credit_terms_asset_token4321.html
                        pdf: https://url.com/a_summary_of_credit_terms_asset_token4321.pdf
                        png: https://url.com/a_summary_of_credit_terms_asset_token4321.png
                      template_token: a_summary_of_credit_terms_template_token4321
                      template_urls:
                        html: https://url.com/a_summary_of_credit_terms_template_token4321.html
                    terms_schedule:
                      template_token: a_terms_schedule_template_token4321
                      template_urls:
                        html: https://url.com/a_terms_schedule_template_token4321.html
                    token: my_document_policy_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PoliciesDocumentPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List document policies
      tags:
        - Policies (Beta)
    post:
      description: |-
        Create a new document policy, which consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.
        Assets contain finalized values after a bundle is created; templates do not contain finalized values.
      operationId: createDocumentPolicy
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              account_statement:
                template_token: an_account_statement_template_token1234
              benefits_disclosure_premium:
                asset_token: a_benefits_disclosure_premium_asset_token1234
              benefits_disclosure_traditional:
                asset_token: a_benefits_disclosure_traditional_asset_token1234
              card_member_agreement:
                asset_token: a_card_member_agreement_asset_token1234
              e_disclosure:
                asset_token: a_e_disclosure_asset_token1234
              name: My Document Policy
              noaa_multiple_reason_with_dodd_frank:
                template_token: an_noaa_multiple_reason_with_dodd_frank_template_token1234
              noaa_single_reason:
                template_token: an_noaa_single_reason_template_token1234
              noaa_single_reason_with_dodd_frank:
                template_token: an_noaa_single_reason_with_dodd_frank_template_token1234
              privacy_policy:
                asset_token: a_privacy_policy_asset_token1234
              rewards_disclosure:
                asset_token: a_rewards_disclosure_asset_token1234
                template_token: a_rewards_disclosure_template_token1234
              summary_of_credit_terms:
                asset_token: a_summary_of_credit_terms_asset_token1234
                template_token: a_summary_of_credit_terms_template_token1234
              terms_schedule:
                template_token: a_terms_schedule_template_token1234
              token: my_document_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyDocumentCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account_statement:
                  template_token: an_account_statement_template_token1234
                  template_urls:
                    html: https://url.com/an_account_statement_template_token1234.html
                benefits_disclosure_premium:
                  asset_token: a_benefits_disclosure_premium_asset_token1234
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_premium_asset_token1234.html
                    pdf: https://url.com/a_benefits_disclosure_premium_asset_token1234.pdf
                    png: https://url.com/a_benefits_disclosure_premium_asset_token1234.png
                benefits_disclosure_traditional:
                  asset_token: a_benefits_disclosure_traditional_asset_token1234
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_traditional_asset_token1234.html
                    pdf: https://url.com/a_benefits_disclosure_traditional_asset_token1234.pdf
                    png: https://url.com/a_benefits_disclosure_traditional_asset_token1234.png
                card_member_agreement:
                  asset_token: a_card_member_agreement_asset_token1234
                  asset_urls:
                    html: https://url.com/a_card_member_agreement_asset_token1234.html
                    pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                    png: https://url.com/a_card_member_agreement_asset_token1234.png
                created_time: 2022-04-01T23:41:58.802Z
                e_disclosure:
                  asset_token: a_e_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_e_disclosure_asset_token1234.html
                    pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                    png: https://url.com/a_e_disclosure_asset_token1234.png
                name: My Document Policy
                noaa_multiple_reason_with_dodd_frank:
                  template_token: an_noaa_multiple_reason_with_dodd_frank_template_token1234
                  template_urls:
                    html: https://url.com/an_noaa_multiple_reason_with_dodd_frank_template_token1234.html
                noaa_single_reason:
                  template_token: an_noaa_single_reason_template_token1234
                  template_urls:
                    html: https://url.com/an_noaa_single_reason_template_token1234.html
                noaa_single_reason_with_dodd_frank:
                  template_token: an_noaa_single_reason_with_dodd_frank_template_token1234
                  template_urls:
                    html: https://url.com/an_noaa_single_reason_with_dodd_frank_template_token1234.html
                privacy_policy:
                  asset_token: a_privacy_policy_asset_token1234
                  asset_urls:
                    html: https://url.com/a_privacy_policy_asset_token1234.html
                    pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                    png: https://url.com/a_privacy_policy_asset_token1234.png
                rewards_disclosure:
                  asset_token: a_rewards_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_rewards_disclosure_asset_token1234.html
                    pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                    png: https://url.com/a_rewards_disclosure_asset_token1234.png
                  template_token: a_rewards_disclosure_template_token1234
                  template_urls:
                    html: https://url.com/a_rewards_disclosure_template_token1234.html
                summary_of_credit_terms:
                  asset_token: a_summary_of_credit_terms_asset_token1234
                  asset_urls:
                    html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                    pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                    png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                  template_token: a_summary_of_credit_terms_template_token1234
                  template_urls:
                    html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                terms_schedule:
                  template_token: a_terms_schedule_template_token1234
                  template_urls:
                    html: https://url.com/a_terms_schedule_template_token1234.html
                token: my_document_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create document policy
      tags:
        - Policies (Beta)
  /credit/policies/documents/{token}:
    get:
      description: |-
        Retrieve a specific document policy, which consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.
        Assets contain finalized values after a bundle is created; templates do not contain finalized values.
      operationId: retrieveDocumentPolicy
      parameters:
        - description: |-
            The unique identifier of the document policy to retrieve.

            Send a `GET` request to `/policies/documents` to retrieve existing document policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing document policy token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_statement:
                  template_token: an_account_statement_template_token1234
                  template_urls:
                    html: https://url.com/an_account_statement_template_token1234.html
                benefits_disclosure_premium:
                  asset_token: a_benefits_disclosure_premium_asset_token1234
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_premium_asset_token1234.html
                    pdf: https://url.com/a_benefits_disclosure_premium_asset_token1234.pdf
                    png: https://url.com/a_benefits_disclosure_premium_asset_token1234.png
                benefits_disclosure_traditional:
                  asset_token: a_benefits_disclosure_traditional_asset_token1234
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_traditional_asset_token1234.html
                    pdf: https://url.com/a_benefits_disclosure_traditional_asset_token1234.pdf
                    png: https://url.com/a_benefits_disclosure_traditional_asset_token1234.png
                card_member_agreement:
                  asset_token: a_card_member_agreement_asset_token1234
                  asset_urls:
                    html: https://url.com/a_card_member_agreement_asset_token1234.html
                    pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                    png: https://url.com/a_card_member_agreement_asset_token1234.png
                created_time: 2022-04-01T23:41:58.802Z
                e_disclosure:
                  asset_token: a_e_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_e_disclosure_asset_token1234.html
                    pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                    png: https://url.com/a_e_disclosure_asset_token1234.png
                name: My Document Policy
                noaa_multiple_reason_with_dodd_frank:
                  template_token: an_noaa_multiple_reason_with_dodd_frank_template_token1234
                  template_urls:
                    html: https://url.com/an_noaa_multiple_reason_with_dodd_frank_template_token1234.html
                noaa_single_reason:
                  template_token: an_noaa_single_reason_template_token1234
                  template_urls:
                    html: https://url.com/an_noaa_single_reason_template_token1234.html
                noaa_single_reason_with_dodd_frank:
                  template_token: an_noaa_single_reason_with_dodd_frank_template_token1234
                  template_urls:
                    html: https://url.com/an_noaa_single_reason_with_dodd_frank_template_token1234.html
                privacy_policy:
                  asset_token: a_privacy_policy_asset_token1234
                  asset_urls:
                    html: https://url.com/a_privacy_policy_asset_token1234.html
                    pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                    png: https://url.com/a_privacy_policy_asset_token1234.png
                rewards_disclosure:
                  asset_token: a_rewards_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_rewards_disclosure_asset_token1234.html
                    pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                    png: https://url.com/a_rewards_disclosure_asset_token1234.png
                  template_token: a_rewards_disclosure_template_token1234
                  template_urls:
                    html: https://url.com/a_rewards_disclosure_template_token1234.html
                summary_of_credit_terms:
                  asset_token: a_summary_of_credit_terms_asset_token1234
                  asset_urls:
                    html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                    pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                    png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                  template_token: a_summary_of_credit_terms_template_token1234
                  template_urls:
                    html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                terms_schedule:
                  template_token: a_terms_schedule_template_token1234
                  template_urls:
                    html: https://url.com/a_terms_schedule_template_token1234.html
                token: my_document_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
          description: A JSON object containing document policy information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve document policy
      tags:
        - Policies (Beta)
    put:
      description: |-
        Update a specific document policy, which consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.
        Assets contain finalized values after a bundle is created; templates do not contain finalized values.
      operationId: updateDocumentPolicy
      parameters:
        - description: |-
            The unique identifier of the document policy to update.

            Send a `GET` request to `/policies/documents` to retrieve existing document policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing document policy token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              account_statement:
                template_token: an_account_statement_template_token321
              benefits_disclosure_premium:
                asset_token: a_benefits_disclosure_asset_token321
              benefits_disclosure_traditional:
                asset_token: a_benefits_disclosure_traditional_asset_token321
              card_member_agreement:
                asset_token: a_card_member_agreement_asset_token321
              e_disclosure:
                asset_token: a_e_disclosure_asset_token321
              name: My Changed Document Policy
              noaa_multiple_reason_with_dodd_frank:
                template_token: an_noaa_multiple_reason_with_dodd_frank_template_token321
              noaa_single_reason:
                template_token: an_noaa_single_reason_template_token321
              noaa_single_reason_with_dodd_frank:
                template_token: an_noaa_single_reason_with_dodd_frank_template_token321
              privacy_policy:
                asset_token: a_privacy_policy_asset_token321
              rewards_disclosure:
                asset_token: a_rewards_disclosure_asset_token321
                template_token: a_rewards_disclosure_template_token321
              summary_of_credit_terms:
                asset_token: a_summary_of_credit_terms_asset_token321
                template_token: a_summary_of_credit_terms_template_token321
              terms_schedule:
                template_token: a_terms_schedule_template_token321
              token: my_document_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyDocumentUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                account_statement:
                  template_token: an_account_statement_template_token321
                  template_urls:
                    html: https://url.com/an_account_statement_template_token321.html
                benefits_disclosure_premium:
                  asset_token: a_benefits_disclosure_premium_asset_token321
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_premium_asset_token321.html
                    pdf: https://url.com/a_benefits_disclosure_premium_asset_token321.pdf
                    png: https://url.com/a_benefits_disclosure_premium_asset_token321.png
                benefits_disclosure_traditional:
                  asset_token: a_benefits_disclosure_traditional_asset_token321
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_traditional_asset_token321.html
                    pdf: https://url.com/a_benefits_disclosure_traditional_asset_token321.pdf
                    png: https://url.com/a_benefits_disclosure_traditional_asset_token321.png
                card_member_agreement:
                  asset_token: a_card_member_agreement_asset_token321
                  asset_urls:
                    html: https://url.com/a_card_member_agreement_asset_token321.html
                    pdf: https://url.com/a_card_member_agreement_asset_token321.pdf
                    png: https://url.com/a_card_member_agreement_asset_token321.png
                created_time: 2022-04-01T23:41:58.802Z
                e_disclosure:
                  asset_token: a_e_disclosure_asset_token321
                  asset_urls:
                    html: https://url.com/a_e_disclosure_asset_token321.html
                    pdf: https://url.com/a_e_disclosure_asset_token321.pdf
                    png: https://url.com/a_e_disclosure_asset_token321.png
                name: My Changed Document Policy
                noaa_multiple_reason_with_dodd_frank:
                  template_token: an_noaa_multiple_reason_with_dodd_frank_template_token321
                  template_urls:
                    html: https://url.com/an_noaa_multiple_reason_with_dodd_frank_template_token321.html
                noaa_single_reason:
                  template_token: an_noaa_single_reason_template_token321
                  template_urls:
                    html: https://url.com/an_noaa_single_reason_template_token321.html
                noaa_single_reason_with_dodd_frank:
                  template_token: an_noaa_single_reason_with_dodd_frank_template_token321
                  template_urls:
                    html: https://url.com/an_noaa_single_reason_with_dodd_frank_template_token321.html
                privacy_policy:
                  asset_token: a_privacy_policy_asset_token321
                  asset_urls:
                    html: https://url.com/a_privacy_policy_asset_token321.html
                    pdf: https://url.com/a_privacy_policy_asset_token321.pdf
                    png: https://url.com/a_privacy_policy_asset_token321.png
                rewards_disclosure:
                  asset_token: a_rewards_disclosure_asset_token321
                  asset_urls:
                    html: https://url.com/a_rewards_disclosure_asset_token321.html
                    pdf: https://url.com/a_rewards_disclosure_asset_token321.pdf
                    png: https://url.com/a_rewards_disclosure_asset_token321.png
                  template_token: a_rewards_disclosure_template_token321
                  template_urls:
                    html: https://url.com/a_rewards_disclosure_template_token321.html
                summary_of_credit_terms:
                  asset_token: a_summary_of_credit_terms_asset_token321
                  asset_urls:
                    html: https://url.com/a_summary_of_credit_terms_asset_token321.html
                    pdf: https://url.com/a_summary_of_credit_terms_asset_token321.pdf
                    png: https://url.com/a_summary_of_credit_terms_asset_token321.png
                  template_token: a_summary_of_credit_terms_template_token321
                  template_urls:
                    html: https://url.com/a_summary_of_credit_terms_template_token321.html
                terms_schedule:
                  template_token: a_terms_schedule_template_token321
                  template_urls:
                    html: https://url.com/a_terms_schedule_template_token321.html
                token: my_document_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
          description: A JSON object containing document policy information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update document policy
      tags:
        - Policies (Beta)
  /credit/policies/documents/{token}/clone:
    post:
      description: |-
        Create a new document policy based on an existing document policy.
        A document policy consists of all the pre- and post-application disclosures and credit program documents known as assets and templates.
        Assets contain finalized values after a bundle is created; templates do not contain finalized values.
      operationId: cloneDocumentPolicy
      parameters:
        - description: |-
            The unique identifier of the document policy to clone.

            Send a `GET` request to `/policies/documents` to retrieve existing document policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing document policy token
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                account_statement:
                  template_token: an_account_statement_template_token1234
                  template_urls:
                    html: https://url.com/an_account_statement_template_token1234.html
                benefits_disclosure:
                  asset_token: a_benefits_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_benefits_disclosure_asset_token1234.html
                    pdf: https://url.com/a_benefits_disclosure_asset_token1234.pdf
                    png: https://url.com/a_benefits_disclosure_asset_token1234.png
                card_member_agreement:
                  asset_token: a_card_member_agreement_asset_token1234
                  asset_urls:
                    html: https://url.com/a_card_member_agreement_asset_token1234.html
                    pdf: https://url.com/a_card_member_agreement_asset_token1234.pdf
                    png: https://url.com/a_card_member_agreement_asset_token1234.png
                created_time: 2022-04-01T23:41:58.802Z
                e_disclosure:
                  asset_token: a_e_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_e_disclosure_asset_token1234.html
                    pdf: https://url.com/a_e_disclosure_asset_token1234.pdf
                    png: https://url.com/a_e_disclosure_asset_token1234.png
                name: My Document Policy
                notice_of_adverse_action:
                  template_token: a_notice_of_adverse_action_template_token1234
                  template_urls:
                    html: https://url.com/a_notice_of_adverse_action_template_token1234.html
                privacy_policy:
                  asset_token: a_privacy_policy_asset_token1234
                  asset_urls:
                    html: https://url.com/a_privacy_policy_asset_token1234.html
                    pdf: https://url.com/a_privacy_policy_asset_token1234.pdf
                    png: https://url.com/a_privacy_policy_asset_token1234.png
                rewards_disclosure:
                  asset_token: a_rewards_disclosure_asset_token1234
                  asset_urls:
                    html: https://url.com/a_rewards_disclosure_asset_token1234.html
                    pdf: https://url.com/a_rewards_disclosure_asset_token1234.pdf
                    png: https://url.com/a_rewards_disclosure_asset_token1234.png
                  template_token: a_rewards_disclosure_template_token1234
                  template_urls:
                    html: https://url.com/a_rewards_disclosure_template_token1234.html
                summary_of_credit_terms:
                  asset_token: a_summary_of_credit_terms_asset_token1234
                  asset_urls:
                    html: https://url.com/a_summary_of_credit_terms_asset_token1234.html
                    pdf: https://url.com/a_summary_of_credit_terms_asset_token1234.pdf
                    png: https://url.com/a_summary_of_credit_terms_asset_token1234.png
                  template_token: a_summary_of_credit_terms_template_token1234
                  template_urls:
                    html: https://asset-bucket.s3.amazonaws.com/short_code/a_summary_of_credit_terms_template_token1234/a_summary_of_credit_terms_template_token1234.html
                terms_schedule:
                  template_token: a_terms_schedule_template_token1234
                  template_urls:
                    html: https://url.com/a_terms_schedule_template_token1234.html
                token: my_document_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyDocumentResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Clone document policy
      tags:
        - Policies (Beta)
  /credit/policies/fees:
    get:
      description: |-
        Retrieve an array of existing fee policies.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getFeePolicies
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account:
                      late_payment:
                        default_method: FLAT
                        default_value: 10
                      returned_payment:
                        default_method: FLAT
                        default_value: 10
                    created_time: 2022-04-01T23:41:58.802Z
                    description: A golden fee policy
                    name: Gold Fee Policy
                    token: my_fee_policy_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                  - account:
                      late_payment:
                        default_method: FLAT
                        default_value: 10
                      returned_payment:
                        default_method: FLAT
                        default_value: 10
                    created_time: 2022-04-01T23:41:58.802Z
                    description: A silver fee policy
                    name: Silver Fee Policy
                    token: my_fee_policy_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PolicyFeesPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List fee policies
      tags:
        - Policies (Beta)
    post:
      description: Create a new fee policy.
      operationId: createFeePolicy
      requestBody:
        content:
          application/json:
            example:
              account:
                late_payment:
                  default_method: FLAT
                  default_value: 10
                returned_payment:
                  default_method: FLAT
                  default_value: 10
              description: A golden fee policy
              name: Gold Fee Policy
              token: my_fee_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyFeeCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                account:
                  late_payment:
                    default_method: FLAT
                    default_value: 10
                  returned_payment:
                    default_method: FLAT
                    default_value: 10
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden fee policy
                name: Gold Fee Policy
                token: my_fee_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create fee policy
      tags:
        - Policies (Beta)
  /credit/policies/fees/{token}:
    get:
      description: |-
        Retrieve a specific fee policy.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getFeePolicyByToken
      parameters:
        - description: |-
            The unique identifier of the fee policy to retrieve.

            Send a `GET` request to `/policies/fee` to retrieve existing fee policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing fee policy token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account:
                  late_payment:
                    default_method: FLAT
                    default_value: 10
                  returned_payment:
                    default_method: FLAT
                    default_value: 10
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden fee policy
                name: Gold Fee Policy
                token: my_fee_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve fee policy
      tags:
        - Policies (Beta)
    put:
      description: Update a specific fee policy.
      operationId: updateFeePolicyWithToken
      parameters:
        - description: |-
            The unique identifier of the fee policy to retrieve.

            Send a `GET` request to `/policies/fee` to retrieve existing fee policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing fee policy token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              account:
                late_payment:
                  default_method: FLAT
                  default_value: 5
                returned_payment:
                  default_method: FLAT
                  default_value: 5
              description: Description for changed fee policy
              name: My Changed Fee Policy
              token: my_fee_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyFeeUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                account:
                  late_payment:
                    default_method: FLAT
                    default_value: 5
                  returned_payment:
                    default_method: FLAT
                    default_value: 5
                created_time: 2022-04-01T23:41:58.802Z
                description: Description for changed fee policy
                name: My Changed Fee Policy
                token: my_fee_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update fee policy
      tags:
        - Policies (Beta)
  /credit/policies/fees/{token}/clone:
    post:
      description: Create a new fee policy based on an existing fee policy.
      operationId: cloneFeePolicy
      parameters:
        - description: |-
            The unique identifier of the fee policy to clone.

            Send a `GET` request to `/policies/fee` to retrieve existing fee policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing fee policy token
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                account:
                  late_payment:
                    default_method: FLAT
                    default_value: 10
                  returned_payment:
                    default_method: FLAT
                    default_value: 10
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden fee policy
                name: Gold Fee Policy
                token: my_fee_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyFeeResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Clone fee policy
      tags:
        - Policies (Beta)
  /credit/policies/products:
    get:
      description: |-
        Retrieve an array of existing credit product policies.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listProductPolicies
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - card_products:
                      - level: TRADITIONAL
                        network: VISA
                        token: my_card_product_token1234
                    classification: CONSUMER
                    created_time: 2022-04-01T23:41:58.802Z
                    credit_line:
                      max: 3500
                      min: 50
                    currency_code: USD
                    description: A golden credit product policy
                    interest_calculation:
                      application_of_credits:
                        cycle_type: END_REVOLVING
                        day: 15
                      day_count: ACTUAL
                      exclude_tran_types:
                        - ANNUAL_FEE
                        - LATE_PAYMENT_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    name: Gold Credit Product Policy
                    payments:
                      allocation_order:
                        - INTEREST
                        - FEES
                        - PRINCIPAL
                      billing_cycle_day: 1
                      due_day: 31
                      min_payment_calculation:
                        include_overlimit_amount: true
                        include_past_due_amount: false
                        min_payment_flat_amount: 20
                        min_payment_percentage:
                          include_fees_charged:
                            - LATE_PAYMENT_FEE
                          include_interest_charged: false
                          percentage_of_balance: 1
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    token: my_credit_product_policy_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                    usage:
                      - PURCHASE
                  - card_products:
                      - level: TRADITIONAL
                        network: VISA
                        token: my_card_product_token4321
                    classification: CONSUMER
                    created_time: 2022-04-01T23:41:58.802Z
                    credit_line:
                      max: 3100
                      min: 50
                    currency_code: USD
                    description: A silver credit product policy
                    interest_calculation:
                      application_of_credits:
                        cycle_type: END_REVOLVING
                        day: 15
                      day_count: ACTUAL
                      exclude_tran_types:
                        - ANNUAL_FEE
                        - LATE_PAYMENT_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    name: Silver Credit Product Policy
                    payments:
                      allocation_order:
                        - INTEREST
                        - FEES
                        - PRINCIPAL
                      billing_cycle_day: 1
                      due_day: 31
                      min_payment_calculation:
                        include_overlimit_amount: true
                        include_past_due_amount: false
                        min_payment_flat_amount: 20
                        min_payment_percentage:
                          include_fees_charged:
                            - LATE_PAYMENT_FEE
                          include_interest_charged: false
                          percentage_of_balance: 1
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    token: my_credit_product_policy_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                    usage:
                      - PURCHASE
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PoliciesProductPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List credit product policies
      tags:
        - Policies (Beta)
    post:
      description: Create a new credit product policy.
      operationId: createProductPolicy
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              card_products:
                - level: TRADITIONAL
                  network: VISA
                  token: my_card_product_token1234
              classification: CONSUMER
              credit_line:
                max: 3500
                min: 50
              currency_code: USD
              description: A golden credit product policy
              interest_calculation:
                application_of_credits:
                  cycle_type: END_REVOLVING
                  day: 15
                day_count: ACTUAL
                exclude_tran_types:
                  - ANNUAL_FEE
                  - LATE_PAYMENT_FEE
                  - CASH_BACK_STATEMENT_CREDIT
                grace_days_application: NEXT_CYCLE_DATE
                interest_application:
                  - PRINCIPAL
                  - FEES
                interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                minimum_interest: 1
              name: Gold Credit Product Policy
              payments:
                allocation_order:
                  - INTEREST
                  - FEES
                  - PRINCIPAL
                billing_cycle_day: 1
                due_day: 31
                min_payment_calculation:
                  include_overlimit_amount: true
                  include_past_due_amount: false
                  min_payment_flat_amount: 20
                  min_payment_percentage:
                    include_fees_charged:
                      - LATE_PAYMENT_FEE
                    include_interest_charged: false
                    percentage_of_balance: 1
              product_sub_type: CREDIT_CARD
              product_type: REVOLVING
              token: my_credit_product_policy_token_1234
              usage:
                - PURCHASE
            schema:
              $ref: '#/components/schemas/PolicyProductCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                card_products:
                  - level: TRADITIONAL
                    network: VISA
                    token: my_card_product_token1234
                classification: CONSUMER
                created_time: 2022-04-01T23:41:58.802Z
                credit_line:
                  max: 3500
                  min: 50
                currency_code: USD
                description: A golden credit product policy
                interest_calculation:
                  application_of_credits:
                    cycle_type: END_REVOLVING
                    day: 15
                  day_count: ACTUAL
                  exclude_tran_types:
                    - ANNUAL_FEE
                    - LATE_PAYMENT_FEE
                    - CASH_BACK_STATEMENT_CREDIT
                  grace_days_application: NEXT_CYCLE_DATE
                  interest_application:
                    - PRINCIPAL
                    - FEES
                  interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                  method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                  minimum_interest: 1
                name: Gold Credit Product Policy
                payments:
                  allocation_order:
                    - INTEREST
                    - FEES
                    - PRINCIPAL
                  billing_cycle_day: 1
                  due_day: 31
                  min_payment_calculation:
                    include_overlimit_amount: true
                    include_past_due_amount: false
                    min_payment_flat_amount: 20
                    min_payment_percentage:
                      include_fees_charged:
                        - LATE_PAYMENT_FEE
                      include_interest_charged: false
                      percentage_of_balance: 1
                product_sub_type: CREDIT_CARD
                product_type: REVOLVING
                token: my_credit_product_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
                usage:
                  - PURCHASE
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create credit product policy
      tags:
        - Policies (Beta)
  /credit/policies/products/{token}:
    get:
      description: Retrieve a specific credit product policy.
      operationId: retrieveProductPolicy
      parameters:
        - description: |-
            The unique identifier of the credit product policy to retrieve.

            Send a `GET` request to `/policies/products` to retrieve existing credit product policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing credit product policy token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                card_products:
                  - level: TRADITIONAL
                    network: VISA
                    token: my_card_product_token1234
                classification: CONSUMER
                created_time: 2022-04-01T23:41:58.802Z
                credit_line:
                  max: 3500
                  min: 50
                currency_code: USD
                description: A golden credit product policy
                interest_calculation:
                  application_of_credits:
                    cycle_type: END_REVOLVING
                    day: 15
                  day_count: ACTUAL
                  exclude_tran_types:
                    - ANNUAL_FEE
                    - LATE_PAYMENT_FEE
                    - CASH_BACK_STATEMENT_CREDIT
                  grace_days_application: NEXT_CYCLE_DATE
                  interest_application:
                    - PRINCIPAL
                    - FEES
                  interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                  method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                  minimum_interest: 1
                name: Gold Credit Product Policy
                payments:
                  allocation_order:
                    - INTEREST
                    - FEES
                    - PRINCIPAL
                  billing_cycle_day: 1
                  due_day: 31
                  min_payment_calculation:
                    include_overlimit_amount: true
                    include_past_due_amount: false
                    min_payment_flat_amount: 20
                    min_payment_percentage:
                      include_fees_charged:
                        - LATE_PAYMENT_FEE
                      include_interest_charged: false
                      percentage_of_balance: 1
                product_sub_type: CREDIT_CARD
                product_type: REVOLVING
                token: my_credit_product_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
                usage:
                  - PURCHASE
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
          description: A JSON object containing product policy information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve credit product policy
      tags:
        - Policies (Beta)
    put:
      description: Update a specific credit product policy.
      operationId: updateProductPolicy
      parameters:
        - description: |-
            The unique identifier of the credit product policy to retrieve.

            Send a `GET` request to `/policies/products` to retrieve existing credit product policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing credit product policy token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              card_products:
                - level: TRADITIONAL
                  network: VISA
                  token: my_card_product_token1234
              classification: CONSUMER
              credit_line:
                max: 3500
                min: 50
              currency_code: USD
              description: Description of the renamed credit product policy
              interest_calculation:
                application_of_credits:
                  cycle_type: END_REVOLVING
                  day: 15
                day_count: ACTUAL
                exclude_tran_types:
                  - ANNUAL_FEE
                  - LATE_PAYMENT_FEE
                  - CASH_BACK_STATEMENT_CREDIT
                grace_days_application: NEXT_CYCLE_DATE
                interest_application:
                  - PRINCIPAL
                  - FEES
                interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                minimum_interest: 1
              name: Renamed Credit Product Policy
              payments:
                allocation_order:
                  - INTEREST
                  - FEES
                  - PRINCIPAL
                billing_cycle_day: 1
                due_day: 31
                min_payment_calculation:
                  include_overlimit_amount: true
                  include_past_due_amount: false
                  min_payment_flat_amount: 20
                  min_payment_percentage:
                    include_fees_charged:
                      - LATE_PAYMENT_FEE
                    include_interest_charged: false
                    percentage_of_balance: 1
              product_sub_type: CREDIT_CARD
              product_type: REVOLVING
              token: my_credit_product_policy_token_1234
              usage:
                - PURCHASE
            schema:
              $ref: '#/components/schemas/PolicyProductUpdateReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                card_products:
                  - level: TRADITIONAL
                    network: VISA
                    token: my_card_product_token1234
                classification: CONSUMER
                created_time: 2022-04-01T23:41:58.802Z
                credit_line:
                  max: 3500
                  min: 50
                currency_code: USD
                description: Description of the renamed credit product policy
                interest_calculation:
                  application_of_credits:
                    cycle_type: END_REVOLVING
                    day: 15
                  day_count: ACTUAL
                  exclude_tran_types:
                    - ANNUAL_FEE
                    - LATE_PAYMENT_FEE
                    - CASH_BACK_STATEMENT_CREDIT
                  grace_days_application: NEXT_CYCLE_DATE
                  interest_application:
                    - PRINCIPAL
                    - FEES
                  interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                  method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                  minimum_interest: 1
                name: Renamed Credit Product Policy
                payments:
                  allocation_order:
                    - INTEREST
                    - FEES
                    - PRINCIPAL
                  billing_cycle_day: 1
                  due_day: 31
                  min_payment_calculation:
                    include_overlimit_amount: true
                    include_past_due_amount: false
                    min_payment_flat_amount: 20
                    min_payment_percentage:
                      include_fees_charged:
                        - LATE_PAYMENT_FEE
                      include_interest_charged: false
                      percentage_of_balance: 1
                product_sub_type: CREDIT_CARD
                product_type: REVOLVING
                token: my_credit_product_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
                usage:
                  - PURCHASE
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
          description: A JSON object containing product policy information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update credit product policy
      tags:
        - Policies (Beta)
  /credit/policies/products/{token}/clone:
    post:
      description: Create a new credit product policy based on an existing credit
        product policy.
      operationId: cloneProductPolicy
      parameters:
        - description: |-
            The unique identifier of the credit product policy to clone.

            Send a `GET` request to `/policies/products` to retrieve existing credit product policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing credit product policy token
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                card_products:
                  - level: TRADITIONAL
                    network: VISA
                    token: my_card_product_token1234
                classification: CONSUMER
                created_time: 2022-04-01T23:41:58.802Z
                credit_line:
                  max: 3500
                  min: 50
                currency_code: USD
                description: A golden credit product policy
                interest_calculation:
                  application_of_credits:
                    cycle_type: END_REVOLVING
                    day: 15
                  day_count: ACTUAL
                  exclude_tran_types:
                    - ANNUAL_FEE
                    - LATE_PAYMENT_FEE
                    - CASH_BACK_STATEMENT_CREDIT
                  grace_days_application: NEXT_CYCLE_DATE
                  interest_application:
                    - PRINCIPAL
                    - FEES
                  interest_on_grace_reactivation: ACCRUE_PAYMENT_DATE
                  method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                  minimum_interest: 1
                name: Gold Credit Product Policy
                payments:
                  allocation_order:
                    - INTEREST
                    - FEES
                    - PRINCIPAL
                  billing_cycle_day: 1
                  due_day: 31
                  min_payment_calculation:
                    include_overlimit_amount: true
                    include_past_due_amount: false
                    min_payment_flat_amount: 20
                    min_payment_percentage:
                      include_fees_charged:
                        - LATE_PAYMENT_FEE
                      include_interest_charged: false
                      percentage_of_balance: 1
                product_sub_type: CREDIT_CARD
                product_type: REVOLVING
                token: my_credit_product_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
                usage:
                  - PURCHASE
              schema:
                $ref: '#/components/schemas/PolicyProductResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Clone credit product policy
      tags:
        - Policies (Beta)
  /credit/policies/rewards:
    get:
      description: |-
        Retrieve an array of reward policies.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listRewardPolicies
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - created_time: 2022-04-01T23:41:58.802Z
                    description: A golden reward policy
                    name: Gold Reward Policy
                    rules:
                      - filters:
                          amount:
                            greater_than: 1
                            less_than: 10
                          mcc_dynamic:
                            includes:
                              - HIGHEST_SPEND
                        outcome:
                          max_amount: 100
                          percentage: 20
                        type: CASHBACK
                    token: my_reward_policy_token_1234
                    updated_time: 2022-04-05T16:04:48.643Z
                  - created_time: 2022-04-01T23:41:58.802Z
                    description: A silver reward policy
                    name: Silver Reward Policy
                    rules:
                      - filters:
                          amount:
                            greater_than: 1
                            less_than: 10
                          mcc_dynamic:
                            includes:
                              - HIGHEST_SPEND
                        outcome:
                          max_amount: 100
                          percentage: 20
                        type: CASHBACK
                    token: my_reward_policy_token_4321
                    updated_time: 2022-04-05T16:04:48.643Z
                end_index: 2
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/PolicyRewardPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List reward policies
      tags:
        - Policies (Beta)
    post:
      description: Create a new reward policy.
      operationId: createRewardPolicy
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              description: A golden reward policy
              name: Gold Reward Policy
              rules:
                - filters:
                    amount:
                      greater_than: 1
                      less_than: 10
                    mcc_dynamic:
                      includes:
                        - HIGHEST_SPEND
                  outcome:
                    max_amount: 100
                    percentage: 20
                  type: CASHBACK
              token: my_reward_policy_token_1234
            schema:
              $ref: '#/components/schemas/PolicyRewardReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden reward policy
                name: Gold Reward Policy
                rules:
                  - filters:
                      amount:
                        greater_than: 1
                        less_than: 10
                      mcc_dynamic:
                        includes:
                          - HIGHEST_SPEND
                    outcome:
                      max_amount: 100
                      percentage: 20
                    type: CASHBACK
                token: my_reward_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create reward policy
      tags:
        - Policies (Beta)
  /credit/policies/rewards/{token}:
    get:
      description: Retrieve a reward policy.
      operationId: retrieveRewardPolicy
      parameters:
        - description: |-
            The unique identifier of the reward policy to retrieve.

            Send a `GET` request to `/policies/rewards` to retrieve existing reward policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward policy token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden reward policy
                name: Gold Reward Policy
                rules:
                  - filters:
                      amount:
                        greater_than: 1
                        less_than: 10
                      mcc_dynamic:
                        includes:
                          - HIGHEST_SPEND
                    outcome:
                      max_amount: 100
                      percentage: 20
                    type: CASHBACK
                token: my_reward_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
          description: A JSON object containing reward policy information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve reward policy
      tags:
        - Policies (Beta)
    put:
      description: Update a reward policy.
      operationId: updateRewardPolicy
      parameters:
        - description: |-
            The unique identifier of the reward policy to update.

            Send a `GET` request to `/policies/rewards` to retrieve existing reward policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRewardReq'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: Description of renamed reward policy
                name: Renamed Reward Policy
                rules:
                  - filters:
                      amount:
                        greater_than: 1
                        less_than: 10
                      mcc_dynamic:
                        includes:
                          - HIGHEST_SPEND
                    outcome:
                      max_amount: 100
                      percentage: 20
                    type: CASHBACK
                token: my_reward_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
          description: A JSON object containing reward policy information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update reward policy
      tags:
        - Policies (Beta)
  /credit/policies/rewards/{token}/clone:
    post:
      description: Create a new reward policy based on existing reward policy.
      operationId: cloneRewardPolicy
      parameters:
        - description: |-
            The unique identifier of the reward policy to clone.

            Send a `GET` request to `/policies/rewards` to retrieve existing reward policy tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward policy token
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2022-04-01T23:41:58.802Z
                description: A golden reward policy
                name: Gold Reward Policy
                rules:
                  - filters:
                      amount:
                        greater_than: 1
                        less_than: 10
                      mcc_dynamic:
                        includes:
                          - HIGHEST_SPEND
                    outcome:
                      max_amount: 100
                      percentage: 20
                    type: CASHBACK
                token: my_reward_policy_token_1234
                updated_time: 2022-04-05T16:04:48.643Z
              schema:
                $ref: '#/components/schemas/PolicyRewardResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Clone reward policy
      tags:
        - Policies (Beta)
  /credit/products:
    get:
      description: |-
        Retrieve an array of credit products.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: listProducts
      parameters:
        - description: An array of statuses by which to filter credit products.
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ResourceStatus'
            type: array
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - card_product_tokens:
                      - my_card_product1234
                    classification: CONSUMER
                    config:
                      billing_cycle_day: 1
                      fees:
                        - LATE_PAYMENT_FEE
                      fees_config: [
                        ]
                      payment_due_day: 31
                      periodic_fees:
                        - frequency: ANNUAL
                          number_of_days_post_activation: 5
                        - frequency: MONTHLY
                          number_of_days_post_activation: 28
                      rewards_config: [
                        ]
                    created_time: 2021-09-03T19:03:21.035Z
                    credit_line:
                      max: 200000
                      min: 25
                    currency_code: USD
                    description: Description of credit product
                    interest_calculation:
                      application_of_credits:
                        cycle_type: BEGINNING_REVOLVING
                        day: 1
                      day_count: ACTUAL
                      exclude_tran_types:
                        - ANNUAL_FEE
                        - LATE_PAYMENT_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    min_payment_calculation:
                      include_overlimit_amount: false
                      include_past_due_amount: false
                      min_payment_flat_amount: 25
                      min_payment_percentage:
                        include_fees_charged: [
                          ]
                        include_interest_charged: false
                        percentage_of_balance: 1
                    min_payment_flat_amount: 25
                    min_payment_percentage: 1
                    name: Gold Card
                    payment_allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    status: ACTIVE
                    token: my_credit_product_token1234
                    updated_time: 2021-09-03T19:03:21.035Z
                    usage:
                      - PURCHASE
                  - card_product_tokens:
                      - card-product-token-d308
                      - card-product-token-cc10
                    classification: CONSUMER
                    config:
                      billing_cycle_day: 1
                      fees:
                        - LATE_PAYMENT_FEE
                      fees_config: [
                        ]
                      payment_due_day: 31
                      periodic_fees:
                        - frequency: ANNUAL
                          number_of_days_post_activation: 5
                        - frequency: MONTHLY
                          number_of_days_post_activation: 28
                      rewards_config: [
                        ]
                    created_time: 2021-10-26T14:46:26.678Z
                    credit_line:
                      max: 20000
                      min: 200
                    currency_code: USD
                    description: Platinum consumer product
                    interest_calculation:
                      application_of_credits:
                        cycle_type: BEGINNING_REVOLVING
                        day: 1
                      day_count: ACTUAL
                      exclude_tran_types:
                        - LATE_PAYMENT_FEE
                        - ANNUAL_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    min_payment_flat_amount: 22
                    min_payment_percentage: 2
                    name: My Platinum Credit Product
                    payment_allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    status: ACTIVE
                    token: credit-product-token-9163
                    updated_time: 2021-10-26T16:45:19.908Z
                    usage:
                      - PURCHASE
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/ProductsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List credit products
      tags:
        - Credit Products
    post:
      description: Create a credit product.
      operationId: createProduct
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            example:
              card_product_tokens:
                - my_card_product1234
              classification: CONSUMER
              config:
                billing_cycle_day: 1
                fees:
                  - LATE_PAYMENT_FEE
                payment_due_day: 31
                periodic_fees: [
                  ]
              credit_line:
                max: 200000
                min: 25
              currency_code: USD
              interest_calculation:
                application_of_credits:
                  cycle_type: BEGINNING_REVOLVING
                  day: 1
                day_count: ACTUAL
                exclude_tran_types:
                  - ANNUAL_FEE
                  - LATE_PAYMENT_FEE
                  - CASH_BACK_STATEMENT_CREDIT
                grace_days_application: NEXT_CYCLE_DATE
                interest_application:
                  - PRINCIPAL
                  - FEES
                interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                minimum_interest: 1
              min_payment_calculation:
                include_overlimit_amount: true
                include_past_due_amount: true
                min_payment_flat_amount: 25
                min_payment_percentage:
                  include_fees_charged:
                    - LATE_PAYMENT_FEE
                  include_interest_charged: false
                  percentage_of_balance: 1
              min_payment_flat_amount: 25
              min_payment_percentage: 1
              name: my_credit_product1234
              payment_allocation_order:
                - INTEREST
                - FEES
                - PRINCIPAL
              product_sub_type: CREDIT_CARD
              product_type: REVOLVING
              status: ACTIVE
              usage:
                - PURCHASE
            schema:
              $ref: '#/components/schemas/ProductCreateReq'
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                card_product_tokens:
                  - my_card_product1234
                classification: CONSUMER
                config:
                  billing_cycle_day: 1
                  fees:
                    - LATE_PAYMENT_FEE
                  fees_config: [
                    ]
                  payment_due_day: 31
                  periodic_fees: [
                    ]
                  rewards_config: [
                    ]
                created_time: 2021-09-03T19:03:21.035Z
                credit_line:
                  max: 200000
                  min: 25
                currency_code: USD
                description: Description of credit product
                interest_calculation:
                  application_of_credits:
                    cycle_type: BEGINNING_REVOLVING
                    day: 1
                  day_count: ACTUAL
                  exclude_tran_types:
                    - ANNUAL_FEE
                    - LATE_PAYMENT_FEE
                    - CASH_BACK_STATEMENT_CREDIT
                  grace_days_application: NEXT_CYCLE_DATE
                  interest_application:
                    - PRINCIPAL
                    - FEES
                  interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                  method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                  minimum_interest: 1
                min_payment_calculation:
                  include_overlimit_amount: false
                  include_past_due_amount: false
                  min_payment_flat_amount: 25
                  min_payment_percentage:
                    include_fees_charged: [
                      ]
                    include_interest_charged: false
                    percentage_of_balance: 1
                min_payment_flat_amount: 25
                min_payment_percentage: 1
                name: Gold Card
                payment_allocation_order:
                  - INTEREST
                  - FEES
                  - PRINCIPAL
                product_sub_type: CREDIT_CARD
                product_type: REVOLVING
                status: ACTIVE
                token: my_credit_product_token1234
                updated_time: 2021-09-03T19:03:21.035Z
                usage:
                  - PURCHASE
              schema:
                $ref: '#/components/schemas/ProductResponse'
          description: Expected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Create credit product
      tags:
        - Credit Products
  /credit/products/{token}:
    get:
      description: Retrieve a credit product.
      operationId: retrieveProduct
      parameters:
        - description: |-
            The unique identifier of the credit product to retrieve.

            Send a `GET` request to `/credit/products` to retrieve existing credit product tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                card_product_tokens:
                  - card-product-token-2222
                classification: CONSUMER
                config:
                  billing_cycle_day: 1
                  fees:
                    - LATE_PAYMENT_FEE
                  payment_due_day: 31
                  periodic_fees:
                    - frequency: ANNUAL
                      number_of_days_post_activation: 5
                    - frequency: MONTHLY
                      number_of_days_post_activation: 28
                created_time: 2020-12-17T00:11:46Z
                credit_line:
                  max: 3500
                  min: 1500
                currency_code: USD
                description: Description of Gold Product
                interest_calculation:
                  application_of_credits:
                    cycle_type: BEGINNING_REVOLVING
                    day: 31
                  day_count: ACTUAL
                  exclude_tran_types:
                    - ANNUAL_FEE
                    - LATE_PAYMENT_FEE
                    - CASH_BACK_STATEMENT_CREDIT
                  grace_days_application: NEXT_CYCLE_DATE
                  interest_application:
                    - PRINCIPAL
                    - FEES
                  interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                  method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                  minimum_interest: 1
                min_payment_flat_amount: 0.01
                min_payment_percentage: 1.0E-4
                name: Gold Product
                payment_allocation_order:
                  - INTEREST
                  - FEES
                  - PRINCIPAL
                product_sub_type: CREDIT_CARD
                product_type: REVOLVING
                status: DRAFT
                token: credit-product-token1111
                updated_time: 2020-12-17T00:11:46Z
                usage:
                  - PURCHASE
              schema:
                $ref: '#/components/schemas/ProductResponse'
          description: A JSON object containing product information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve credit product
      tags:
        - Credit Products
  /credit/products/{token}/lineage:
    get:
      description: |-
        Retrieve the lineage of a credit product, which is an array of related credit products whose lineage can be traced back to the same original credit product.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: lineageProducts
      parameters:
        - description: |-
            The unique identifier of the credit product whose lineage you want to retrieve.

            Send a `GET` request to `/credit/products` to retrieve existing credit product tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing credit product token
          style: simple
        - description: An array of statuses by which to filter credit products.
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ResourceStatus'
            type: array
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            minimum: 0
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE:*
            You must sort using system field names such as `lastModifiedTime`, and not by the field names appearing in response bodies such as `last_modified_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            enum:
              - lastModifiedTime
              - -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 3
                data:
                  - card_product_tokens:
                      - card-product-token-d308
                      - card-product-token-cc10
                    classification: CONSUMER
                    config:
                      billing_cycle_day: 1
                      payment_due_day: 31
                    created_time: 2021-10-26T14:46:26.678Z
                    credit_line:
                      max: 20000
                      min: 200
                    currency_code: USD
                    description: Platinum consumer product
                    interest_calculation:
                      application_of_credits:
                        cycle_type: BEGINNING_REVOLVING
                        day: 1
                      day_count: ACTUAL
                      exclude_tran_types:
                        - LATE_PAYMENT_FEE
                        - ANNUAL_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    min_payment_calculation:
                      include_overlimit_amount: false
                      include_past_due_amount: true
                      min_payment_flat_amount: 22
                      min_payment_percentage:
                        include_fees_charged: [
                          ]
                        include_interest_charged: false
                        percentage_of_balance: 2
                    min_payment_flat_amount: 22
                    min_payment_percentage: 2
                    name: My Platinum Credit Product
                    parent_product_token: credit-product-token-366b
                    payment_allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    status: ACTIVE
                    token: credit-product-token-9163
                    updated_time: 2021-10-26T16:45:19.908Z
                    usage:
                      - PURCHASE
                  - card_product_tokens:
                      - card-product-token-d308
                    classification: CONSUMER
                    config:
                      billing_cycle_day: 1
                      payment_due_day: 31
                    created_time: 2021-10-26T14:43:11.187Z
                    credit_line:
                      max: 20000
                      min: 200
                    currency_code: USD
                    description: Platinum consumer product
                    interest_calculation:
                      application_of_credits:
                        cycle_type: BEGINNING_REVOLVING
                        day: 1
                      day_count: ACTUAL
                      exclude_tran_types:
                        - LATE_PAYMENT_FEE
                        - ANNUAL_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    min_payment_calculation:
                      include_overlimit_amount: false
                      include_past_due_amount: false
                      min_payment_flat_amount: 22
                      min_payment_percentage:
                        include_fees_charged: [
                          ]
                        include_interest_charged: false
                        percentage_of_balance: 2
                    min_payment_flat_amount: 22
                    min_payment_percentage: 2
                    name: My Platinum Credit Product
                    payment_allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    status: ARCHIVED
                    token: credit-product-token-366b
                    updated_time: 2021-10-26T16:45:19.907Z
                    usage:
                      - PURCHASE
                  - card_product_tokens:
                      - card-product-token-d308
                      - card-product-token-cc10
                    classification: CONSUMER
                    config:
                      billing_cycle_day: 1
                      payment_due_day: 31
                    created_time: 2021-10-26T14:44:54.770Z
                    credit_line:
                      max: 20000
                      min: 200
                    currency_code: USD
                    description: Platinum consumer product
                    interest_calculation:
                      application_of_credits:
                        cycle_type: BEGINNING_REVOLVING
                        day: 1
                      day_count: ACTUAL
                      exclude_tran_types:
                        - LATE_PAYMENT_FEE
                        - ANNUAL_FEE
                        - CASH_BACK_STATEMENT_CREDIT
                      grace_days_application: NEXT_CYCLE_DATE
                      interest_application:
                        - PRINCIPAL
                        - FEES
                      interest_on_grace_reactivation: ACCRUE_FULL_CYCLE
                      method: AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
                      minimum_interest: 1
                    min_payment_calculation:
                      include_overlimit_amount: false
                      include_past_due_amount: false
                      min_payment_flat_amount: 22
                      min_payment_percentage:
                        include_fees_charged: [
                          ]
                        include_interest_charged: false
                        percentage_of_balance: 2
                    min_payment_flat_amount: 22
                    min_payment_percentage: 2
                    name: My Platinum Credit Product
                    parent_product_token: credit-product-token-366b
                    payment_allocation_order:
                      - INTEREST
                      - FEES
                      - PRINCIPAL
                    product_sub_type: CREDIT_CARD
                    product_type: REVOLVING
                    status: REJECTED
                    token: credit-product-token-4373
                    updated_time: 2021-10-26T14:45:26.015Z
                    usage:
                      - PURCHASE
                end_index: 2
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/ProductsPage'
          description: Expected response to a valid request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve credit product lineage
      tags:
        - Credit Products
  /credit/rewardprograms:
    get:
      description: Retrieve an array of reward programs.
      operationId: retrieveRewardPrograms
      parameters:
        - description: The unique identifier of the credit account for which you want
            to retrieve reward programs.
          explode: true
          in: query
          name: account_token
          required: false
          schema:
            type: string
            x-allowableValues: 36 char max
          style: form
        - description: A value of `true` returns active resources; `false` returns
            inactive resources.
          explode: true
          in: query
          name: is_active
          required: false
          schema:
            type: boolean
            x-allowableValues: '`true`, `false`'
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            type: integer
            x-allowableValues: 1–100
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int64
            type: integer
            x-allowableValues: 0 min
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE*:
            You must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -updatedTime
            enum:
              - updatedTime
              - -updatedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_token: credit_account_token_1234
                    bundle_token: bundle_token_1234
                    calculation_type: NET_BALANCE
                    created_time: 2021-03-24 16:34:26.666
                    is_active: false
                    note: Bundle was updated for this account
                    token: reward_program_token_1234
                    updated_time: 2021-09-24 16:34:26.666
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/RewardProgramsPageResponse'
          description: Success
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: List reward programs
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/redemptions:
    get:
      description: retrieves all completed redemptions by settlement date
      operationId: retrieveRedemptionsBySettlementDate
      parameters:
        - description: Specifies the destination for external redemptions to filter
            for.
          explode: true
          in: query
          name: destination
          required: false
          schema:
            $ref: '#/components/schemas/DestinationType'
          style: form
        - description: Settlement start date to filter by.
          explode: true
          in: query
          name: settlement_start_date
          required: true
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: Settlement end date to filter by.
          explode: true
          in: query
          name: settlement_end_date
          required: true
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            type: integer
            x-allowableValues: 1–100
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int64
            type: integer
            x-allowableValues: 0 min
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedemptionsBySettlementDatePage'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request.
        '500':
          content: {
            }
          description: Server error
      summary: retrieves all completed redemptions by settlement date
      tags:
        - reward programs
        - redemptions
  /credit/rewardprograms/{token}:
    get:
      description: Retrieve a specific reward program.
      operationId: retrieveRewardProgram
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: credit_account_token_1234
                bundle_token: bundle_token_1234
                calculation_type: NET_BALANCE
                created_time: 2021-03-24 16:34:26.666
                is_active: false
                note: Bundle was updated for this account
                token: reward_program_token_1234
                updated_time: 2021-09-24 16:34:26.666
              schema:
                $ref: '#/components/schemas/RewardProgramsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reward program
      tags:
        - Reward Programs (Beta)
    put:
      description: |-
        Activate or deactivate a specific reward program.

        [CAUTION]
        This endpoint is available for banks only.
        Do not use this endpoint if you are a brand contributor.
      operationId: updateRewardProgram
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              is_active: false
              note: Bundle was updated for this account
            schema:
              $ref: '#/components/schemas/PutRewardProgramsRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_token: credit_account_token_1234
                bundle_token: bundle_token_1234
                calculation_type: NET_BALANCE
                created_time: 2021-03-24 16:34:26.666
                is_active: false
                note: Bundle was updated for this account
                token: reward_program_token_1234
                updated_time: 2021-09-24 16:34:26.666
              schema:
                $ref: '#/components/schemas/RewardProgramsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Activate or deactivate reward program
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/{token}/balances:
    get:
      description: Retrieve the balances for a specific reward program.
      operationId: retrieveRewardProgramBalance
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                billing_cycle_closing_date: 2021-03-31 16:34:26.666
                billing_cycle_opening_date: 2021-03-01 16:34:26.666
                net_balance: 833.33
                pending_reward_balance: 25
                percentage: 3
                reward_program_token: reward_program_token_1234
                total_reward_balance: 25
              schema:
                $ref: '#/components/schemas/RewardProgramsBalancesResponse'
          description: Success
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reward program balances
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/{token}/entries:
    get:
      description: Retrieve an array of reward entries on a specific reward program.
      operationId: retrieveRewardProgramEntries
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: The starting date (or date-time) of a date range from which
            to return resources, in UTC.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: The ending date (or date-time) of a date range from which to
            return resources, in UTC.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            type: integer
            x-allowableValues: 1–100
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int64
            type: integer
            x-allowableValues: 0 min
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE*:
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
        - description: Status of the reward entries in the returned array.
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RewardEntryStatus'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - created_time: 2021-03-24 16:34:26.666
                    mcc: APPAREL
                    mid: NORDSTROM
                    note: Reward adjustment
                    related_journal_entry_token: related_journal_entry_token_1234
                    reward_program_token: reward_program_token_1234
                    reward_rules_config_token: reward_rules_config_token_1234
                    status: PENDING
                    token: reward_entry_token_1234
                    transaction_amount: 87
                    value: 0.87
                  - created_time: 2021-03-24 16:34:26.666
                    mcc: GROCERY
                    mid: COSTCO
                    note: Reward adjustment
                    related_journal_entry_token: related_journal_entry_token_1111
                    reward_program_token: reward_program_token_1234
                    reward_rules_config_token: reward_rules_config_token_1234
                    status: PENDING
                    token: reward_entry_token_1111
                    transaction_amount: 159.11
                    value: 1.59
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesPage'
          description: Success
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: List reward entries
      tags:
        - Reward Programs (Beta)
    post:
      description: |-
        Create a reward entry on a specific reward program.

        Use this endpoint to manually create a reward entry if an existing reward is being disputed.
      operationId: postRewardProgramEntry
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              note: Reward adjustment
              value: 2.5
            schema:
              $ref: '#/components/schemas/CreateRewardProgramsEntriesRequest'
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2021-03-24 16:34:26.666
                note: Reward adjustment
                related_journal_entry_token: related_journal_entry_token_1234
                reward_program_token: reward_program_token_1234
                reward_rules_config_token: reward_rules_config_token_1234
                status: PENDING
                token: reward_entry_token_1234
                transaction_amount: 250
                value: 2.5
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request.
        '404':
          content: {
            }
          description: Reward program does not exist.
        '409':
          content: {
            }
          description: Token already associated with a different payload.
        '500':
          content: {
            }
          description: Server error
      summary: Create reward entry
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/{token}/entries/balance:
    get:
      description: Retrieve the balance of reward entries, which is the accrued rewards
        amount, within a specified date range.
      operationId: retrieveRewardProgramEntriesBalance
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: The starting date (or date-time) of a date range from which
            to return resources, in UTC.
          explode: true
          in: query
          name: start_date
          required: true
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: The ending date (or date-time) of a date range from which to
            return resources, in UTC.
          explode: true
          in: query
          name: end_date
          required: true
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2021-03-24 16:34:26.666
                end_date: 2021-03-31 16:34:26.666
                reward_program_token: reward_program_token_1234
                start_date: 2021-03-01 16:34:26.666
                total_reward_balance: 25
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesBalanceResponse'
          description: Success
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reward entries balance
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/{token}/entries/{entry_token}:
    get:
      description: Retrieve a specific reward entry on a reward program.
      operationId: retrieveRewardProgramEntry
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: Unique identifier of the reward entry to retrieve.
          explode: false
          in: path
          name: entry_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2021-03-24 16:34:26.666
                mcc: APPAREL
                mid: NORDSTROM
                note: Reward adjustment
                related_journal_entry_token: related_journal_entry_token_1234
                reward_program_token: reward_program_token_1234
                reward_rules_config_token: reward_rules_config_token_1234
                status: PENDING
                token: reward_entry_token_1234
                transaction_amount: 87
                value: 0.87
              schema:
                $ref: '#/components/schemas/RewardProgramsEntriesResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Reward Program or entry does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reward entry
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/{token}/redemptions:
    get:
      description: Retrieve an array of reward redemptions for a specific reward program.
      operationId: retrieveRedemptions
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: The starting date (or date-time) of a date range from which
            to return resources, in UTC.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: The ending date (or date-time) of a date range from which to
            return resources, in UTC.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            type: integer
            x-allowableValues: 1–100
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int64
            type: integer
            x-allowableValues: 0 min
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE*:
            You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            enum:
              - createdTime
              - -createdTime
            type: string
          style: form
        - description: Type of reward redemptions in the returned array.
          explode: true
          in: query
          name: type
          required: false
          schema:
            $ref: '#/components/schemas/RedemptionType'
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - amount: 50
                    created_time: 2021-03-24 16:34:26.666
                    destination: INVESTMENT
                    note: Credit to investment account
                    pending_reward_entry_token: pending_reward_entry_token_1234
                    reward_program_token: reward_program_token_1234
                    sor_reward_token: sor_reward_token_1234
                    status: COMPLETED
                    token: reward_redemption_token_1234
                    type: EXTERNAL
                    updated_time: 2021-03-24 16:34:26.666
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/RedemptionsPage'
          description: Success
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: List reward redemptions
      tags:
        - Reward Redemptions (Beta)
    post:
      description: Create a redemption to redeem rewards on a specific reward program.
      operationId: postRewardProgramRedemption
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount: 0.03
              destination: WALLET
              note: reward redemption
              type: EXTERNAL
            schema:
              $ref: '#/components/schemas/CreateRedemptionsRequest'
      responses:
        '201':
          content:
            application/json:
              example:
                amount: 0.03
                created_time: 2022-08-31T19:48:42.638Z
                destination: WALLET
                external_settlement_date_time: 2022-08-31T19:43:03.606Z
                note: reward redemption
                related_reward_entries: [
                  ]
                reward_program_token: reward_program_token_1234
                sor_reward_token: sor_reward_token_1234
                status: INITIATED
                token: reward_redemption_token_1234
                type: EXTERNAL
                updated_time: 2022-08-31T19:48:42.639Z
              schema:
                $ref: '#/components/schemas/RedemptionsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request.
        '404':
          content: {
            }
          description: Reward program does not exist.
        '409':
          content: {
            }
          description: Token already associated with a different payload.
        '500':
          content: {
            }
          description: Server error
      summary: Create reward redemption
      tags:
        - Reward Redemptions (Beta)
  /credit/rewardprograms/{token}/redemptions/balance:
    get:
      description: Retrieve the balance for reward redemptions within a specified
        date range.
      operationId: retrieveRedemptionsBalance
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: The starting date (or date-time) of a date range from which
            to return resources, in UTC.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: The ending date (or date-time) of a date range from which to
            return resources, in UTC.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            description: yyyy-MM-ddThh:mm:ssZ
            format: date-time
            type: string
          style: form
        - description: Type of reward redemptions in the returned array.
          explode: true
          in: query
          name: type
          required: false
          schema:
            items:
              $ref: '#/components/schemas/RedemptionType'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2021-03-24 16:34:26.666
                end_date: 2021-03-24 16:34:26.666
                redemption_total_amount: 25
                reward_program_token: reward_program_token_1234
                start_date: 2021-03-24 16:34:26.666
              schema:
                $ref: '#/components/schemas/RedemptionsBalanceResponse'
          description: Success
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reward redemption balance
      tags:
        - Reward Redemptions (Beta)
  /credit/rewardprograms/{token}/redemptions/{redemption_token}:
    get:
      description: Retrieve a specific redemption for a specific reward program.
      operationId: getRedemption
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: Unique identifier of the reward redemption.
          explode: false
          in: path
          name: redemption_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing redemption token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 0.03
                created_time: 2022-08-31T19:48:42.638Z
                destination: WALLET
                external_settlement_date_time: 2022-08-31T19:43:03.606Z
                note: reward redemption
                related_reward_entries: [
                  ]
                reward_program_token: reward_program_token_1234
                sor_reward_token: sor_reward_token_1234
                status: INITIATED
                token: reward_redemption_token_1234
                type: EXTERNAL
                updated_time: 2022-08-31T19:48:42.639Z
              schema:
                $ref: '#/components/schemas/RedemptionsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Redemption does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reward redemption
      tags:
        - Reward Redemptions (Beta)
  /credit/rewardprograms/{token}/redemptions/{redemption_token}/transitions:
    post:
      description: Transition the current status of a reward redemption to a new status.
      operationId: postRedemptionTransition
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: Unique identifier of the reward redemption.
          explode: false
          in: path
          name: redemption_token
          required: true
          schema:
            type: string
            x-allowableValues: Existing redemption token
          style: simple
      requestBody:
        content:
          application/json:
            example:
              new_state: COMPLETED
            schema:
              $ref: '#/components/schemas/CreateRedemptionTransitionsRequest'
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2022-08-31T19:43:03.606Z
                external_settlement_date_time: 2022-08-31T19:43:03.606Z
                initial_status: INITIATED
                new_status: COMPLETED
                redemption_token: reward_redemption_token_1234
                token: reward_program_token_1234
              schema:
                $ref: '#/components/schemas/RedemptionTransitionsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request.
        '404':
          content: {
            }
          description: Reward Program or redemption does not exist.
        '409':
          content: {
            }
          description: Token already associated with a different payload.
        '500':
          content: {
            }
          description: Server error
      summary: Transition reward redemption status
      tags:
        - Reward Redemptions (Beta)
  /credit/rewardprograms/{token}/rulesconfigs:
    get:
      description: Retrieve an array of rules configs for a specific reward program.
      operationId: retrieveRewardProgramsRulesConfig
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
        - description: A value of `true` returns active resources; `false` returns
            inactive resources.
          explode: true
          in: query
          name: is_active
          required: false
          schema:
            type: boolean
            x-allowableValues: '`true`, `false`'
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            type: integer
            x-allowableValues: 1–100
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int64
            type: integer
            x-allowableValues: 0 min
          style: form
        - description: |-
            Field on which to sort.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.

            *NOTE*:
            You must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -updatedTime
            enum:
              - updatedTime
              - -updatedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - accrual_type: CASHBACK
                    created_time: 2021-03-24 16:34:26.666
                    greater_than: 3999
                    is_active: true
                    less_than: 20000
                    percentage: 3
                    reward_program_token: reward_program_token_1234
                    token: reward_rules_config_token_3333
                    updated_time: 2021-03-24 16:34:26.666
                  - accrual_type: CASHBACK
                    created_time: 2021-03-24 16:34:26.666
                    greater_than: 1499
                    is_active: true
                    less_than: 4000
                    percentage: 2
                    reward_program_token: reward_program_token_1234
                    token: reward_rules_config_token_2222
                    updated_time: 2021-03-24 16:34:26.666
                  - accrual_type: CASHBACK
                    created_time: 2021-03-24 16:34:26.666
                    greater_than: 1
                    is_active: true
                    less_than: 1500
                    percentage: 1
                    reward_program_token: reward_program_token_1234
                    token: reward_rules_config_token_1111
                    updated_time: 2021-03-24 16:34:26.666
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/RewardProgramsRulesConfigsPage'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: List rules configurations
      tags:
        - Reward Programs (Beta)
  /credit/rewardprograms/{token}/rulesconfigs/applied:
    get:
      description: Retrieve the most recently applied rules config on a specific reward
        program.
      operationId: retrieveRewardProgramsRulesConfigApplied
      parameters:
        - description: Unique identifier of the reward program.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
            x-allowableValues: Existing reward program token
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                accrual_type: CASHBACK
                created_time: 2021-03-24 16:34:26.666
                greater_than: 3999
                is_active: true
                less_than: 20000
                percentage: 3
                reward_program_token: reward_program_token_1234
                token: reward_rules_config_token_3333
                updated_time: 2021-03-24 16:34:26.666
              schema:
                $ref: '#/components/schemas/RewardProgramsRulesConfigsResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Reward program does not exist.
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve last rules configuration applied
      tags:
        - Reward Programs (Beta)
  /credit/webhooks/{event_type}/{resource_token}:
    post:
      description: |-
        Resends a credit event notification to your webhook endpoint.

        Although you send this request as a `POST`, all parameters are passed in the URL and the body is empty.
        The event notification is resent to your webhook endpoint and also returned in the response to this request.

        For details on how to configure your webhook endpoint, see the About Webhooks <</developer-guides/about-webhooks#_tutorial, tutorial>>.
        For the complete `/webhooks` endpoint reference, see <</core-api/webhooks, Webhooks>>.
      operationId: resendWebhookEvent
      parameters:
        - description: Specifies the type of event you want to resend.
          explode: false
          in: path
          name: event_type
          required: true
          schema:
            enum:
              - ledgerentry
              - journalentry
              - accounttransition
              - accountstatement
              - paymenttransition
            type: string
          style: simple
        - description: |-
            The unique identifier of the resource for which you want to resend a notification.

            Send a `GET` request to `/credit/accounts/{account_token}/journalentries` to retrieve existing journal entry tokens.

            Send a `GET` request to `/credit/accounts/{account_token}/ledgerentries` to retrieve existing ledger entry tokens.

            Send a `GET` request to `/accounts/{account_token}/accounttransitions` to retrieve existing account transition tokens.

            Send a `GET` request to `/credit/accounts/{account_token}/payments/{payment_token}` to retrieve existing payment transition tokens.

            Send a `GET` request to `/accounts/{account_token}/statements` to retrieve existing statement summary tokens.
          explode: false
          in: path
          name: resource_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                account_statement_sample:
                  summary: The following code block shows a sample of a resent `creditaccountstatements`
                    event.
                  value:
                    account_token: my_credit_account_token
                    available_credit: 0
                    closing_balance: 506.41
                    closing_date: 2023-04-01T03:59:59.999Z
                    created_time: 2021-08-18T22:04:31.261Z
                    credit_limit: 500
                    credits: 0
                    cycle_type: REVOLVING
                    days_in_billing_cycle: 31
                    fees: 15
                    interest: 4.96
                    opening_balance: 496.45
                    opening_date: 2023-03-01T05:00:00.000Z
                    past_due_amount: 10
                    payments: 10
                    purchases: 0
                    token: my_credit_account_statement_token
                account_transition_sample:
                  summary: The following code block shows a sample of a resent `creditaccounttransitions`
                    event.
                  value:
                    account_token: my_credit_account_token1234
                    created_time: 2021-08-18T20:25:10.408Z
                    original_status: UNACTIVATED
                    status: ACTIVE
                    token: my_credit_account_transition_token1234
                journal_entry_example:
                  summary: The following code block shows a sample of a resent `creditjournalentries`
                    event.
                  value:
                    account_token: my_credit_account_token1234
                    amount: 10
                    card_token: my_credit_card_token1234
                    created_time: 2021-08-18T22:07:21.422Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: '376582'
                      acquirer_fee_amount: 0
                      acting_user_token: my_user_token
                      amount: 10
                      approval_code: '974406'
                      card:
                        last_four: '9949'
                        metadata: {
                          }
                      card_acceptor:
                        city: San Francisco
                        country_code: USA
                        mcc: '6411'
                        mid: '1234'
                        name: Jane's Bakery
                        postal_code: '94115'
                        state: CA
                        street_address: 1989 Fillmore St
                      card_token: my_credit_card_token1234
                      created_time: 2021-08-18T22:06:52Z
                      currency_code: USD
                      duration: 837
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -10
                            ledger_balance: 510.87
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -10
                        ledger_balance: 510.87
                        pending_credits: 0
                      gpa_order:
                        amount: 10
                        created_time: 2021-08-18T22:06:53Z
                        currency_code: USD
                        funding:
                          amount: 10
                          gateway_log:
                            duration: 485
                            message: Approved or completed successfully
                            order_number: my_gateway_token12345
                            response:
                              code: '200'
                              data:
                                jit_funding:
                                  acting_user_token: my_user_token
                                  amount: 10
                                  method: pgfs.authorization
                                  token: my_jit_funding_token1234
                                  user_token: my_user_token
                            timed_out: false
                            transaction_id: my_transaction_id1234
                          source:
                            active: true
                            created_time: 2021-10-14T17:26:35Z
                            is_default_account: false
                            last_modified_time: 2021-10-14T17:26:35Z
                            name: credit_backed_funding_source
                            token: '**********1ab2'
                            type: programgateway
                        funding_source_token: '**********1ab2'
                        jit_funding:
                          acting_user_token: my_user_token
                          amount: 10
                          method: pgfs.authorization
                          token: my_transaction_id1234
                          user_token: my_user_token
                        last_modified_time: 2021-08-18T22:06:53Z
                        response:
                          code: '0000'
                          memo: Approved or completed successfully
                        state: PENDING
                        token: my_gpa_order_token1234
                        transaction_token: my_transaction_token1234
                        user_token: my_user_token
                      identifier: '234'
                      issuer_payment_node: f8205a67b12b90d695b15704a64c074b
                      issuer_received_time: 2021-08-18T22:06:52.771Z
                      network: DISCOVER
                      network_reference_id: '484311571095'
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: true
                        pin_present: false
                        purchase_amount_only: false
                      request_amount: 10
                      response:
                        code: '0000'
                        memo: Approved or completed successfully
                      settlement_date: 2021-08-18T00:00:00Z
                      state: PENDING
                      token: my_detail_token1234
                      type: authorization
                      user:
                        metadata:
                          key1: value1
                          key2: value2
                          notification_email: user@domain.com
                          notification_language: spa
                      user_token: my_user_token
                      user_transaction_time: 2021-08-18T22:06:52Z
                    detail_token: my_detail_token1234
                    dispute_token: null
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-08-18T22:07:21.422Z
                    memo: Jane's Bakery
                    related_token: null
                    request_time: 2021-08-18T22:06:52.000Z
                    root_token: null
                    status: PENDING
                    token: my_journal_entry_token1234
                    type: authorization
                ledger_entry_sample:
                  summary: The following code block shows a sample of a resent `creditledgerentries`
                    event.
                  value:
                    account_token: my_credit_account_token1234
                    amount: 10
                    card_token: my_credit_card_token1234
                    created_time: 2021-08-18T22:07:21.422Z
                    currency_code: USD
                    detail_object:
                      acquirer:
                        system_trace_audit_number: '376582'
                      acquirer_fee_amount: 0
                      acting_user_token: my_user_token
                      amount: 10
                      approval_code: '974406'
                      card:
                        last_four: '9949'
                        metadata: {
                          }
                      card_acceptor:
                        city: San Francisco
                        country_code: USA
                        mcc: '6411'
                        mid: '1234'
                        name: Jane's Bakery
                        postal_code: '94115'
                        state: CA
                        street_address: 1989 Fillmore St
                      card_token: my_credit_card_token1234
                      created_time: 2021-08-18T22:06:52Z
                      currency_code: USD
                      duration: 837
                      gpa:
                        available_balance: 0
                        balances:
                          USD:
                            available_balance: 0
                            credit_balance: 0
                            currency_code: USD
                            impacted_amount: -10
                            ledger_balance: 510.87
                            pending_credits: 0
                        credit_balance: 0
                        currency_code: USD
                        impacted_amount: -10
                        ledger_balance: 510.87
                        pending_credits: 0
                      gpa_order:
                        amount: 10
                        created_time: 2021-08-18T22:06:53Z
                        currency_code: USD
                        funding:
                          amount: 10
                          gateway_log:
                            duration: 485
                            message: Approved or completed successfully
                            order_number: my_gateway_token12345
                            response:
                              code: '200'
                              data:
                                jit_funding:
                                  acting_user_token: my_user_token
                                  amount: 10
                                  method: pgfs.authorization
                                  token: my_jit_funding_token1234
                                  user_token: my_user_token
                            timed_out: false
                            transaction_id: my_transaction_id1234
                          source:
                            active: true
                            created_time: 2021-10-14T17:26:35Z
                            is_default_account: false
                            last_modified_time: 2021-10-14T17:26:35Z
                            name: credit_backed_funding_source
                            token: '**********1ab2'
                            type: programgateway
                        funding_source_token: '**********1ab2'
                        jit_funding:
                          acting_user_token: my_user_token
                          amount: 10
                          method: pgfs.authorization
                          token: my_transaction_id1234
                          user_token: my_user_token
                        last_modified_time: 2021-08-18T22:06:53Z
                        response:
                          code: '0000'
                          memo: Approved or completed successfully
                        state: PENDING
                        token: my_gpa_order_token1234
                        transaction_token: my_transaction_token1234
                        user_token: my_user_token
                      identifier: '234'
                      issuer_payment_node: f8205a67b12b90d695b15704a64c074b
                      issuer_received_time: 2021-08-18T22:06:52.771Z
                      network: DISCOVER
                      network_reference_id: '484311571095'
                      pos:
                        is_installment: false
                        is_recurring: false
                        partial_approval_capable: true
                        pin_present: false
                        purchase_amount_only: false
                      request_amount: 10
                      response:
                        code: '0000'
                        memo: Approved or completed successfully
                      settlement_date: 2021-08-18T00:00:00Z
                      state: PENDING
                      token: my_detail_token1234
                      type: authorization
                      user:
                        metadata:
                          key1: value1
                          key2: value2
                          notification_email: user@domain.com
                          notification_language: spa
                      user_token: my_user_token
                      user_transaction_time: 2021-08-18T22:06:52Z
                    detail_token: my_detail_token1234
                    dispute_token: null
                    group: PURCHASE
                    id: '12345678'
                    impact_time: 2021-08-18T22:07:21.422Z
                    memo: Jane's Bakery
                    related_token: null
                    request_time: 2021-08-18T22:06:52.000Z
                    root_token: null
                    status: PENDING
                    token: my_ledger_entry_token1234
                    type: authorization
                payment_transition_example:
                  summary: The following code block shows a sample of a resent `creditpaymenttransitions`
                    event.
                  value:
                    account_token: my_credit_account_token1234
                    created_time: 2021-08-17T18:26:47.591Z
                    payment_token: my_credit_account_payment_token1234
                    refund_details: null
                    status: COMPLETED
                    token: my_payment_transition_token1234
              schema:
                $ref: '#/components/schemas/WebhookEventResendContainerResponse'
          description: Event response for which the webhook event was resent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Resend credit event notification
      tags:
        - Account Transitions
        - Journal Entries
        - Ledger Entries
        - Payments
        - Statements
  /depositaccounts:
    post:
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_deposit_account_request'
        description: Create direct deposit account for cardholder
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
          description: Created
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Creates new direct deposit account for cardholder.
      tags:
        - direct deposit accounts
  /depositaccounts/account/{account_number}/user:
    get:
      operationId: getUserForDirectDepositAccount
      parameters:
        - description: Get user associated with direct deposit account number
          explode: false
          in: path
          name: account_number
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Get User for Plain Text Account Number
      tags:
        - direct deposit accounts
  /depositaccounts/transitions:
    post:
      operationId: createTransition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/direct_deposit_account_transition_request'
        description: Create transition for direct deposit account
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
          description: Created
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Creates new transition for a direct deposit account.
      tags:
        - direct deposit accounts
  /depositaccounts/transitions/{token}:
    get:
      operationId: getDirectDepositAccountTransition
      parameters:
        - description: Get specific direct deposit account transition
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Get direct deposit account transition.
      tags:
        - direct deposit accounts
  /depositaccounts/user/{token}:
    get:
      operationId: getUserDirectDepositAccounts
      parameters:
        - description: Number of users to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: Direct deposit account status
          explode: true
          in: query
          name: state
          required: false
          schema:
            enum:
              - ACTIVE
              - SUSPENDED
              - TERMINATED
              - UNSUPPORTED
              - UNACTIVATED
              - LIMITED
            type: string
          style: form
        - description: Get specific direct deposit account
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositAccountListResponse'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: List all specific direct deposit accounts.
      tags:
        - direct deposit accounts
  /depositaccounts/{token}:
    get:
      operationId: getDirectDepositAccount
      parameters:
        - description: Get specific direct deposit account
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Get direct deposit account.
      tags:
        - direct deposit accounts
    put:
      deprecated: true
      operationId: update
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAccountUpdateRequest'
        description: Update direct deposit account
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Update direct deposit account.
      tags:
        - direct deposit accounts
  /depositaccounts/{token}/cdd:
    get:
      operationId: getCDDInfo
      parameters:
        - description: Get CDD info for a specific DDA token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_due_diligence_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Get direct deposit account transition list for card holder.
      tags:
        - direct deposit accounts
  /depositaccounts/{token}/cdd/{cddtoken}:
    put:
      operationId: updateCDDInfo
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: cddtoken
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_due_diligence_update_response'
        description: Update CDD answers
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer_due_diligence_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Update CDD answers for Direct Deposit Account
      tags:
        - direct deposit accounts
  /depositaccounts/{user_token}/transitions:
    get:
      operationId: getTransitionList
      parameters:
        - description: Number of users to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Get direct deposit account transition list for user
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/direct_deposit_account_transition_response'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Get direct deposit account transition list for card holder.
      tags:
        - direct deposit accounts
  /digitalwalletprovisionrequests/androidpay:
    post:
      description: |-
        Use this endpoint to return card data for use in provisioning a digital wallet token into Google Wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsAndroidpay
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_token_0987
              device_id: my_device_id_r51j
              device_type: MOBILE_PHONE
              provisioning_app_version: 2.13.3
              wallet_account_id: my_wallet_account_id_sr51
            schema:
              $ref: '#/components/schemas/digital_wallet_android_pay_provision_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                card_token: my_card_token_1111
                created_time: 2022-11-06T22:43:20Z
                last_modified_time: 2022-11-06T22:43:20Z
                push_tokenize_request_data:
                  display_name: Visa Card
                  last_digits: '3264'
                  network: Visa
                  opaque_payment_card: my_opaque_payment_card_RUza...
                  token_service_provider: TOKEN_PROVIDER_VISA
                  user_address:
                    address1: 180 Grand Ave
                    address2: Suite 500
                    city: Oakland
                    country: US
                    name: John Doe
                    phone: '5105551212'
                    postal_code: '94612'
                    state: CA
              schema:
                $ref: '#/components/schemas/digital_wallet_android_pay_provision_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Create digital wallet token provisioning request for Google Wallet
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/applepay:
    post:
      description: |-
        Use this endpoint to return card data for use in provisioning a digital wallet token into Apple Pay.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsApplepay
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_token_1234
              certificates:
                - my_certificate_ZIzj...
                - my_certificate_SgMA...
              device_type: MOBILE_PHONE
              nonce: my_nonce_JJCF
              nonce_signature: my_nonce_signature_wbBn
              provisioning_app_version: 2.13.7
            schema:
              $ref: '#/components/schemas/digital_wallet_apple_pay_provision_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                activation_data: my_activation_data_VERF...
                card_token: my_card_token_1234
                created_time: 2022-03-22T21:22:19Z
                encrypted_pass_data: my_encrypted_pass_data_KGga...
                ephemeral_public_key: my_ephemeral_public_key_omvw...
                last_modified_time: 2022-03-22T21:22:19Z
              schema:
                $ref: '#/components/schemas/digital_wallet_apple_pay_provision_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Create digital wallet token provisioning request for Apple Pay
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/samsungpay:
    post:
      description: |-
        [NOTE]
        This endpoint is limited in availability.
        For more information, contact your Marqeta representative.

        Use this endpoint to return card data for use in provisioning a digital wallet token into Samsung Wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsSamsungpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_samsung_pay_provision_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_samsung_pay_provision_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Create digital wallet token provisioning request for Samsung Wallet
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/xpay:
    post:
      description: |-
        [NOTE]
        This endpoint is limited in availability.
        For more information, contact your Marqeta representative.

        Use this endpoint to return card data for use in provisioning a digital wallet token into an XPay digital wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsXPay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/digital_wallet_x_pay_provision_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/digital_wallet_x_pay_provision_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Create digital wallet token provisioning request for XPay
      tags:
        - Digital Wallets Management
  /digitalwallets/wpp/applePayJWT:
    post:
      description: |-
        [NOTE]
        This endpoint is currently in beta and subject to change.
        For more information, contact your Marqeta representative.

        Use this endpoint to add a card to Apple Pay via a web application.
      operationId: generateApplePayWPPJWT
      parameters:
        - description: Random pseudo-unique value used for troubleshooting between
            multiple parties.
          example: 123d837e-958a-4e9f-bc97-4843ec948123
          explode: false
          in: header
          name: req-sys-id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request_for_apple_pay_wpp_JWT'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWT_response'
          description: Ok
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message_from_web_push_provisioning_request'
          description: Bad request
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message_from_web_push_provisioning_request'
          description: Unauthorized
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message_from_web_push_provisioning_request'
          description: Internal Server Error
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create request for Apple Pay web push provisioning
      tags:
        - Digital Wallets Management
  /digitalwallets/wpp/googlePayPushProvisioningNotification:
    post:
      description: |-
        [NOTE]
        This endpoint is currently in beta and subject to change.
        For more information, contact your Marqeta representative.

        Use this endpoint to add a card to Google Wallet via a web application.
      operationId: sendOPCDataToGooglePay
      parameters:
        - description: Random pseudo-unique value used for troubleshooting between
            multiple parties.
          example: 123d837e-958a-4e9f-bc97-4843ec948123
          explode: false
          in: header
          name: req-sys-id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sending_provisioning_data_to_google_pay_backend_request'
        required: true
      responses:
        '202':
          content: {
            }
          description: Accepted
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message_from_web_push_provisioning_request'
          description: Bad request
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message_from_web_push_provisioning_request'
          description: Unauthorized
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_message_from_web_push_provisioning_request'
          description: Internal Server Error
          headers:
            req-sys-id:
              description: Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create request for Google Wallet web push provisioning
      tags:
        - Digital Wallets Management
  /digitalwallettokens:
    get:
      description: Use this endpoint to retrieve a list of digital wallet tokens.
      operationId: getDigitalwallettokens
      parameters:
        - description: Number of digital wallet token resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first digital wallet token resource
            in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Date when the digital wallet token becomes active.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: Expiration date of the digital wallet token.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the digital wallet token primary account number (PAN) within the card network.
            This value may vary, depending on the digital wallet.
            For example, the `pan_reference_id` may be different in Apple Pay and Google Wallet for the same digital wallet token.
          explode: true
          in: query
          name: pan_reference_id
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the digital wallet token within the card network.
            The `token_reference_id` is unique at the card network level.
          explode: true
          in: query
          name: token_reference_id
          required: false
          schema:
            type: string
          style: form
        - description: Unique value representing a tokenization request (Mastercard
            only).
          explode: true
          in: query
          name: correlation_id
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token types to display.
          explode: true
          in: query
          name: token_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Name of the token requestor within the card network.

            *NOTE:* The list of example values for this field is maintained by the card networks and is subject to change.
          explode: true
          in: query
          name: token_requestor_name
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
          style: form
        - description: An optional embedded `user` object.
          explode: true
          in: query
          name: embed
          required: false
          schema:
            enum:
              - user
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List digital wallet tokens
      tags:
        - Digital Wallets Management
  /digitalwallettokens/card/{card_token}:
    get:
      description: |-
        Use this endpoint to return an array of all digital wallet tokens for a particular card.

        This endpoint supports <</core-api/sorting-and-pagination, pagination>>.
      operationId: getDigitalwallettokensCardCardtoken
      parameters:
        - description: |-
            Unique identifier of the card.
            Used to minimize the need to exchange card details during subsequent calls, and also for troubleshooting.
          explode: false
          in: path
          name: card_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of digital wallet token resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first digital wallet token resource
            in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - address_verification:
                      name: Address Verification Name
                      postal_code: '94703'
                      street_address: 223 Elm Street
                    card_token: my_card_token_1989
                    created_time: 2022-10-03T18:55:45Z
                    device:
                      device_id: my_device_id_9575
                      ip_address: x.x.x.x
                      language_code: eng
                      location: +37.81/-122.26
                      name: Phone Name
                      phone_number: '12345678900'
                      type: MOBILE_PHONE
                    fulfillment_status: PROVISIONED
                    issuer_eligibility_decision: cardaccount.verified
                    last_modified_time: 2023-01-26T22:36:10Z
                    state: ACTIVE
                    state_reason: Card activated by cardholder
                    token: my_token_0000
                    token_service_provider:
                      pan_reference_id: my_pan_reference_id_0073
                      token_eligibility_decision: DECISION_GREEN
                      token_reference_id: my_token_reference_id_1600
                      token_requestor_id: my_token_requestor_id_0373
                      token_requestor_name: Token Requestor Name
                      token_score: '02'
                      token_type: DEVICE_SECURE_ELEMENT
                    wallet_provider_profile:
                      account:
                        score: '05'
                      device_score: '03'
                      pan_source: KEY_ENTERED
                      risk_assessment:
                        score: DECISION_YELLOW
                        version: '0001.00'
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: List digital wallet tokens for card
      tags:
        - Digital Wallets Management
  /digitalwallettokens/{token}:
    get:
      description: Use this endpoint to retrieve a specific digital wallet token.
      operationId: getDigitalwallettokensToken
      parameters:
        - description: Unique identifier of the digital wallet token (DWT).
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                address_verification:
                  name: Address Verification Name
                  postal_code: '94703'
                  street_address: 223 Elm Street
                card_token: my_card_token_1989
                created_time: 2022-10-03T18:55:45Z
                device:
                  device_id: my_device_id_9575
                  ip_address: x.x.x.x
                  language_code: eng
                  location: +37.81/-122.26
                  name: Phone Name
                  phone_number: '12345678900'
                  type: MOBILE_PHONE
                fulfillment_status: PROVISIONED
                issuer_eligibility_decision: cardaccount.verified
                last_modified_time: 2023-01-26T22:36:10Z
                state: ACTIVE
                state_reason: Card activated by cardholder
                token: my_token_0000
                token_service_provider:
                  pan_reference_id: my_pan_reference_id_0073
                  token_eligibility_decision: DECISION_GREEN
                  token_reference_id: my_token_reference_id_1600
                  token_requestor_id: my_token_requestor_id_0373
                  token_requestor_name: Token Requestor Name
                  token_score: '02'
                  token_type: DEVICE_SECURE_ELEMENT
                wallet_provider_profile:
                  account:
                    score: '05'
                  device_score: '03'
                  pan_source: KEY_ENTERED
                  risk_assessment:
                    score: DECISION_YELLOW
                    version: '0001.00'
              schema:
                $ref: '#/components/schemas/digital_wallet_token'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve digital wallet token
      tags:
        - Digital Wallets Management
  /digitalwallettokens/{token}/showtokenpan:
    get:
      description: |-
        Use this endpoint to retrieve a digital wallet token with the entire primary account number (PAN) displayed.
        The PAN returned is of the digital wallet token and not of the card.
        (For security reasons, the PAN is not fully visible on the digital wallet token returned by `GET` `/digitalwallettokens/{token}`.)

        [WARNING]
        Sending a request to this endpoint requires PCI DSS compliance.
        You must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.
      operationId: getDigitalwallettokensTokenShowtokenpan
      parameters:
        - description: Unique identifier of the digital wallet token (DWT).
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                address_verification:
                  name: Address Verification Name
                  postal_code: '94703'
                  street_address: 223 Elm Street
                card_token: my_card_token_1989
                created_time: 2022-10-03T18:55:45Z
                device:
                  device_id: my_device_id_9575
                  ip_address: x.x.x.x
                  language_code: eng
                  location: +37.81/-122.26
                  name: Phone Name
                  phone_number: '12345678900'
                  type: MOBILE_PHONE
                fulfillment_status: PROVISIONED
                issuer_eligibility_decision: cardaccount.verified
                last_modified_time: 2023-01-26T22:36:10Z
                state: ACTIVE
                state_reason: Card activated by cardholder
                token: my_token_0000
                token_service_provider:
                  pan_reference_id: my_pan_reference_id_0073
                  token_eligibility_decision: DECISION_GREEN
                  token_pan: my_token_pan_6792
                  token_reference_id: my_token_reference_id_1600
                  token_requestor_id: my_token_requestor_id_0373
                  token_requestor_name: Token Requestor Name
                  token_score: '02'
                  token_type: DEVICE_SECURE_ELEMENT
                wallet_provider_profile:
                  account:
                    score: '05'
                  device_score: '03'
                  pan_source: KEY_ENTERED
                  risk_assessment:
                    score: DECISION_YELLOW
                    version: '0001.00'
              schema:
                $ref: '#/components/schemas/digital_wallet_token'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Card not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve digital wallet token PAN
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions:
    post:
      description: Use this endpoint to transition a digital wallet token from one
        state to another.
      operationId: postDigitalwallettokentransitions
      requestBody:
        content:
          application/json:
            example:
              digital_wallet_token:
                token: my_digital_wallet_token_0987
              reason: Passed additional identity verification
              reason_code: '18'
              state: ACTIVE
              token: my_transition_04
            schema:
              $ref: '#/components/schemas/digital_wallet_token_transition_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                channel: API
                created_time: 2023-02-23T18:57:45Z
                digital_wallet_token:
                  token: my_digital_wallet_token_0987
                fulfillment_status: PROVISIONED
                reason: Passed additional identity verification
                reason_code: '18'
                state: ACTIVE
                token: my_transition_04
                type: state.activated
              schema:
                $ref: '#/components/schemas/digital_wallet_token_transition_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create digital wallet token transition
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions/digitalwallettoken/{token}:
    get:
      description: |-
        Use this endpoint to return an array of all transitions for a particular digital wallet token.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>.
      operationId: getDigitalwallettokentransitionsDigitalwallettokenToken
      parameters:
        - description: Unique identifier of the digital wallet token (DWT).
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of digital wallet transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first digital wallet token in the
            returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - channel: API
                    created_time: 2023-02-23T18:57:45Z
                    digital_wallet_token:
                      token: my_digital_wallet_token_0987
                    fulfillment_status: PROVISIONED
                    reason: Passed additional identity verification
                    reason_code: '18'
                    state: ACTIVE
                    token: my_transition_04
                    type: state.activated
                  - channel: TOKEN_SERVICE_PROVIDER
                    created_time: 2023-02-23T18:44:21Z
                    digital_wallet_token:
                      token: my_digital_wallet_token_0987
                    fulfillment_status: DECISION_YELLOW
                    reason: Additional identity verification required
                    reason_code: '21'
                    state: REQUESTED
                    token: my_transition_04
                    type: fulfillment.requested
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/DigitalWalletTokenTransitionListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List transitions for digital wallet token
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific digital wallet token transition.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getDigitalwallettokentransitionsToken
      parameters:
        - description: Unique identifier of the digital wallet token (DWT) transition.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                channel: API
                created_time: 2023-02-23T18:57:45Z
                digital_wallet_token:
                  token: my_digital_wallet_token_0987
                fulfillment_status: PROVISIONED
                reason: Passed additional identity verification
                reason_code: '18'
                state: ACTIVE
                token: my_transition_04
                type: state.activated
              schema:
                $ref: '#/components/schemas/digital_wallet_token_transition_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Transition not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve digital wallet token transition
      tags:
        - Digital Wallets Management
  /directdeposits:
    get:
      operationId: getDirectdeposits
      parameters:
        - description: The number of direct deposit records to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            maximum: 100
            type: integer
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Reversed after grace period
          explode: true
          in: query
          name: reversed_after_grace_period
          required: false
          schema:
            type: boolean
          style: form
        - description: User token
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: Business token
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: 'Comma-delimited list of direct deposit states to display e.g.
            PENDING | REVERSED | APPLIED | REJECTED '
          explode: true
          in: query
          name: direct_deposit_state
          required: false
          schema:
            enum:
              - PENDING
              - APPLIED
              - REVERSED
              - REJECTED
            type: string
          style: form
        - description: Start Settlement Date
          explode: true
          in: query
          name: start_settlement_date
          required: false
          schema:
            type: string
          style: form
        - description: End Settlement Date
          explode: true
          in: query
          name: end_settlement_date
          required: false
          schema:
            type: string
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieves a list of all direct deposit records for your program.
      tags:
        - direct deposits
  /directdeposits/accounts/{user_or_business_token}:
    get:
      deprecated: true
      operationId: getDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deposit_account'
          description: Success
        '400':
          content: {
            }
          description: Cardholder not found
        '404':
          content: {
            }
          description: Account not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns an account and routing number which can be used for direct
        deposit
      tags:
        - direct deposits
    put:
      deprecated: true
      operationId: putDirectdepositsAccountsUserorbusinesstoken
      parameters:
        - description: User or business token
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deposit_account_update_request'
        description: Deposit account update request
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deposit_account'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Updates a specific direct deposit account
      tags:
        - direct deposits
  /directdeposits/transitions:
    get:
      operationId: getDirectdepositsTransitions
      parameters:
        - description: Number of direct deposit transitions to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            maximum: 100
            type: integer
          style: form
        - description: User token
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: Business token
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: Direct deposit token
          explode: true
          in: query
          name: direct_deposit_token
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: 'Comma-delimited list of direct deposit states to display e.g.
            PENDING | REVERSED | APPLIED | REJECTED '
          explode: true
          in: query
          name: states
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionListResponse'
          description: Success
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns a list of direct deposit transitions
      tags:
        - direct deposits
    post:
      operationId: postDirectdepositsTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDepositTransitionRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Creates a direct deposit transition
      tags:
        - direct deposits
  /directdeposits/transitions/{token}:
    get:
      operationId: getDirectdepositsTransitionsToken
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectDepositTransitionResponse'
          description: Success
        '404':
          content: {
            }
          description: Direct deposit transition not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns a direct deposit transition
      tags:
        - direct deposits
  /directdeposits/{token}:
    get:
      operationId: getDirectdepositsToken
      parameters:
        - explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDepositResponse'
          description: Success
        '404':
          content: {
            }
          description: Direct deposit entry not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns a direct deposit entry
      tags:
        - direct deposits
  /fees:
    get:
      description: |-
        Use this endpoint to list existing fees.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getFees
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data[]:
                  active: true
                  amount: 3.0
                  created_time: 2022-05-11T18:03:39Z
                  currency_code: USD
                  last_modified_time: 2022-05-11T18:03:39Z
                  name: My Fee 02
                  real_time_assessment:
                    domestic_enabled: true
                    international_enabled: true
                    transaction_type: authorization
                  tags: My Tags
                  token: my_fee_02
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/FeeListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List fees
      tags:
        - Fees
    post:
      description: |-
        Use this endpoint to create a fee.
        Add the source details to the body of the request in link:http://www.json.org/[JSON, window="_blank"] format.
      operationId: postFees
      requestBody:
        content:
          application/json:
            example:
              amount: 1.0
              currency_code: USD
              name: My Fee 01
              real_time_assessment:
                domestic_enabled: true
                international_enabled: true
                transaction_type: authorization
              tags: My Tags
              token: my_fee_01
            schema:
              $ref: '#/components/schemas/fee_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                amount: 1
                created_time: 2022-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2022-05-11T17:57:21Z
                name: My Fee 01
                real_time_assessment:
                  domestic_enabled: true
                  international_enabled: true
                  transaction_type: authorization
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: '#/components/schemas/fee'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create fee
      tags:
        - Fees
  /fees/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a fee.
        Include the `token` path parameter to specify the fee to return.
      operationId: getFeesToken
      parameters:
        - description: Unique identifier of the fee resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                amount: 1.0
                created_time: 2022-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2022-05-11T17:57:21Z
                name: My Fee 01
                real_time_assessment:
                  domestic_enabled: true
                  international_enabled: true
                  transaction_type: authorization
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: '#/components/schemas/fee'
          description: Success
        '404':
          content: {
            }
          description: Fee not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve fee
      tags:
        - Fees
    put:
      description: |-
        Use this endpoint to update a fee.
        Include the `token` as a path parameter to indicate the fee to update.
      operationId: putFeesToken
      parameters:
        - description: Unique identifier of the fee resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: '#/components/schemas/fee_update_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                active: false
                amount: 1.0
                created_time: 2022-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2022-05-11T17:57:21Z
                name: My Fee 01
                real_time_assessment:
                  domestic_enabled: true
                  international_enabled: true
                  transaction_type: authorization
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: '#/components/schemas/fee'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update fee
      tags:
        - Fees
  /feetransfers:
    post:
      description: |-
        Use this endpoint to create a fee transfer.
        You must pass in either `user_token` or `business_token` to associate a user or business with the fee transfer.

        This is an all-or-nothing operation.
        When more than one fee is present, you must assess either all fees, or no fees.

        [NOTE]
        This feature is currently in beta and subject to change.
        It also requires additional activation steps.
        To learn more about the Beta program for this feature and about activating it for your program, contact your Marqeta representative.
      operationId: postFeetransfers
      requestBody:
        content:
          application/json:
            example:
              business_token: my_business_01
              fees:
                - memo: Initiation fee
                  token: my_fee_01
              token: my_feetransfer_01
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/fee_transfer_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                business_token: my_business_01
                created_time: 2022-05-11T19:05:55Z
                fees:
                  - fee:
                      active: true
                      amount: 1
                      created_time: 2022-05-11T17:57:21Z
                      currency_code: USD
                      last_modified_time: 2022-05-11T17:57:21Z
                      name: My Fee 01
                      real_time_assessment:
                        domestic_enabled: true
                        international_enabled: true
                        transaction_type: authorization
                      tags: My Tags
                      token: my_fee_01
                    memo: Initiation fee
                    token: my_fee_01
                    transaction_token: '162'
                token: my_feetransfer_01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '422':
          content: {
            }
          description: Rule violations
        '500':
          content: {
            }
          description: Server error
      summary: Create fee transfer
      tags:
        - Fee Transfers
  /feetransfers/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific fee transfer.
        Include the fee transfer `token` path parameter to specify the fee transfer to return.
      operationId: getFeetransfersToken
      parameters:
        - description: Unique identifier of the fee transfer to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                business_token: my_business_01
                created_time: 2022-05-11T19:05:55Z
                fees:
                  - fee:
                      active: true
                      amount: 1
                      created_time: 2022-05-11T17:57:21Z
                      currency_code: USD
                      last_modified_time: 2022-05-11T17:57:21Z
                      name: My Fee 01
                      real_time_assessment:
                        domestic_enabled: true
                        international_enabled: true
                        transaction_type: authorization
                      tags: My Tags
                      token: my_fee_01
                    memo: Initiation fee
                    token: my_fee_01
                    transaction_token: '162'
                token: my_feetransfer_01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/fee_transfer_response'
          description: Success
        '404':
          content: {
            }
          description: Fee transfer not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve fee transfer
      tags:
        - Fee Transfers
  /fundingsources/ach:
    post:
      description: |-
        Create an ACH funding source for an existing account holder.
        Specify the account holder of the funding source by passing a user or business token.

        When adding an ACH funding source, a small amount is deposited in the bank account as a test.
        The test deposit should be reflected in the account after two to three business days.
        You must then make an API call to verify the deposit amount in order to activate the ACH account.
        See <</core-api/account-holder-funding-sources#putFundingsourcesAchFundingsourcetoken, Verify or Update ACH Funding Source>> on this page for more information.

        The response body returns details about the account, including the verification status.
        Possible ACH verification status values include `VERIFICATION_PENDING`, `ACH_VERIFIED`, and `ACH_FAILED`.
      operationId: postFundingsourcesAch
      requestBody:
        content:
          application/json:
            example:
              account_number: '987654321'
              account_type: savings
              is_default_account: false
              name_on_account: Jane Doe
              routing_number: '121000358'
              token: my_user_01_fundingsource_token_01
              user_token: my_user_01
              verification_notes: These are my verification notes.
              verification_override: true
            schema:
              $ref: '#/components/schemas/ach_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '4321'
                account_type: savings
                active: true
                created_time: 2021-02-26T18:46:06Z
                date_sent_for_verification: 2021-02-27T07:36:05Z
                date_verified: 2021-02-27T11:03:45Z
                is_default_account: false
                last_modified_time: 2021-03-26T12:44:02Z
                name_on_account: Jane Doe
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_notes: These are my verification notes.
                verification_override: true
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/ach_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create ACH source
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/partner:
    post:
      description: TBD
      operationId: postFundingsourcesAchPartner
      requestBody:
        content:
          application/json:
            example:
              is_default_account: false
              partner: PLAID
              partner_account_link_reference_token: processor-sandbox-reference-token
              token: my_user_01_fundingsource_token_01
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/ach_partner_request_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '4321'
                account_type: savings
                active: true
                created_time: 2021-02-26T18:46:06Z
                date_sent_for_verification: 2021-02-27T07:36:05Z
                date_verified: 2021-02-27T11:03:45Z
                is_default_account: false
                last_modified_time: 2021-03-26T12:44:02Z
                name_on_account: Jane Doe
                partner: PLAID
                partner_account_link_reference_token: processor-sandbox-reference-token
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_notes: These are my verification notes.
                verification_override: true
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/ach_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create ACH source
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/partner/{funding_source_token}/balance:
    get:
      description: Placeholder description for unknown new endpoint.
      operationId: getAchPartnerLinkedFundingSourceBalance
      parameters:
        - description: Funding source token
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedAccountBalanceResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve linked funding source balance
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/{funding_source_token}:
    get:
      description: |-
        Retrieve a specific ACH funding source.

        The response body returns details about the account, including the verification status.
        Possible ACH verification status values are: `VERIFICATION_PENDING`, `ACH_VERIFIED`, and `ACH_FAILED`.
      operationId: getFundingsourcesAchFundingsourcetoken
      parameters:
        - description: Unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '4321'
                account_type: savings
                active: true
                created_time: 2021-02-26T18:46:06Z
                date_sent_for_verification: 2021-02-27T18:00:00Z
                date_verified: 2021-02-27T18:15:00Z
                is_default_account: false
                last_modified_time: 2021-03-12T04:58:46Z
                name_on_account: Jane Doe
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_notes: These are my verification notes.
                verification_override: true
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/ach_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve ACH source
      tags:
        - Account Holder Funding Sources
    put:
      description: |-
        Verify or update an ACH funding source.

        If you are verifying the ACH source, include the verification amounts in the body of the request.
        ACH verification will fail if the verification amounts are not entered in the correct order.
        `verify_amount1` must match the first deposit amount, and `verify_amount2` must match the second.

        If you are updating the ACH source, include the `active` field instead.
        The `active` field is the only field you can update.
      operationId: putFundingsourcesAchFundingsourcetoken
      parameters:
        - description: Unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
              verify_amount1: 0.43
              verify_amount2: 0.11
            schema:
              $ref: '#/components/schemas/ach_verification_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '4321'
                account_type: savings
                active: false
                created_time: 2022-01-26T20:03:05Z
                date_sent_for_verification: 2022-01-27T18:00:00Z
                date_verified: 2022-01-27T18:15:00Z
                is_default_account: false
                last_modified_time: 2022-02-26T20:03:05Z
                name_on_account: Jane Doe
                token: my_user_01_fundingsource_token_01
                user_token: my_user_01
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/ach_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Verify or update ACH source
      tags:
        - Account Holder Funding Sources
  /fundingsources/ach/{funding_source_token}/verificationamounts:
    get:
      description: |-
        In your sandbox environment, retrieve the amounts used to verify the association with your ACH account.

        Use this endpoint for testing purposes only.
        In production, verification amounts are retrieved from the bank statement of the account holder.
      operationId: getFundingsourcesAchFundingsourcetokenVerificationamounts
      parameters:
        - description: Unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                token: jane_doe_ach_token
                verify_amount1: 0.43
                verify_amount2: 0.11
              schema:
                $ref: '#/components/schemas/ach_verification_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve ACH verification amounts
      tags:
        - Account Holder Funding Sources
  /fundingsources/addresses:
    post:
      description: |-
        Use this endpoint to create an address resource.

        When creating the address, you must pass the token of either an existing user in the `user_token` field or an existing business in the `business_token` field.
        Do not pass both.
      operationId: postFundingsourcesAddresses
      requestBody:
        content:
          application/json:
            example:
              address_1: 1234 Grove Street
              business_token: my_business_01
              city: Berkeley
              country: USA
              first_name: Jane
              last_name: Doe
              phone: '5104444444'
              postal_code: '94705'
              state: CA
              token: my_funding_source_address_biz_01
              zip: '94705'
            schema:
              $ref: '#/components/schemas/card_holder_address_model'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                address_1: 1234 Grove Street
                business_token: my_business_01
                city: Berkeley
                country: USA
                created_time: 2022-02-20T20:04:13Z
                first_name: Jane
                is_default_address: true
                last_modified_time: 2022-02-20T20:04:13Z
                last_name: Doe
                phone: '5104444444'
                postal_code: '94705'
                state: CA
                token: my_funding_source_address_biz_01
                zip: '94705'
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create address
      tags:
        - Addresses
  /fundingsources/addresses/business/{business_token}:
    get:
      description: |-
        Use this endpoint to list existing addresses for a business.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesAddressesBusinessBusinesstoken
      parameters:
        - description: Unique identifier of the business account holder.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    address_1: 1234 Grove Street
                    business_token: my_business_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-26T21:34:42Z
                    first_name: Jane
                    is_default_address: true
                    last_modified_time: 2022-02-27T18:55:59Z
                    last_name: Doe
                    phone: '5104444444'
                    postal_code: '94705'
                    state: CA
                    token: my_funding_source_address_bus_01
                    zip: '94705'
                  - active: true
                    address_1: 5678 Grove Street
                    business_token: my_business_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-25T19:48:30Z
                    first_name: Jane
                    is_default_address: false
                    last_modified_time: 2022-03-25T10:17:38Z
                    last_name: Doe
                    phone: '5104444444'
                    postal_code: '94705'
                    state: CA
                    token: my_funding_source_address_bus_02
                    zip: '94705'
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CardholderAddressListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: List business addresses
      tags:
        - Addresses
  /fundingsources/addresses/user/{user_token}:
    get:
      description: |-
        Use this endpoint to list existing addresses for a user.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesAddressesUserUsertoken
      parameters:
        - description: Unique identifier of the user account holder.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    address_1: 1234 Grove Street
                    business_token: my_user_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-27T21:34:42Z
                    first_name: Jane
                    is_default_address: true
                    last_modified_time: 2022-02-28T18:55:59Z
                    last_name: Doe
                    phone: '5104444444'
                    postal_code: '94705'
                    state: CA
                    token: my_funding_source_address_user_01
                    zip: '94705'
                  - active: true
                    address_1: 5678 Grove Street
                    business_token: my_user_01
                    city: Berkeley
                    country: USA
                    created_time: 2022-02-25T19:48:30Z
                    first_name: Jane
                    is_default_address: false
                    last_modified_time: 2022-03-25T19:48:30Z
                    last_name: Doe
                    phone: '5104444444'
                    postal_code: '94705'
                    state: CA
                    token: my_funding_source_address_user_02
                    zip: '94705'
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/CardholderAddressListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Lists all addresses for a user
      tags:
        - Addresses
  /fundingsources/addresses/{funding_source_address_token}:
    get:
      description: Use this endpoint to retrieve a funding source address.
      operationId: getFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - description: Unique identifier of the funding source address.
          explode: false
          in: path
          name: funding_source_address_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                address_1: 1234 Grove Street
                business_token: my_business_01
                city: Berkeley
                country: USA
                created_time: 2022-02-20T20:04:13Z
                first_name: Jane
                is_default_address: true
                last_modified_time: 2022-02-20T20:04:13Z
                last_name: Doe
                phone: '5104444444'
                postal_code: '94705'
                state: CA
                token: my_funding_source_address_biz_01
                zip: '94705'
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve address
      tags:
        - Addresses
    put:
      description: |-
        Use this endpoint to update an address.
        Only values of parameters in the request are modified; all others are left unchanged.
      operationId: putFundingsourcesAddressesFundingsourceaddresstoken
      parameters:
        - description: Unique identifier of the funding source address.
          explode: false
          in: path
          name: funding_source_address_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              address_1: 333 Elm Street
            schema:
              $ref: '#/components/schemas/card_holder_address_update_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                address_1: 333 Elm Street
                business_token: my_business_01
                city: Berkeley
                country: USA
                created_time: 2022-02-20T20:04:13Z
                first_name: Jane
                is_default_address: true
                last_modified_time: 2022-02-28T16:00:00Z
                last_name: Doe
                phone: '5104444444'
                postal_code: '94705'
                state: CA
                token: my_funding_source_address_biz_01
                zip: '94705'
              schema:
                $ref: '#/components/schemas/CardholderAddressResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Updates the account holder address for a funding source
      tags:
        - Addresses
  /fundingsources/business/{business_token}:
    get:
      description: |-
        List funding sources associated with a specific business.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesBusinessBusinesstoken
      parameters:
        - description: Unique identifier of the business account holder.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Type of funding source to return: ACH or payment card.
            Leave unspecified to return both types.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_suffix: '4113'
                    account_type: corporate
                    active: true
                    created_time: 2022-02-26T21:26:13Z
                    exp_date: '1227'
                    is_default_account: true
                    last_modified_time: 2022-02-26T21:26:13Z
                    token: my_paymentcard_funding_source_01
                    type: paymentcard
                    user_token: my_business_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/FundingAccountListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: No funding accounts found
        '500':
          content: {
            }
          description: Server error
      summary: List sources for business
      tags:
        - Account Holder Funding Sources
  /fundingsources/paymentcard:
    post:
      description: |-
        Create a payment card funding source for an existing account holder.
        This endpoint returns the card type and the last four digits of the card, and then sets the `active_ field` to `true`.

        Marqeta retains only a tokenized representation of the card number.

        [NOTE]
        This endpoint is only available to its current users.
      operationId: postFundingsourcesPaymentcard
      requestBody:
        content:
          application/json:
            example:
              account_number: '6559906559906557'
              cvv_number: '123'
              exp_date: '1227'
              is_default_account: true
              postal_code: '94608'
              token: my_paymentcard_01
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/token_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '6557'
                account_type: corporate
                active: true
                created_time: 2022-02-26T20:00:00Z
                exp_date: '1227'
                is_default_account: true
                last_modified_time: 2022-02-26T21:00:00Z
                token: my_paymentcard_01
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create payment card source
      tags:
        - Account Holder Funding Sources
  /fundingsources/paymentcard/{funding_source_token}:
    get:
      description: |-
        Retrieve a specific payment card funding source.

        [NOTE]
        This endpoint is only available to its current users.
      operationId: getFundingsourcesPaymentcardFundingsourcetoken
      parameters:
        - description: Unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '6557'
                account_type: corporate
                active: true
                created_time: 2022-02-26T20:00:00Z
                exp_date: '1227'
                is_default_account: true
                last_modified_time: 2022-02-26T21:00:00Z
                token: my_paymentcard_01
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve payment card source
      tags:
        - Account Holder Funding Sources
    put:
      description: |-
        Update a payment card funding source.
        Only the values of parameters in the request are modified; all others are left unchanged.

        [NOTE]
        This endpoint is only available to its current users.
      operationId: putFundingsourcesFundingsourcetoken
      parameters:
        - description: Unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              exp_date: '1227'
              is_default_account: false
            schema:
              $ref: '#/components/schemas/token_update_request'
        description: Payment card
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '6557'
                account_type: DISCOVER
                active: true
                created_time: 2022-02-26T20:00:00Z
                exp_date: '1227'
                is_default_account: false
                last_modified_time: 2022-02-26T21:00:00Z
                token: my_paymentcard_01
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update payment card source
      tags:
        - Account Holder Funding Sources
  /fundingsources/program:
    post:
      description: Create a program funding source.
      operationId: postFundingsourcesProgram
      requestBody:
        content:
          application/json:
            example:
              active: true
              name: my_programfundingsource_name
              token: my_programfundingsource_token
            schema:
              $ref: '#/components/schemas/program_funding_source_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                account: 12.003.001.000147
                active: true
                created_time: 2022-02-25T20:46:04Z
                last_modified_time: 2022-02-25T20:46:04Z
                name: my_programfundingsource_name
                token: my_programfundingsource_token
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
          description: Success
        '400':
          content: {
            }
          description: Invalid fields detected
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create program source
      tags:
        - Program Funding Sources
  /fundingsources/program/ach:
    get:
      description: List ACH program funding sources.
      operationId: getAllACHFundingSources
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: |-
            If `true`, returns ACH funding sources from active programs only.
            If `false`, returns all ACH funding sources.
          explode: true
          in: query
          name: active
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ACHListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad Request
        '404':
          content: {
            }
          description: Not Found
        '500':
          content: {
            }
          description: Server error
      summary: List ACH program sources
      tags:
        - Program Funding Sources
    post:
      description: Create an ACH program funding source.
      operationId: postFundingsourcesProgramAch
      requestBody:
        content:
          application/json:
            example:
              account_number: '888271159'
              account_type: checking
              is_default_account: true
              name_on_account: John Doe
              routing_number: '121000357'
              verification_notes: testing
              verification_override: true
            schema:
              $ref: '#/components/schemas/base_ach_request_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '1156'
                account_type: checking
                active: true
                created_time: 2022-02-27T18:40:27Z
                is_default_account: true
                last_modified_time: 2022-02-27T18:40:27Z
                name_on_account: John Doe
                token: my_program_ach_source_token
                verification_status: ACH_VERIFIED
              schema:
                $ref: '#/components/schemas/base_ach_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create ACH program source
      tags:
        - Program Funding Sources
  /fundingsources/program/{token}:
    get:
      description: Retrieve a specific program funding source, whether active or inactive.
      operationId: getFundingsourcesProgramToken
      parameters:
        - description: Unique identifier of the program funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                account: 12.003.001.000147
                active: true
                created_time: 2022-02-25T20:46:04Z
                last_modified_time: 2022-02-25T20:46:04Z
                name: my_programfundingsource_name
                token: my_programfundingsource_token
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
          description: Success
        '404':
          content: {
            }
          description: Program funding source not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve program source
      tags:
        - Program Funding Sources
    put:
      description: |-
        Update a program funding source.
        Only the values of parameters specified in the request are modified; all others are left unchanged.
      operationId: putFundingsourcesProgramToken
      parameters:
        - description: Unique identifier of the program funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
              name: your_programfundingsource_name
            schema:
              $ref: '#/components/schemas/program_funding_source_update_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account: 12.003.001.000147
                active: true
                created_time: 2022-02-25T20:46:04Z
                last_modified_time: 2022-02-25T20:50:00Z
                name: your_programfundingsource_name
                token: my_programfundingsource_token
              schema:
                $ref: '#/components/schemas/program_funding_source_response'
          description: Success
        '400':
          content: {
            }
          description: Invalid fields detected
        '500':
          content: {
            }
          description: Server error
      summary: Update program source
      tags:
        - Program Funding Sources
  /fundingsources/programgateway:
    post:
      description: |-
        Creates a program gateway funding source.
        A program gateway funding source is a transaction relay that, when configured, allows you to approve or decline transactions in real time.
      operationId: postFundingsourcesProgramgateway
      requestBody:
        content:
          application/json:
            example:
              basic_auth_password: my_20-to-100-character_password
              basic_auth_username: my_username
              name: my_pgfs_name
              token: my_pgfs_token
              url: https://my_secure_domain.com/my_gateway
            schema:
              $ref: '#/components/schemas/gateway_program_funding_source_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: true
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: '2'
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
          description: Success
        '400':
          content: {
            }
          description: Invalid fields detected
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create program gateway source
      tags:
        - Program Gateway Funding Sources
  /fundingsources/programgateway/customheaders/{token}:
    put:
      description: Adds or updates custom HTTP headers for a specific program gateway
        funding source.
      operationId: putFundingsourcesProgramgatewayCustomHeaderToken
      parameters:
        - description: Unique identifier of the program gateway funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              custom_header:
                my_header_name_1: my_value_1
                my_header_name_2: my_value_2
                my_header_name_3: my_value_3
            schema:
              $ref: '#/components/schemas/gateway_program_custom_header_update_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: true
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: '2'
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
          description: Success
        '400':
          content: {
            }
          description: Invalid fields detected
        '500':
          content: {
            }
          description: Server error
      summary: Update program gateway source custom headers
      tags:
        - Program Gateway Funding Sources
  /fundingsources/programgateway/{token}:
    get:
      description: Retrieves a specific program gateway funding source.
      operationId: getFundingsourcesProgramgatewayToken
      parameters:
        - description: Unique identifier of the program gateway funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: true
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: '2'
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
          description: Success
        '404':
          content: {
            }
          description: Program gateway funding source not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve program gateway source
      tags:
        - Program Gateway Funding Sources
    put:
      description: |-
        Updates a program gateway funding source.
        Only the values of parameters specified in the request are modified; all others are left unchanged.
      operationId: putFundingsourcesProgramgatewayToken
      parameters:
        - description: Unique identifier of the program gateway funding source.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
              basic_auth_password: my_20-to-100-character_password
              basic_auth_username: my_username
              url: https://my_secure_domain.com/my_gateway
            schema:
              $ref: '#/components/schemas/gateway_program_funding_source_update_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                account: 12.003.001.000155
                active: false
                basic_auth_password: my_20-to-100-character_password
                basic_auth_username: my_username
                created_time: 2022-02-28T20:00:00Z
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                  my_header_name_3: my_value_3
                last_modified_time: 2022-02-28T20:00:00Z
                name: my_pgfs_name
                timeout_millis: 3000
                token: my_pgfs_token
                url: https://my_secure_domain.com/my_gateway
                use_mtls: false
                version: '2'
              schema:
                $ref: '#/components/schemas/gateway_program_funding_source_response'
          description: Success
        '400':
          content: {
            }
          description: Invalid fields detected
        '500':
          content: {
            }
          description: Server error
      summary: Update program gateway source
      tags:
        - Program Gateway Funding Sources
  /fundingsources/user/{user_token}:
    get:
      description: |-
        List funding sources associated with a specific user.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getFundingsourcesUserUsertoken
      parameters:
        - description: Unique identifier of the `user` account holder.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Type of funding source to retrieve, ACH or payment card.
            Leave unspecified to return both types.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_suffix: '4113'
                    account_type: corporate
                    active: true
                    created_time: 2022-02-26T20:03:05Z
                    exp_date: '1227'
                    is_default_account: true
                    last_modified_time: 2022-02-26T20:03:05Z
                    token: jane_doe_paymentcard_01
                    type: paymentcard
                    user_token: my_user_01
                  - account_suffix: '4321'
                    account_type: savings
                    active: false
                    created_time: 2022-02-26T20:03:05Z
                    date_sent_for_verification: 2022-02-27T23:27:58Z
                    is_default_account: false
                    last_modified_time: 2022-02-26T20:03:05Z
                    name_on_account: Jane Doe
                    token: jane_doe_ach_token
                    type: ach
                    user_token: my_user_01
                    verification_status: ACH_VERIFIED
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/FundingAccountListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: No funding accounts found
        '500':
          content: {
            }
          description: Server error
      summary: List sources for user
      tags:
        - Account Holder Funding Sources
  /fundingsources/{funding_source_token}/default:
    put:
      description: |-
        Configure either an ACH funding source or a payment card funding source as the default funding source.

        A default funding source is used when you omit the `funding_source_token` field from funding requests, such as a `POST` request to `/gpaorders`.
        Note that the first funding source you create is automatically set as the default (`is_default_source=true`).
      operationId: putFundingsourcesFundingsourcetokenDefault
      parameters:
        - description: Unique identifier of the funding source.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                account_suffix: '4321'
                account_type: corporate
                active: true
                created_time: 2022-02-28T20:00:00Z
                exp_date: '1227'
                is_default_account: true
                last_modified_time: 2022-02-28T20:00:00Z
                token: jane_doe_paymentcard_token
                type: paymentcard
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/payment_card_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Configures a default funding source
      tags:
        - Account Holder Funding Sources
  /gpaorders:
    post:
      description: |-
        Use this endpoint to create an order to fund an account holder's GPA.

        You can assess a <</core-api/fees, fee>> while funding a GPA by using the optional `fees` array to attach one or more fee resources to the GPA order.
        When you create a GPA order, the GPA is first credited for the fees, then debited at funding time.
      operationId: postGpaorders
      requestBody:
        content:
          application/json:
            example:
              amount: 1000
              currency_code: USD
              funding_source_token: my_program_funding_source_01
              token: my_gpaorder_01
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/gpa_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                amount: 1000
                created_time: 2022-05-10T23:00:15Z
                currency_code: USD
                funding:
                  amount: 1000
                  source:
                    active: true
                    created_time: 2022-11-30T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2022-11-30T19:13:23Z
                    name: my_program_funding_source_01
                    token: '**********e_01'
                    type: program
                funding_source_token: '**********e_01'
                last_modified_time: 2022-05-10T23:00:15Z
                response:
                  code: '0000'
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_gpaorder_01
                transaction_token: 156
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/gpa_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '422':
          content: {
            }
          description: Rule violations or declined transactions from funding source
        '500':
          content: {
            }
          description: Server error
      summary: Create GPA order
      tags:
        - GPA Orders
  /gpaorders/unloads:
    get:
      description: |-
        Use this endpoint to list all GPA unloads or GPA unloads associated with a specific user or business.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getGpaordersUnloads
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: |-
            Unique identifier of the `user` resource.

            Send a `GET` request to `/users` to retrieve user tokens.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the `business` resource.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the original GPA order.

            Send a `GET` request to `/transactions?type=gpa.credit` to retrieve GPA order tokens.
          explode: true
          in: query
          name: original_order_token
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data[]:
                  amount: 500
                  created_time: 2022-11-30T23:14:50Z
                  funding:
                    amount: 500
                    source:
                      active: true
                      created_time: 2022-03-31T19:13:23Z
                      is_default_account: false
                      last_modified_time: 2022-03-31T19:13:23Z
                      name: my_program_funding_source_01
                      token: '**********e_01'
                      type: program
                  funding_source_token: '**********e_01'
                  last_modified_time: 2022-11-30T23:15:50Z
                  original_order_token: my_gpaorder_01
                  response:
                    code: '0000'
                    memo: Approved or completed successfully
                  state: COMPLETION
                  token: my_unload_01
                  transaction_token: '158'
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/GPAUnloadListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List GPA unloads
      tags:
        - GPA Orders
    post:
      description: |-
        Use this endpoint to unload a GPA order.

        Unloading a GPA order returns funds to the funding source.
        A GPA unload must be tied to an original GPA order and can be used to return the amount of the original order or a lesser amount.
      operationId: postGpaordersUnloads
      requestBody:
        content:
          application/json:
            example:
              amount: 500
              original_order_token: my_gpaorder_01
              token: my_unload_01
            schema:
              $ref: '#/components/schemas/unload_request_model'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                amount: 500
                created_time: 2022-11-30T23:14:50Z
                funding:
                  amount: 500
                  source:
                    active: true
                    created_time: 2022-03-31T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2022-03-31T19:13:23Z
                    name: my_program_funding_source_01
                    token: '**********e_01'
                    type: program
                funding_source_token: '**********e_01'
                last_modified_time: 2022-11-30T23:30:50Z
                original_order_token: my_gpaorder_01
                response:
                  code: '0000'
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_unload_01
                transaction_token: '158'
              schema:
                $ref: '#/components/schemas/gpa_returns'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: GPA order token not found
        '412':
          content: {
            }
          description: Pre-condition failed. Unload amount is greater than load amount
        '500':
          content: {
            }
          description: Server error
      summary: Create GPA unload
      tags:
        - GPA Orders
  /gpaorders/unloads/{unload_token}:
    get:
      description: Use this endpoint to retrieve a specific GPA unload.
      operationId: getGpaordersUnloadsUnloadtoken
      parameters:
        - description: Unique identifier of the GPA unload.
          explode: false
          in: path
          name: unload_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 500
                created_time: 2022-11-30T23:14:50Z
                funding:
                  amount: 500
                  source:
                    active: true
                    created_time: 2022-03-31T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2022-03-31T19:13:23Z
                    name: my_program_funding_source_01
                    token: '**********e_01'
                    type: program
                funding_source_token: '**********e_01'
                last_modified_time: 2022-11-30T23:15:50Z
                original_order_token: my_gpaorder_01
                response:
                  code: '0000'
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_unload_01
                transaction_token: '158'
              schema:
                $ref: '#/components/schemas/gpa_returns'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Return not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve GPA unload
      tags:
        - GPA Orders
  /gpaorders/{token}:
    get:
      description: Use this endpoint to retrieve a GPA order.
      operationId: getGpaordersToken
      parameters:
        - description: |-
            Unique identifier of the GPA order.

            Send a `GET` request to `/transactions?type=gpa.credit` to retrieve GPA order tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 1000
                created_time: 2022-11-30T23:00:15Z
                currency_code: USD
                funding:
                  amount: 1000
                  source:
                    active: true
                    created_time: 2022-03-31T19:13:23Z
                    is_default_account: false
                    last_modified_time: 2022-03-31T19:13:23Z
                    name: my_program_funding_source_01
                    token: '**********e_01'
                    type: program
                funding_source_token: '**********e_01'
                last_modified_time: 2022-11-30T23:10:15Z
                response:
                  code: '0000'
                  memo: Approved or completed successfully
                state: COMPLETION
                token: my_gpaorder_01
                transaction_token: 156
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/gpa_response'
          description: Success
        '404':
          content: {
            }
          description: GPA order token not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve GPA order
      tags:
        - GPA Orders
  /kyc:
    post:
      description: |-
        Use this endpoint to verify the identity of an account holder in the United States, either a user or a business.
        You can perform KYC verification on an account holder, provided the following are true:

        * The KYC status of the account holder is `UNVERIFIED` or `LIMITED`
        * The account holder has not been submitted for KYC verification twice

        === Required fields

        In order to perform KYC verification, the `user` or `business` resource on which you perform the check must have the following fields configured with valid values:

        [cols="1a,1a"]
        |===
        | User Fields Required for KYC | Business Fields Required for KYC

        |
        * `first_name`
        * `last_name`
        * `address1` (cannot be a PO Box)
        * `city`
        * `state`
        * `postal_code`
        * `country`
        * `birth_date`
        * `ssn` (nine digits, no delimiters)

        |
        * `business_name_legal` (128 char max)
        * `business_name_dba` ("Doing Business As" or fictitious business name; enter the legal business name in this field if your business does not use a fictitious business name)
        * `office_location` (cannot be a PO Box; `state` field must use a <<valid_state_provincial_and_territorial_abbreviations, valid two-letter state, provincial, or territorial abbreviation>>)
        * `identifications` (nine digits, no delimiters)
        * `incorporation.incorporation_type`
        * `incorporation.state_of_incorporation`
        * `date_established`
        * `proprietor_or_officer`
        * `beneficial_owner` (maximum of four beneficial owners)
        * `proprietor_is_beneficial_owner` (required if the business proprietor or officer is also a beneficial owner)
        * `attestation_consent`
        * `attester_name`
        * `attestation_date`
        |===

        ==== Valid state, provincial, and territorial abbreviations
        The following list includes all valid two-letter abbreviations for US states, territories, and military (APO/FPO/DPO) addresses.
        It also includes abbreviations for Canadian provinces and territories.
        State, provincial, and territorial abbreviations are case sensitive, and must be in uppercase as they appear in this list:

        * `AL`: Alabama
        * `AK`: Alaska
        * `AB`: Alberta
        * `AS`: American Samoa
        * `AZ`: Arizona
        * `AR`: Arkansas
        * `AE`: Armed Forces
        * `AA`: Armed Forces Americas
        * `AP`: Armed Forces Pacific
        * `BC`: British Columbia
        * `CA`: California
        * `CO`: Colorado
        * `CT`: Connecticut
        * `DE`: Delaware
        * `DC`: District of Columbia
        * `FL`: Florida
        * `GA`: Georgia
        * `GU`: Guam
        * `HI`: Hawaii
        * `ID`: Idaho
        * `IL`: Illinois
        * `IN`: Indiana
        * `IA`: Iowa
        * `KS`: Kansas
        * `KY`: Kentucky
        * `LA`: Louisiana
        * `ME`: Maine
        * `MB`: Manitoba
        * `MD`: Maryland
        * `MA`: Massachusetts
        * `MI`: Michigan
        * `MN`: Minnesota
        * `MS`: Mississippi
        * `MO`: Missouri
        * `MT`: Montana
        * `NE`: Nebraska
        * `NV`: Nevada
        * `NB`: New Brunswick
        * `NH`: New Hampshire
        * `NJ`: New Jersey
        * `NM`: New Mexico
        * `NY`: New York
        * `NF`: Newfoundland
        * `NC`: North Carolina
        * `ND`: North Dakota
        * `NT`: Northwest Territories
        * `NS`: Nova Scotia
        * `NU`: Nunavut
        * `OH`: Ohio
        * `OK`: Oklahoma
        * `ON`: Ontario
        * `OR`: Oregon
        * `PA`: Pennsylvania
        * `PE`: Prince Edward Island
        * `PR`: Puerto Rico
        * `QC`: Quebec
        * `RI`: Rhode Island
        * `SK`: Saskatchewan
        * `SC`: South Carolina
        * `SD`: South Dakota
        * `TN`: Tennessee
        * `TX`: Texas
        * `UT`: Utah
        * `VT`: Vermont
        * `VI`: Virgin Islands
        * `VA`: Virginia
        * `WA`: Washington
        * `WV`: West Virginia
        * `WI`: Wisconsin
        * `WY`: Wyoming
        * `YT`: Yukon Territory
      operationId: postKyc
      requestBody:
        content:
          application/json:
            examples:
              business_request_example:
                summary: '*Sample request body for a business*'
                value:
                  business_token: my_biz01
                  token: my_bizkyc01
              user_request_example:
                summary: '*Sample request body for a user*'
                value:
                  manual_override: false
                  token: my_userkyc01
                  user_token: my_user01
            schema:
              $ref: '#/components/schemas/kyc_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              examples:
                business_response_example:
                  summary: '*Sample response body for a business*'
                  value:
                    business_token: my_biz01
                    created_time: 2022-02-08T19:52:58Z
                    last_modified_time: 2022-02-08T19:52:58Z
                    results:
                      - component: BUSINESS
                        outcome: SUCCESS
                        outcome_reasons: [
                          ]
                        reference_id: xxxxx
                      - component: PROPRIETOR
                        outcome: PENDING
                        outcome_reasons:
                          - SSNIssue
                          - DOBIssue
                        reference_id: yyyyy
                      - component: BENEFICIAL_OWNER1
                        outcome: PENDING
                        outcome_reasons:
                          - AddressIssue
                        reference_id: aaaaa
                      - component: BENEFICIAL_OWNER2
                        outcome: SUCCESS
                        outcome_reasons: [
                          ]
                        reference_id: bbbbb
                      - component: BENEFICIAL_OWNER3
                        outcome: SUCCESS
                        outcome_reasons: [
                          ]
                        reference_id: ccccc
                      - component: BENEFICIAL_OWNER4
                        outcome: SUCCESS
                        outcome_reasons: [
                          ]
                        reference_id: ddddd
                    status: PENDING
                    token: my_bizkyc01
                user_response_example:
                  summary: '*Sample response body for a user*'
                  value:
                    created_time: 2022-02-08T19:52:58Z
                    last_modified_time: 2022-02-08T19:52:58Z
                    manual_override: false
                    result:
                      codes:
                        - code: AddressIssue
                          message: 'failed check: AddressIssue'
                      status: failure
                    token: my_userkyc01
                    user_token: my_user01
              schema:
                $ref: '#/components/schemas/kyc_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Perform KYC verification
      tags:
        - KYC Verification
  /kyc/business/{business_token}:
    get:
      description: |-
        Use this endpoint to retrieve all KYC verification results for a business.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.

        === Business KYC outcome reasons (business response)

        The following tables describe KYC outcome reasons potentially returned in the `outcome_reasons` field of the business `result` response object when a business is in a `PENDING` or `FAILURE` state.
        Where possible, they also describe acceptable documents that your customers can submit to resolve `PENDING` outcomes.

        ==== Outcome reasons for the business

        These outcome reasons pertain to the business organization itself.

        [cols=",,2a"]
        |===
        | Outcome Reason and State | Description | Accepted Documents

        | AddressIssue   +
        `PENDING`
        | Missing, invalid, mismatched, or PO Box address.
        | One of the following documents.
        Document must show the full business name and address:

        * Bank statement
        * Utility bill
        * Current lease or rental agreement
        * Insurance policy

        | BusinessNameIssue   +
        `PENDING`
        | Invalid or mismatched name.
        | Articles or certificate of incorporation.

        | OFACIssue   +
        `FAILURE`
        | Business appears on an OFAC list.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | RegistrationIssue   +
        `PENDING`
        | Business is inactive, not registered, or not in good standing with the Secretary of State; recently reported or not recently updated.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | Sanctions List Non-OFAC   +
        `PENDING`
        | Business appears on a non-OFAC screening list, bankruptcy, or alert list.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | TINIssue   +
        `PENDING`
        | Missing, invalid, or mismatched Tax Identification Number (TIN).
        | IRS Notice Letter 147C or CP575, or most recent tax return.

        |===

        ===== Outcome reasons for individuals associated with a business

        These outcome reasons pertain to individuals associated with a business: proprietors, business officers, and beneficial owners.

        [cols=",,2a"]
        |===
        | Outcome Reason and State | Description | Accepted Documents

        | AddressIssue   +
        `FAILURE`
        | Missing, invalid, mismatched, or PO Box address.
        | One of the following documents.
        Document must show the full name and address:

        * Unexpired state-issued driver's license or identification card
        * US Military Identification Card
        * Utility bill
        * Bank statement
        * Current rental or lease agreement
        * Mortgage statement

        | DateofBirthIssue   +
        `FAILURE`
        | Invalid or mismatched date of birth.
        | Unexpired government-issued photo identification that shows name and date of birth:

        * Driver's license or state-issued identification card
        * Passport

        | NameIssue   +
        `FAILURE`
        | Invalid or mismatched name.
        | Unexpired government-issued photo identification that has name and date of birth:

        * Driver's license or state-issued identification card
        * Passport or US passport card

        | NoRecordFound   +
        `FAILURE`
        | No records were found for this individual.
        | As no record was found for this individual, supporting documentation must be provided for each attribute (name, date of birth, address, and SSN):

        * To verify an individual's address, provide one of these documents:
        ** Unexpired state-issued driver's license or identification card
        ** US Military Identification Card
        ** Utility bill
        ** Bank statement
        ** Current rental or lease agreement
        ** Mortgage statement
        * To verify an individual's name and date of birth, provide one of these documents:
        ** Driver's license or state-issued identification card
        ** Passport
        * To verify an individual's Social Security Number, provide one of these documents:
        ** Social Security card
        ** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.
        ** ITIN card or document showing ITIN approval

        | OFAC   +
        `FAILURE`
        | Appears on an Office of Foreign Assets Control (OFAC) list.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | RiskIssue   +
        `FAILURE`
        | Appears on a non-OFAC screening list, bankruptcy, or alert list, or has an insufficient record.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | SSNFail   +
        `FAILURE`
        | Social Security Number (SSN) appears on Network Alert List, is of a deceased person, or was issued before the individual's date of birth.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | SSNIssue   +
        `FAILURE`
        | Missing, invalid, or mismatched SSN.
        | * Social Security card
        * Recent W-2 or 1099 showing nine-digit SSN, full name, and address.
        * ITIN card or document showing ITIN approval
        |===
      operationId: getKycBusinessBusinesstoken
      parameters:
        - description: The unique identifier of the `business` resource for which
            you want to retrieve KYC verification results.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - business_token: my-business-token
                    created_time: 2021-09-25T05:35:02Z
                    last_modified_time: 2021-09-25T05:35:02Z
                    manual_override: false
                    result:
                      status: pending
                    token: 164dc008-1503-4932-a42d-27739346710f
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/KYCListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List KYC results for a business
      tags:
        - KYC Verification
  /kyc/user/{user_token}:
    get:
      description: |-
        Use this endpoint to retrieve all KYC results for a user.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.

        === User KYC failure codes

        The following table lists KYC failure codes potentially returned in the response when a user does not pass verification.
        It also includes a list of acceptable documents that your customers can submit to resolve failures.

        [cols=",,2a"]
        |===
        | Failure Code and State | Description | Accepted Documents

        | AddressIssue   +
        `FAILURE`
        | Missing, invalid, mismatched, or PO Box address.
        | One of the following documents.
        Document must show the full name and address:

        * Unexpired state-issued driver's license or identification card
        * US Military Identification Card
        * Utility bill
        * Bank statement
        * Current rental or lease agreement
        * Mortgage statement

        | DateofBirthIssue   +
        `FAILURE`
        | Invalid or mismatched date of birth.
        | Unexpired government-issued photo identification that shows name and date of birth:

        * Driver's license or state-issued identification card
        * Passport

        | NameIssue   +
        `FAILURE`
        | Invalid or mismatched name.
        | Unexpired government-issued photo identification that has name and date of birth:

        * Driver's license or state-issued identification card
        * Passport or US passport card

        | NoRecordFound   +
        `FAILURE`
        | No records were found for this individual.
        | As no record was found for this individual, supporting documentation must be provided for each attribute (name, date of birth, address, and SSN):

        * To verify an individual's address, provide one of these documents:
        ** Unexpired state-issued driver's license or identification card
        ** US Military Identification Card
        ** Utility bill
        ** Bank statement
        ** Current rental or lease agreement
        ** Mortgage statement
        * To verify an individual's name and date of birth, provide one of these documents:
        ** Driver's license or state-issued identification card
        ** Passport
        * To verify an individual's Social Security Number, provide one of these documents:
        ** Social Security card
        ** Recent W-2 or 1099 showing nine-digit SSN, full name, and address.
        ** ITIN card or document showing ITIN approval

        | OFAC   +
        `FAILURE`
        | Appears on an Office of Foreign Assets Control (OFAC) list.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | RiskIssue   +
        `FAILURE`
        | Appears on a non-OFAC screening list, bankruptcy, or alert list, or has an insufficient record.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | SSNFail   +
        `FAILURE`
        | Social Security Number (SSN) appears on Network Alert List, is of a deceased person, or was issued before the individual's date of birth.
        | This outcome requires a manual review by Marqeta to determine the next appropriate step.
        Contact your Marqeta representative.

        | SSNIssue   +
        `FAILURE`
        | Missing, invalid, or mismatched SSN.
        | * Social Security card
        * Recent W-2 or 1099 showing nine-digit SSN, full name, and address.
        * ITIN card or document showing ITIN approval
        |===
      operationId: getKycUserUsertoken
      parameters:
        - description: Unique identifier of the `user` resource for which you want
            to retrieve KYC verification results.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - created_time: 2022-03-07T23:17:36Z
                    last_modified_time: 2022-03-07T23:17:36Z
                    manual_override: false
                    result:
                      status: success
                    token: my_user_01_kyc_02
                    user_token: my_user_01
                  - created_time: 2022-03-08T18:00:00Z
                    last_modified_time: 2022-03-08T18:00:00Z
                    manual_override: false
                    result:
                      status: failure
                    token: my_user_01_kyc_01
                    user_token: my_user_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/KYCListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List KYC results for a user
      tags:
        - KYC Verification
  /kyc/{token}:
    get:
      description: Use this endpoint to retrieve a specific KYC result.
      operationId: getKycToken
      parameters:
        - description: Unique identifier of the KYC verification for which you want
            to retrieve the result.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2022-03-07T22:52:39Z
                last_modified_time: 2022-03-07T22:52:39Z
                manual_override: false
                result:
                  status: success
                token: my_user_01_kyc_01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/kyc_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: KYC not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve KYC result
      tags:
        - KYC Verification
  /mccgroups:
    get:
      description: |-
        Use this endpoint to list all MCC groups defined in your program or list MCC groups that contain a specified code.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getMccgroups
      parameters:
        - description: Returns all MCC groups that contain the specified merchant
            category code.
          explode: true
          in: query
          name: mcc
          required: false
          schema:
            type: string
          style: form
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCCGroupListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List MCC groups
      tags:
        - MCC Groups
    post:
      description: Use this endpoint to create an MCC group.
      operationId: postMccgroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mcc_group_model'
        description: MCC group
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_model'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create MCC group
      tags:
        - MCC Groups
  /mccgroups/{token}:
    get:
      description: Use this endpoint to retrieve a specific MCC group.
      operationId: getMccgroupsToken
      parameters:
        - description: Unique identifier of the MCC group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: MCC group not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve MCC group
      tags:
        - MCC Groups
    put:
      description: |-
        Use this endpoint to update an MCC group.
        Include the `token` path parameter to identify the MCC group to update.
        You must pass all the merchant category codes you want included in the group, including existing ones you want to retain.
      operationId: putMccgroupsToken
      parameters:
        - description: |-
            The unique identifier of the MCC group.
            Send a `GET` request to `/mccgroups` to retrieve MCC group tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mcc_group_update_model'
        description: MCC group
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mcc_group_update_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update MCC group
      tags:
        - MCC Groups
  /merchantgroups:
    get:
      description: |-
        To return an array of all merchant groups, send a `GET` request to the `/merchantgroups` endpoint.

        To return an array of all merchant groups that include a specific merchant identifier, send a `GET` request to the `/merchantgroups` endpoint that includes the merchant identifier in the query parameters.
      operationId: getMerchantGroups
      parameters:
        - description: Returns all merchant groups that contain the specified merchant
            identifier.
          explode: true
          in: query
          name: mid
          required: false
          schema:
            type: string
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    created_time: 2022-05-01T13:22:07Z
                    last_modified_time: 2022-05-01T13:32:07Z
                    mids:
                      - '123456789012345'
                      - '345123456789012'
                      - '123456789012'
                    name: My Merchant Group
                    token: my_merchantgroup
                  - active: true
                    created_time: 2021-05-02T01:42:07Z
                    last_modified_time: 2022-05-02T01:42:07Z
                    mids:
                      - '998877665544331'
                      - '246813579000'
                    name: My Merchant Group 01
                    token: my_merchantgroup_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/MerchantGroupListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List merchant groups
      tags:
        - Merchant Groups
    post:
      description: To create a merchant group, send a `POST` request to the `/merchantgroups`
        endpoint.
      operationId: postMerchantGroup
      requestBody:
        content:
          application/json:
            example:
              active: true
              mids:
                - '123456789012345'
                - '345123456789012'
                - '123456789012'
              name: My Merchant Group
              token: my_merchantgroup
            schema:
              $ref: '#/components/schemas/merchant_group_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                created_time: 2022-05-01T13:22:07Z
                last_modified_time: 2022-05-01T13:22:07Z
                mids:
                  - '123456789012345'
                  - '345123456789012'
                  - '123456789012'
                name: My Merchant Group
                token: my_merchantgroup
              schema:
                $ref: '#/components/schemas/merchant_group_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create merchant group
      tags:
        - Merchant Groups
  /merchantgroups/{token}:
    get:
      description: |-
        To retrieve a specific merchant group, send a `GET` request to the `/merchantgroups/{token}` endpoint.
        Include the merchant group `token` path parameter to specify the merchant group to return.
      operationId: getMerchantGroup
      parameters:
        - description: Unique identifier of the merchant group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                created_time: 2022-05-01T13:22:07Z
                last_modified_time: 2022-05-01T13:32:07Z
                mids:
                  - '123456789012345'
                  - '345123456789012'
                  - '123456789012'
                  - '234567890123'
                name: My Merchant Group
                token: my_merchantgroup
              schema:
                $ref: '#/components/schemas/merchant_group_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Merchant Group not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve merchant group
      tags:
        - Merchant Groups
    put:
      description: |-
        To update a merchant group, send a `PUT` request to the `/merchantgroups/{token}` endpoint.
        Include the merchant group `token` path parameter to specify the merchant group to update.
      operationId: putMerchantGroupsToken
      parameters:
        - description: Unique identifier of the merchant group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: true
              mids:
                - '234567890123'
              name: My Merchant Group
            schema:
              $ref: '#/components/schemas/merchant_group_update_request'
        description: Merchant Group
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                created_time: 2022-05-01T13:22:07Z
                last_modified_time: 2022-05-01T13:32:07Z
                mids:
                  - '123456789012345'
                  - '345123456789012'
                  - '123456789012'
                  - '234567890123'
                name: My Merchant Group
                token: my_merchantgroup
              schema:
                $ref: '#/components/schemas/merchant_group_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update merchant group
      tags:
        - Merchant Groups
  /peertransfers:
    post:
      description: |-
        Use this endpoint to request a peer transfer (i.e., a movement of funds from the GPA of an account holder to another account belonging to the same account holder).
        Add the source details to the body of the request in link:http://www.json.org/[JSON, window="_blank"] format.

        When creating a peer transfer request, you must pass in both a token to identify the fee sender (either `sender_user_token` or `sender_business_token`) and a token to identify the fee recipient (either `recipient_user_token` or `recipient_business_token`).
        The sender and recipient objects must already exist.

        [NOTE]
        This feature is disabled by default and requires activation by Marqeta.   +
          +
        This feature enables you to transfer or reallocate funds where the `sender_*\_token` and the `recipient_*\_token` belong to the same account holder.
        It does not allow you to transfer or reallocate funds between different account holders.
        Contact your Marqeta representative for more information.
      operationId: postPeertransfers
      requestBody:
        content:
          application/json:
            example:
              amount: 50.0
              currency_code: USD
              recipient_user_token: my_user_01_account_2
              sender_user_token: my_user_01
              token: my_peertransfer_01
            schema:
              $ref: '#/components/schemas/peer_transfer_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                amount: 50.0
                created_time: 2021-05-11T19:15:01Z
                currency_code: USD
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                token: my_peertransfer_01
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
          description: Success
        '400':
          content: {
            }
          description: 'Invalid fields detected: either sender or recipient is not
            found'
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '422':
          content: {
            }
          description: Rule violations
        '500':
          content: {
            }
          description: Server error
      summary: Performs a peer transfer between two accounts held by the same account
        holder
      tags:
        - Peer Transfers
  /peertransfers/user/{user_or_business_token}:
    get:
      description: |-
        Use this endpoint to list peer transfers sent or received by a particular account holder.
        Include a user or business token as a path parameter to identify the account holder whose transfers you want to list.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getPeertransfersUserUserorbusinesstoken
      parameters:
        - description: |-
            Existing user or business token.

            Send a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens.
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of peer transfer resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 25
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 40.0
                count: 1
                created_time: 2021-05-11T20:41:27Z
                currency_code: USD
                data[]: null
                end_index: 2
                is_more: false
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                start_index: 0
                token: my_peertransfer_01
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Returns all peer transfers for a user
      tags:
        - Peer Transfers
  /peertransfers/user/{user_or_business_token}/recipient:
    get:
      description: |-
        Use this endpoint to list peer transfers sent by an account holder.
        Include a user or business token as a path parameter to identify the recipient.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getPeertransfersUserUserorbusinesstokenRecipient
      parameters:
        - description: |-
            Existing user or business token.

            Send a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens.
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of peer transfer resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 25
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 40.0
                count: 3,
                created_time: 2021-05-11T20:41:27Z
                currency_code: USD
                data[]: null
                end_index: 2
                is_more: false
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                start_index: 0
                token: my_peertransfer_01
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
          description: Success
        '404':
          content: {
            }
          description: User token not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns received peer transfers for a user
      tags:
        - Peer Transfers
  /peertransfers/user/{user_or_business_token}/sender:
    get:
      description: |-
        Use this endpoint to list peer transfers sent by an account holder.
        Include a user or business token as a path parameter to identify the sender.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getPeertransfersUserUserorbusinesstokenSender
      parameters:
        - description: |-
            Existing user or business token.

            Send a `GET` request to `/users` to retrieve user tokens or to `/businesses` to retrieve business tokens.
          explode: false
          in: path
          name: user_or_business_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of peer transfer resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 25
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 40.0
                count: 3,
                created_time: 2021-05-11T20:41:27Z
                currency_code: USD
                data[]: null
                end_index: 2
                is_more: false
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                start_index: 0
                token: my_peertransfer_01
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Returns sent peer transfers for a user
      tags:
        - Peer Transfers
  /peertransfers/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a peer transfer request.
        Include the peer transfer `token` as a path parameter in the URL to identify the peer transfer to return.
      operationId: getPeertransfersToken
      parameters:
        - description: The unique identifier of the peer transfer.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 50.0
                created_time: 2021-05-11T19:15:01Z
                currency_code: USD
                recipient_user_token: my_user_01_account_2
                sender_user_token: my_user_01
                token: my_peertransfer_01
              schema:
                $ref: '#/components/schemas/peer_transfer_response'
          description: Success
        '404':
          content: {
            }
          description: Transfer token not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns details of a previous transfer
      tags:
        - Peer Transfers
  /ping:
    get:
      description: Tests if the Marqeta server is available and responsive.
      operationId: getPing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ping_response'
          description: Success
        '500':
          content: {
            }
          description: Server error
      summary: Returns a heartbeat to the consumer
      tags:
        - ping
    post:
      operationId: postPing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/echo_ping_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo_ping_response'
          description: Success
        '500':
          content: {
            }
          description: Server error
      summary: Echo test for sending payload to server
      tags:
        - ping
  /pins:
    put:
      description: |-
        Creates or updates a personal identification number (PIN) for an existing card.

        If you want to manage a card's PIN, first create a new control token for the card by sending a `POST` request to `/pins/controltoken`, and then use that token to update the PIN.
        You must create a card before you can manage a PIN.

        Unless PIN reveal functionality has been enabled for your program, you cannot retrieve a PIN that has previously been created.
        If the PIN has been forgotten, you must either update the card's PIN or create a new card and PIN.

        If you have enabled PIN reveal functionality for your program, you can send a `POST` request to the `/pins/reveal` endpoint to retrieve an existing PIN.
        See <</core-api/pins#revealPins, Reveal PIN>> on this page for details.

        [WARNING]
        Sending a request to this endpoint requires PCI DSS compliance.
        You must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.
      operationId: putPins
      requestBody:
        content:
          application/json:
            example:
              control_token: b4647c9a-d4b8-4091-a5ff-dd67a7bb9ffc
              pin: '5678'
            schema:
              $ref: '#/components/schemas/pin_request'
        required: false
      responses:
        '204':
          content: {
            }
          description: PIN was successfully set
        '400':
          content: {
            }
          description: Bad request
        '412':
          content: {
            }
          description: Weak PIN
        '500':
          content: {
            }
          description: Server error
      summary: Create or update PIN
      tags:
        - PINs
  /pins/controltoken:
    post:
      description: |-
        Creates a control token necessary when creating or updating a card's personal identification number (PIN).

        Creating, updating, or revealing a card's PIN is a two-step process.
        You must first create the control token that is required to create the PIN, and then you create, update, or reveal the PIN itself.

        The lifespan of the control token in a production environment is either five minutes or one hour from creation, depending on the token type.
        If multiple tokens are requested for a single card, only the most recent one is valid.
        Once redeemed, a token cannot be reused.
      operationId: postPinsControltoken
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_01
              controltoken_type: SHOW_PIN
            schema:
              $ref: '#/components/schemas/control_token_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                control_token: b4647c9a-d4b8-4091-a5ff-dd67a7bb9ffc
              schema:
                $ref: '#/components/schemas/control_token_response'
          description: Control token created
        '400':
          content: {
            }
          description: Bad request
        '403':
          content: {
            }
          description: Forbidden
        '500':
          content: {
            }
          description: Server error
      summary: Create PIN control token
      tags:
        - PINs
  /pins/reveal:
    post:
      description: |-
        Reveals the personal identification number (PIN) of an existing, active card.

        *WARNING:* Only use this endpoint to access a PIN in order to reveal it to its cardholder.
        Do not use this endpoint for the purpose of storing a PIN at any location.

        Sending a request to this endpoint requires PCI DSS compliance.
        You must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.

        If you want instead to update a card's PIN, send a `PUT` request to the `/pins` endpoint.
        See <</core-api/pins#putPins, Create or Update PIN>> on this page for details.

        Revealing a card's PIN is a two-step process.
        You must first create a new control token for the card by sending a `POST` request to `/pins/controltoken`, and then use that token to reveal the PIN.
      operationId: revealPins
      requestBody:
        content:
          application/json:
            example:
              cardholder_verification_method: BIOMETRIC_FINGERPRINT
              control_token: b4647c9a-d4b8-4091-a5ff-dd67a7bb9ffc
            schema:
              $ref: '#/components/schemas/pin_reveal_request'
        required: false
      responses:
        '204':
          content: {
            }
          description: PIN was successfully revealed
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Reveal PIN
      tags:
        - PINs
  /programreserve/balances:
    get:
      description: Use this endpoint to return balances for your program reserve account.
      operationId: getProgramreserveBalances
      responses:
        '200':
          content:
            application/json:
              example:
                available_balance: 10100.0
                balances:
                  USD:
                    available_balance: 10100.0
                    currency_code: USD
                    ledger_balance: 10100.0
                    pending_credits: 0.0
                currency_code: USD
                ledger_balance: 10100.0
                pending_credits: 0.0
              schema:
                $ref: '#/components/schemas/program_reserve_account_balance'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve reserve account balances
      tags:
        - Program Reserve
  /programreserve/transactions:
    get:
      description: |-
        Use this endpoint to return a list of credits and debits made to your program reserve account.

        This endpoint supports <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getProgramreserveTransactions
      parameters:
        - description: The number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - amount: 120.0
                    created_time: 2022-02-10T21:52:18Z
                    currency_code: USD
                    last_modified_time: 2022-02-10T21:52:18Z
                    memo: my_memo
                    tags: my, tags
                    token: my_deposit_02
                    transaction_token: '154'
                    type: CREDIT
                  - amount: 100.0
                    created_time: 2022-02-10T21:51:28Z
                    currency_code: USD
                    last_modified_time: 2022-02-10T21:51:28Z
                    memo: my_memo
                    tags: my, tags
                    token: my_deposit_01
                    transaction_token: '153'
                    type: CREDIT
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/ProgramReserveTransactionListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List program reserve transactions
      tags:
        - Program Reserve
  /programtransfers:
    get:
      description: |-
        Use this endpoint to list all program transfers.

        To narrow your result set to program transfers of a particular type or that are associated with a particular account holder, include the appropriate parameters from the following Query Parameters table.
        This endpoint also supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>.
      operationId: getProgramtransfers
      parameters:
        - description: The number of program transfers to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
        - description: |-
            The unique identifier of the `user` account holder whose program transfers you want to retrieve.

            Send a `GET` request to `/users` to retrieve user tokens.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The unique identifier of the `business` account holder whose program transfers you want to retrieve.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of program transfer type to retrieve.
          explode: true
          in: query
          name: type_token
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data[]:
                  amount: 1.0
                  created_time: 2021-05-11T21:02:45Z
                  currency_code: USD
                  memo: This is my program transfer
                  tags: my, tags
                  token: my_program_transfer_02
                  transaction_token: '170'
                  type_token: my_program_transfer_type_01
                  user_token: my_user_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/ProgramTransferListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List program transfers
      tags:
        - Program Transfers
    post:
      description: |-
        Use this endpoint to create a program transfer.
        Add the program transfer details to the body of the request in link:http://www.json.org/[JSON, window="_blank"] format.

        Include either `user_token` or `business_token` in the message body to specify the account holder whose GPA will be debited by the program transfer.
        The user or business must already exist.

        A program transfer is an all-or-nothing operation.
        If the GPA has insufficient funds to cover both the amount of the program transfer and all attached fees, then no funds are transferred.
      operationId: postProgramtransfers
      requestBody:
        content:
          application/json:
            example:
              amount: 1.0
              currency_code: USD
              memo: This is my program transfer
              tags: my, tags
              token: my_program_transfer_01
              type_token: my_program_transfer_type_01
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/program_transfer'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                amount: 1.0
                created_time: 2021-05-11T20:58:30Z
                currency_code: USD
                memo: This is my program transfer
                tags: my, tags
                token: my_program_transfer_01
                transaction_token: '169'
                type_token: my_program_transfer_type_01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/program_transfer_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Not found
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '412':
          content: {
            }
          description: Pre-condition failed. Unload amount is greater than load amount
        '500':
          content: {
            }
          description: Server error
      summary: Transfers to a program funding source
      tags:
        - Program Transfers
  /programtransfers/types:
    get:
      description: |-
        Use this endpoint to list all program transfer types.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>.
      operationId: getProgramtransfersTypes
      parameters:
        - description: The number of program transfer types to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data[]:
                  created_time: 2021-03-15T19:53:23Z
                  last_modified_time: 2021-03-15T19:53:23Z
                  memo: This is my other program transfer type.
                  program_funding_source_token: pfs_test_01
                  tags: my, tags
                  token: my_program_transfer_type_02
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/ProgramTransferTypeListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List program transfer types
      tags:
        - Program Transfers
    post:
      description: |-
        Use this endpoint to create a program transfer type.
        Add the program transfer details to the body of the request in link:http://www.json.org/[JSON, window="_blank"] format.

        You are required to pass in a `program_funding_source_token` to associate a program funding source with the program transfer type.
        You must therefore create a program funding source before creating a program transfer type.
      operationId: postProgramtransfersTypes
      requestBody:
        content:
          application/json:
            example:
              memo: This is my program transfer type.
              program_funding_source_token: my_pfs_01
              tags: my, tags
              token: my_program_transfer_type_01
            schema:
              $ref: '#/components/schemas/program_transfer_type_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                created_time: 2021-03-15T19:18:50Z
                last_modified_time: 2021-03-15T19:18:50Z
                memo: This is my program transfer type.
                program_funding_source_token: my_pfs_01
                tags: my, tags
                token: my_program_transfer_type_01
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Program funding source not found
        '409':
          content: {
            }
          description: Token already used
        '500':
          content: {
            }
          description: Server error
      summary: Create program transfer type
      tags:
        - Program Transfers
  /programtransfers/types/{type_token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific program transfer.
        Include the `type_token` path parameter to indicate the program transfer type to return.
      operationId: getProgramtransfersTypesTypetoken
      parameters:
        - description: The unique identifier of the program transfer type
          explode: false
          in: path
          name: type_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2021-03-15T19:18:50Z
                last_modified_time: 2021-03-15T19:18:50Z
                memo: This is my program transfer type.
                program_funding_source_token: pfs_test_01
                tags: my, tags
                token: my_program_transfer_type_01
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Program transfer type not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve program transfer type
      tags:
        - Program Transfers
    put:
      description: |-
        Use this endpoint to update a program transfer type.
        Include the `type_token` path parameter to indicate the program transfer type to update.
        Add the modified detail parameters to the body of the request in link:http://www.json.org/[JSON, window="_blank"] format.
        Only values of parameters in the request are modified; all others are left unchanged.
      operationId: putProgramtransfersTypesTypetoken
      parameters:
        - description: The unique identifier of the program transfer type
          explode: false
          in: path
          name: type_token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              memo: Update program funding source.
              program_funding_source_token: pfs_test_02
            schema:
              $ref: '#/components/schemas/program_transfer_type_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                created_time: 2021-03-15T19:53:23Z
                last_modified_time: 2021-03-15T19:58:33Z
                memo: Update program funding source.
                program_funding_source_token: pfs_test_02
                tags: my, tags
                token: my_program_transfer_type_02
              schema:
                $ref: '#/components/schemas/program_transfer_type_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Program transfer type not found
        '500':
          content: {
            }
          description: Server error
      summary: Update program transfer type
      tags:
        - Program Transfers
  /programtransfers/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific program transfer.
        Include the program transfer `token` path parameter to specify the program transfer to retrieve.
      operationId: getProgramtransfersToken
      parameters:
        - description: The unique identifier of the program transfer.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                amount: 1.0
                created_time: 2021-05-11T21:02:45Z
                currency_code: USD
                memo: This is my program transfer
                tags: my, tags
                token: my_program_transfer_02
                transaction_token: '170'
                type_token: my_program_transfer_type_01
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/program_transfer_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Return not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve program transfer
      tags:
        - Program Transfers
  /pushtocards/disburse:
    get:
      operationId: getPushtocardsDisburse
      parameters:
        - description: Number of push-to-card disbursements to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardDisburseListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Lists all push-to-card disbursements
      tags:
        - push to card
    post:
      operationId: postPushtocardsDisburse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_to_card_disburse_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_disbursement_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '422':
          content: {
            }
          description: Payment instrument is not active
        '500':
          content: {
            }
          description: Server error
      summary: Initiates a push-to-card money disbursement
      tags:
        - push to card
  /pushtocards/disburse/{token}:
    get:
      operationId: getPushtocardsDisburseToken
      parameters:
        - description: Push-to-card disbursement token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_disbursement_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Push-to-card disbursement not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns a specific push-to-card disbursement
      tags:
        - push to card
  /pushtocards/paymentcard:
    get:
      operationId: getPushtocardsPaymentcard
      parameters:
        - description: Number of push-to-card payment cards to retrieve
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: User token
          explode: true
          in: query
          name: user_token
          required: true
          schema:
            type: string
          style: form
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Start index
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Sort order
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Returns all push-to-card payment card details
      tags:
        - push to card
    post:
      operationId: postPushtocardsPaymentcard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_to_card_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '422':
          content: {
            }
          description: Push-to-card information is invalid
        '500':
          content: {
            }
          description: Server error
      summary: Adds an external card to which funds will be pushed
      tags:
        - push to card
  /pushtocards/paymentcard/{token}:
    get:
      operationId: getPushtocardsPaymentcardToken
      parameters:
        - description: Push-to-card token
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Comma-delimited list of fields to return (e.g. field_1,field_2,..).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_to_card_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Push-to-card details not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns a specific paymentcard object
      tags:
        - push to card
  /realtimefeegroups:
    get:
      description: |-
        Use this endpoint to list existing real-time fee groups.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getRealtimefeegroups
      parameters:
        - description: Number of real-time fee groups to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).

            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data[]:
                  active: true
                  created_time: 2022-11-28T00:36:11Z
                  fee_tokens[]: my_fee_01 my_fee_05
                  last_modified_time: 2022-11-28T00:36:11Z
                  name: My Real-Time Fee Group 01
                  token: my_rtfg_01
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/RealTimeFeeGroupListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List real-time fee groups
      tags:
        - Real-Time Fee Groups
    post:
      description: Use this endpoint to create a real-time fee group.
      operationId: postRealtimefeegroups
      requestBody:
        content:
          application/json:
            example:
              fee_tokens[]: my_fee_01 my_fee_05
              name: My Real-Time Fee Group 01
              token: my_rtfg_01
            schema:
              $ref: '#/components/schemas/real_time_fee_group_create_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                created_time: 2022-11-28T00:36:11Z
                fee_tokens[]: my_fee_01 my_fee_05
                last_modified_time: 2022-11-28T00:36:11Z
                name: My Real-Time Fee Group 01
                token: my_rtfg_01
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create real-time fee group
      tags:
        - Real-Time Fee Groups
  /realtimefeegroups/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific real-time fee group.
        Include the real-time fee group `token` path parameter to specify the real-time fee group to return.
      operationId: getRealtimefeegroupsToken
      parameters:
        - description: Unique identifier of the real-time fee group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                created_time: 2022-11-28T00:36:11Z
                fee_tokens[]: my_fee_01 my_fee_05
                last_modified_time: 2022-11-28T00:36:11Z
                name: My Real-Time Fee Group 01
                token: my_rtfg_01
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
          description: Success
        '404':
          content: {
            }
          description: Real-time fee group not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve real-time fee group
      tags:
        - Real-Time Fee Groups
    put:
      description: |-
        Use this endpoint to update a real-time fee group.
        Include the real-time fee group `token` path parameter to specify the real-time fee group to update.
      operationId: putRealtimefeegroupsToken
      parameters:
        - description: Unique identifier of the real-time fee group.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: '#/components/schemas/real_time_fee_group_request'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                active: false
                created_time: 2022-11-28T00:36:11Z
                fee_tokens[]: my_fee_01 my_fee_05
                last_modified_time: 2022-11-28T00:45:11Z
                name: My Real-Time Fee Group 01
                token: my_rtfg_01
              schema:
                $ref: '#/components/schemas/real_time_fee_group'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update real-time fee group
      tags:
        - Real-Time Fee Groups
  /simulate/authorization:
    post:
      operationId: postSimulateAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_request_model'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Simulates an authorization
      tags:
        - simulate
  /simulate/authorization/advice:
    post:
      operationId: postSimulateAuthorizationAdvice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization_advice_model'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Original transaction not found
        '500':
          content: {
            }
          description: Server error
      summary: Simulates an authorization advice transaction
      tags:
        - simulate
  /simulate/clearing:
    post:
      operationId: postSimulateClearing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearingModel'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Original transaction not found
        '500':
          content: {
            }
          description: Server error
      summary: Simulates a clearing/settlement transaction
      tags:
        - simulate
  /simulate/directdeposits:
    post:
      operationId: postSimulateDirectdeposits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectDepositRequest'
        description: Direct deposit simulate request model
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDepositResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Simulates the creation of direct deposit
      tags:
        - simulate
  /simulate/financial:
    post:
      operationId: postSimulateFinancial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/financial_request_model'
        description: Financial request model
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Simulates a financial request (PIN debit) transaction with optional
        cash back
      tags:
        - simulate
  /simulate/financial/advice:
    post:
      operationId: postSimulateFinancialAdvice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization_advice_model'
        description: Financial advice request model
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Original transaction not found
        '500':
          content: {
            }
          description: Server error
      summary: Simulates a financial advice transaction
      tags:
        - simulate
  /simulate/financial/balanceinquiry:
    post:
      operationId: postSimulateFinancialBalanceinquiry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/balance_inquiry_request_model'
        description: Balance inquiry request model
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Simulates a balance inquiry
      tags:
        - simulate
  /simulate/financial/originalcredit:
    post:
      operationId: postSimulateFinancialOriginalcredit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orignalcredit_request_model'
        description: Orignal Credit request model
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Simulates an orignal credit transaction
      tags:
        - simulate
  /simulate/financial/withdrawal:
    post:
      operationId: postSimulateFinancialWithdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/withdrawal_request_model'
        description: ATM withdrawal request model
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Simulates an ATM withdrawal transaction
      tags:
        - simulate
  /simulate/reversal:
    post:
      operationId: postSimulateReversal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversalModel'
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulation_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Original transaction not found
        '500':
          content: {
            }
          description: Server error
      summary: Simulates a reversal transaction
      tags:
        - simulate
  /transactions:
    get:
      description: |-
        List all transactions.

        By default, this endpoint returns transactions conducted within the last 30 days.
        To return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.

        By default, `GET /transactions` returns transactions having either `PENDING` or `COMPLETION` states.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactions
      parameters:
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -user_transaction_time
            enum:
              - -created_time
              - created_time
              - -user_transaction_time
              - user_transaction_time
            type: string
          style: form
        - description: |-
            The starting date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The ending date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the `user` account holder.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the `business` account holder.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the acting user.
          explode: true
          in: query
          name: acting_user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the card.
          explode: true
          in: query
          name: card_token
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            default: PENDING,COMPLETION
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - acquirer:
                      institution_country: '840'
                      institution_id_code: '428399181'
                      retrieval_reference_number: '528294182583'
                      system_trace_audit_number: '656761'
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    card:
                      metadata: null
                    card_security_code_verification:
                      response:
                        code: '0000'
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 537
                    fraud:
                      network:
                        account_risk_score: '7'
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0.0
                      balances:
                        USD:
                          available_balance: 0.0
                          credit_balance: 0.0
                          currency_code: USD
                          impacted_amount: 10.0
                          ledger_balance: 20.0
                          pending_credits: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: 10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                    gpa_order:
                      amount: 10.0
                      created_time: 2021-08-21T17:26:30Z
                      currency_code: USD
                      funding:
                        amount: 10.0
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: '1200'
                          response:
                            code: '200'
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: '94601'
                                      street_address: 2000 High St
                                    response:
                                      code: '0000'
                                      memo: Address and postal code match
                                amount: 10.0
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: '**********dd5f'
                          type: programgateway
                      funding_source_token: '**********dd5f'
                      jit_funding:
                        acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        amount: 10.0
                        method: pgfs.authorization
                        token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: '0000'
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                      user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: MARQETA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: 'TRUE'
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                    preceding_related_transaction_token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    response:
                      code: '0000'
                      memo: Approved or completed successfully
                    state: PENDING
                    subnetwork: GATEWAY_JIT
                    token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    transaction_metadata:
                      payment_channel: OTHER
                    type: gpa.credit.authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                  - acquirer:
                      institution_country: '840'
                      institution_id_code: '428399181'
                      retrieval_reference_number: '528294182583'
                      system_trace_audit_number: '656761'
                    acquirer_fee_amount: 0.0
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    approval_code: '761515'
                    card:
                      metadata: null
                    card_acceptor:
                      city: Berkeley
                      country_code: USA
                      mcc: '6411'
                      mid: '000000000011111'
                      name: Aegis Fleet Services
                      street_address: 111 Main St
                    card_security_code_verification:
                      response:
                        code: '0000'
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 622
                    fraud:
                      network:
                        account_risk_score: '7'
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0.0
                      balances:
                        USD:
                          available_balance: 0.0
                          credit_balance: 0.0
                          currency_code: USD
                          impacted_amount: -10.0
                          ledger_balance: 20.0
                          pending_credits: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: -10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                    gpa_order:
                      amount: 10.0
                      created_time: 2021-08-21T17:26:30Z
                      funding:
                        amount: 10.0
                        currency_code: USD
                        funding_source_token: '**********dd5f'
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: '1200'
                          response:
                            code: '200'
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: '94601'
                                      street_address: 2000 High St
                                    response:
                                      code: '0000'
                                      memo: Address and postal code match
                                amount: 10.0
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        jit_funding:
                          acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                          amount: 10.0
                          method: pgfs.authorization
                          token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                          user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: '**********dd5f'
                          type: programgateway
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: '0000'
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: VISA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: 'TRUE'
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                      terminal_id: TR100000
                    request_amount: 10.0
                    response:
                      code: '0000'
                      memo: Approved or completed successfully
                    settlement_date: 2021-08-21T00:00:00Z
                    state: PENDING
                    subnetwork: VISANET
                    token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    transaction_metadata:
                      payment_channel: OTHER
                    type: authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                end_index: 1
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List transactions
      tags:
        - Transactions
  /transactions/fundingsource/{funding_source_token}:
    get:
      description: |-
        List transactions for a specific funding source.

        By default, this endpoint returns transactions conducted within the last 30 days.
        To return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.

        By default, `GET /transactions/fundingsource/{funding_source_token}` returns transactions having either `PENDING` or `COMPLETION` states.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactionsFundingsourceFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding account.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -user_transaction_time
            enum:
              - -created_time
              - created_time
              - -user_transaction_time
              - user_transaction_time
            type: string
          style: form
        - description: |-
            The starting date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The ending date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: Specifies whether to return credit or debit transactions.
          explode: true
          in: query
          name: polarity
          required: false
          schema:
            enum:
              - CREDIT
              - DEBIT
              - PENDING_CREDIT
              - PENDING_DEBIT
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List transactions for a funding account
      tags:
        - Transactions
  /transactions/{token}:
    get:
      description: |-
        Retrieve a specific transaction.
        Include the `token` path parameter to identify the transaction.

        [NOTE]
        Transactions are not available in real time via this endpoint, and typically appear after 30 seconds.
        On occasion, a transaction may require up to four hours to appear.
      operationId: getTransactionsToken
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                acquirer:
                  institution_country: '840'
                  institution_id_code: '428399181'
                  retrieval_reference_number: '528294182583'
                  system_trace_audit_number: '656761'
                acquirer_fee_amount: 0.0
                acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                amount: 10.0
                approval_code: '761515'
                card:
                  metadata: null
                card_acceptor:
                  city: Berkeley
                  country_code: USA
                  mcc: '6411'
                  mid: '000000000011111'
                  name: Aegis Fleet Services
                  street_address: 111 Main St
                card_security_code_verification:
                  response:
                    code: '0000'
                    memo: Card security code match
                  type: CVV1
                card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                cardholder_authentication_data:
                  electronic_commerce_indicator: authentication_successful
                  verification_result: verified
                  verification_value_created_by: issuer_acs
                created_time: 2021-08-21T17:26:29Z
                currency_code: USD
                currency_conversion:
                  network:
                    conversion_rate: 1.0
                    dynamic_currency_conversion: false
                    original_amount: 10.0
                    original_currency_code: '840'
                duration: 622
                fraud:
                  network:
                    account_risk_score: '7'
                    transaction_risk_score: 97
                gpa:
                  available_balance: 0.0
                  balances:
                    USD:
                      available_balance: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: -10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                  credit_balance: 0.0
                  currency_code: USD
                  impacted_amount: -10.0
                  ledger_balance: 20.0
                  pending_credits: 0.0
                gpa_order:
                  amount: 10
                  created_time: 2021-08-21T17:26:30Z
                  currency_code: USD
                  funding:
                    amount: 10.0
                    gateway_log:
                      duration: 481
                      message: Approved or completed successfully
                      order_number: '1200'
                      response:
                        code: '200'
                        data:
                          - jit_funding:
                              address_verification:
                                gateway:
                                  on_file:
                                    postal_code: '94601'
                                    street_address: 2000 High St
                                  response:
                                    code: '0000'
                                    memo: Address and postal code match
                              amount: 10.0
                              method: pgfs.authorization
                              original_jit_funding_token: your-jit-funding-token
                              token: your-jit-funding-token
                              user_token: your-jit-funding-user
                      timed_out: false
                      transaction_id: your-jit-funding-token
                    source:
                      active: true
                      created_time: 2021-08-21T17:25:43Z
                      is_default_account: false
                      last_modified_time: 2021-08-21T17:25:43Z
                      name: PGFS for simulating transactions
                      token: '**********dd5f'
                      type: programgateway
                  funding_source_token: '**********dd5f'
                  jit_funding:
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    method: pgfs.authorization
                    token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                  last_modified_time: 2021-08-21T17:26:30Z
                  response:
                    code: '0000'
                    memo: Approved or completed successfully
                  state: PENDING
                  token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                  transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                  user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                issuer_received_time: 2021-08-21T17:26:29Z
                network: VISA
                pos:
                  card_holder_presence: false
                  card_presence: false
                  is_recurring: false
                  pan_entry_mode: MAG_STRIPE
                  partial_approval_capable: false
                  pin_entry_mode: 'TRUE'
                  purchase_amount_only: false
                  terminal_attendance: ATTENDED
                  terminal_id: TR100000
                request_amount: 10.0
                response:
                  code: '0000'
                  memo: Approved or completed successfully
                settlement_date: 2021-08-21T00:00:00Z
                state: PENDING
                subnetwork: VISANET
                token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                transaction_metadata:
                  payment_channel: OTHER
                type: authorization
                user:
                  metadata: null
                user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                user_transaction_time: 2021-08-21T17:26:29Z
              schema:
                $ref: '#/components/schemas/transaction_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Transaction token not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve transaction
      tags:
        - Transactions
  /transactions/{token}/related:
    get:
      description: |-
        List all transactions related to the specified transaction.

        By default, this endpoint returns transactions conducted within the last 30 days.
        To return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.

        By default, this endpoint returns transactions of any state.
        To return transactions in specific states, you must include the `state` query parameter in your request.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactionsTokenRelated
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -user_transaction_time
            enum:
              - -created_time
              - created_time
              - -user_transaction_time
              - user_transaction_time
            type: string
          style: form
        - description: |-
            The starting date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The ending date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            default: ALL
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description: If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - acquirer:
                      institution_country: '840'
                      institution_id_code: '428399181'
                      retrieval_reference_number: '528294182583'
                      system_trace_audit_number: '656761'
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    card:
                      metadata: null
                    card_security_code_verification:
                      response:
                        code: '0000'
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 537
                    fraud:
                      network:
                        account_risk_score: '7'
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0.0
                      balances:
                        USD:
                          available_balance: 0.0
                          credit_balance: 0.0
                          currency_code: USD
                          impacted_amount: 10.0
                          ledger_balance: 20.0
                          pending_credits: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: 10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                    gpa_order:
                      amount: 10.0
                      created_time: 2021-08-21T17:26:30Z
                      funding:
                        amount: 10.0
                        currency_code: USD
                        funding_source_token: '**********dd5f'
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: '1200'
                          response:
                            code: '200'
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: 94601
                                      street_address: 2000 High St
                                    response:
                                      code: '0000'
                                      memo: Address and postal code match
                                amount: 10.0
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        jit_funding:
                          acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                          amount: 10.0
                          method: pgfs.authorization
                          token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                          user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: '**********dd5f'
                          type: programgateway
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: '0000'
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: MARQETA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: 'TRUE'
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                    preceding_related_transaction_token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    response:
                      code: '0000'
                      memo: Approved or completed successfully
                    state: PENDING
                    subnetwork: GATEWAY_JIT
                    token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    transaction_metadata:
                      payment_channel: OTHER
                    type: gpa.credit.authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/TransactionModelListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List related transactions
      tags:
        - Transactions
  /users:
    get:
      description: |-
        To return an array of all of a program's users, send a `GET` request to the `/users` endpoint.
        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
        To narrow your result set to users that match certain criteria, see the <<search_users,Search users>> endpoint.

        The `business_token` field is conditionally returned in the response (it cannot be set through the API).
        You can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:

        [cols="1,1,1"]
        |===
        | parent_token | business_token | Description

        | Not populated
        | Not populated
        | User does not have a parent.

        | Populated
        | Not populated
        | User's parent is a user.

        | Populated; matches `business_token`
        | Populated; matches `parent_token`
        | User's parent is a business.

        | Populated; does not match `business_token`
        | Populated; does not match `parent_token`
        | User's parent is a user and the parent's parent is a business.
        |===
      operationId: getUsers
      parameters:
        - description: The number of `user` resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search type
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 1234 Grove Street
                    birth_date: 1991-01-01
                    city: Berkeley
                    country: USA
                    created_time: 2021-08-16T19:43:02Z
                    email: jane.doe@company.com
                    first_name: Jane
                    gender: F
                    identifications:
                      - type: SSN
                        value: '5555'
                    last_modified_time: 2021-08-16T19:43:02Z
                    last_name: Doe
                    metadata:
                      authentication_answer1: Cashier
                      authentication_answer2: Trabant
                      authentication_answer3: Blue
                      authentication_question1: What was your first job?
                      authentication_question2: What make was your first car?
                      authentication_question3: What is your favorite color?
                      notification_email: jane.doe@home.com
                      notification_language: spa
                    password: P@ssw0rd
                    phone: '5105551212'
                    postal_code: '94702'
                    state: CA
                    status: ACTIVE
                    token: my_user_01
                    uses_parent_account: false
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 2345 Main Street
                    birth_date: 1992-02-02
                    city: Berkeley
                    country: USA
                    created_time: 2022-03-14T00:45:00Z
                    email: john.doe@company.com
                    first_name: John
                    gender: M
                    identifications:
                      - type: SSN
                        value: '4444'
                    last_modified_time: 2022-03-14T00:45:00Z
                    last_name: Doe
                    metadata:
                      key1: value1
                      key2: value2
                    password: my-password
                    phone: '5105551212'
                    postal_code: '94702'
                    state: CA
                    status: ACTIVE
                    token: my_user_02
                    uses_parent_account: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List users
      tags:
        - Users
    post:
      description: |-
        This endpoint enables you to create a user.
        A new user's initial status depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.

        [cols="1,1,1,1"]
        |===
        | KYC Required | Initial User Status | User Active on Creation | User Limitations

        | Always
        | `UNVERIFIED`
        | Optional
        | Cannot load funds; cannot activate cards.

        | Conditionally
        | `LIMITED`
        | Optional
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        | Never
        | `ACTIVE`
        | Required
        | None.
        |===

        To change or track the history of a user's status, see the `/usertransitions` endpoint.
        For more information on status changes, see <<create_user_transition, Create User Transition>> on this page.

        To perform KYC verification on users, the `user` object must have the following fields configured:

        * `first_name`
        * `last_name`
        * `address1` (cannot be a PO Box)
        * `city`
        * `state`
        * `postal_code`
        * `country`
        * `birth_date`
        * `identifications`

        [NOTE]
        The `identifications` requirement depends on your program's configuration.
        To determine if you should provide a full or abbreviated identification number, contact your Marqeta representative.
        KYC verification requires the full Social Security Number (SSN) of the user.

        To create a child user, you must identify the parent user or business and decide whether the child user shares an account with the parent.

        The parent must be an existing user or business.
        On the child user, set the `parent_token` field to the value of the parent's `token` field.
        If either the parent or the parent's parent is a business, a `business_token` field is added to the user.
        This field's value is set to the token of either the parent or grandparent (whichever is the business).

        The `uses_parent_account` field determines whether the child shares balances with the parent (`true`) or whether the child balances are independent of the parent (`false`).
        If you do not specify a value for `uses_parent_account`, it is set to `false` by default (the user does not share the parent's balance) and returned in the response body.
        This field cannot be updated, so you must decide upon creation whether the child user shares the parent balance.

        Sharing an account with a parent user affects how the child user interacts with cards as follows:

        * A child user cannot spend funds if its parent is not active.
        * An active child user can activate cards, whether the parent is active or not.
      operationId: postUsers
      requestBody:
        content:
          application/json:
            example:
              address1: 1234 Grove Street
              birth_date: 1991-01-01
              city: Berkeley
              country: USA
              email: jane.doe@company.com
              first_name: Jane
              gender: F
              identifications:
                - type: SSN
                  value: '111234444'
              last_name: Doe
              metadata:
                authentication_answer1: Cashier
                authentication_answer2: Trabant
                authentication_answer3: Blue
                authentication_question1: What was your first job?
                authentication_question2: What make was your first car?
                authentication_question3: What is your favorite color?
                notification_email: jane.doe@home.com
                notification_language: spa
              password: P@ssw0rd
              phone: '5105551212'
              postal_code: '94702'
              state: CA
              token: my_user_01
              uses_parent_account: false
            schema:
              $ref: '#/components/schemas/card_holder_model'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 1234 Grove Street
                birth_date: 1991-01-01
                city: Berkeley
                corporate_card_holder: false
                country: USA
                created_time: 2022-03-26T20:21:24Z
                email: jane.doe6@company.com
                first_name: Jane
                gender: F
                last_modified_time: 2022-03-26T20:21:24Z
                last_name: Doe
                metadata:
                  authentication_answer1: Cashier
                  authentication_answer2: Trabant
                  authentication_answer3: Blue
                  authentication_question1: What was your first job?
                  authentication_question2: What make was your first car?
                  authentication_question3: What is your favorite color?
                  notification_email: jane.doe@home.com
                  notification_language: spa
                password: P@ssw0rd
                phone: '5105551212'
                ssn: '5555'
                state: CA
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
                zip: '94702'
              schema:
                $ref: '#/components/schemas/user_card_holder_response'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '412':
          content: {
            }
          description: Pre-condition setup issue
        '500':
          content: {
            }
          description: Server error
      summary: Create user
      tags:
        - Users
  /users/auth/changepassword:
    post:
      description: |-
        To change a user password, send a `POST` request to the `/users/auth/changepassword` endpoint and include the `current_password` and `new_password` in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        This endpoint operates in the context of a currently logged-in user.

        A successful password change returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthChangepassword
      requestBody:
        content:
          application/json:
            example:
              current_password: my_old_password
              new_password: my_new_password
            schema:
              $ref: '#/components/schemas/password_update_model'
        description: Password update object
        required: true
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Update user password
      tags:
        - Users
  /users/auth/clientaccesstoken:
    post:
      description: |-
        Each time you want to display a virtual card's sensitive data (for example, when using `marqeta.js`), you must first request a new, single-use client access token from the Marqeta platform by sending a `POST` request to the `/users/auth/clientaccesstoken` endpoint.
        Unredeemed client access tokens expire after five minutes.
      operationId: postUsersAuthClientaccesstoken
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_01
            schema:
              $ref: '#/components/schemas/client_access_token_request'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                created: 2022-07-29T12:00:00Z
                expires: 2022-07-29T12:05:00Z
                token: ewogICJ0b2tlbiI6ICI5NzIwMDkwNS00ODc0LTRkMWEtODEzMS1jMWI3NDAwNzJjM2MmYXBwbGljYXRpb25fdG9rZW49eW91cl9hcHBsaWNhdGlvbl90b2tlbiIsCiAgImFwcGxpY2F0aW9uIjogewogICAgInRva2VuIjogInlvdXJfYXBwbGljYXRpb25fdG9rZW4iLAogICAgImFjdGl2ZSI6IHRydWUsCiAgICAiY2xpZW50X2FwaV9iYXNlX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2FwaS92MSIsCiAgICAiYXNzZXRzX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2Fzc2V0cy8xLjAuMCIsCiAgICAiY2xpZW50dG9rZW5hcHBsaWNhdGlvbklkIjogIjU3MDI2OTJhMGI4ZGNlOTg1YWVmNTExMiIKICB9LAogICJhcHBsaWNhdGlvbl90b2tlbiI6IG51bGwsCiAgImV4cGlyZXMiOiAiMjAxOC0xMi0zMVQyMzo1OTo1OSswMDAwIiwKICAiY2FyZF90b2tlbiI6ICJ0b2tlbl9vZl90aGVfY2FyZF95b3VfbmVlZF90b19wcmVzZW50IiwKICAiYWNjZXNzZWQiOiBudWxsLAogICJjbGllbnR0b2tlbklkIjogIjU5MTc2Y2JlMGI4ZGNlOTg1YWVmNTEzMCIsCiAgImNyZWF0ZWQiOiAiMjAxOC0wMS0wMVQwMDowMDowMCswMDAwIgp9
              schema:
                $ref: '#/components/schemas/client_access_token_response'
          description: Created
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Create client access token
      tags:
        - Users
  /users/auth/clientaccesstoken/{token}:
    get:
      description: To retrieve application and card information using a client access
        token, send a `GET` request to the `/users/auth/clientaccesstoken/{token}`
        endpoint.
      operationId: getUsersAuthClientaccesstokenToken
      parameters:
        - description: The client access token.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The unique identifier of the `application` object.
          explode: true
          in: query
          name: application_token
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                created: 2022-07-29T12:00:00Z
                expires: 2022-07-29T12:05:00Z
                token: ewogICJ0b2tlbiI6ICI5NzIwMDkwNS00ODc0LTRkMWEtODEzMS1jMWI3NDAwNzJjM2MmYXBwbGljYXRpb25fdG9rZW49eW91cl9hcHBsaWNhdGlvbl90b2tlbiIsCiAgImFwcGxpY2F0aW9uIjogewogICAgInRva2VuIjogInlvdXJfYXBwbGljYXRpb25fdG9rZW4iLAogICAgImFjdGl2ZSI6IHRydWUsCiAgICAiY2xpZW50X2FwaV9iYXNlX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2FwaS92MSIsCiAgICAiYXNzZXRzX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2Fzc2V0cy8xLjAuMCIsCiAgICAiY2xpZW50dG9rZW5hcHBsaWNhdGlvbklkIjogIjU3MDI2OTJhMGI4ZGNlOTg1YWVmNTExMiIKICB9LAogICJhcHBsaWNhdGlvbl90b2tlbiI6IG51bGwsCiAgImV4cGlyZXMiOiAiMjAxOC0xMi0zMVQyMzo1OTo1OSswMDAwIiwKICAiY2FyZF90b2tlbiI6ICJ0b2tlbl9vZl90aGVfY2FyZF95b3VfbmVlZF90b19wcmVzZW50IiwKICAiYWNjZXNzZWQiOiBudWxsLAogICJjbGllbnR0b2tlbklkIjogIjU5MTc2Y2JlMGI4ZGNlOTg1YWVmNTEzMCIsCiAgImNyZWF0ZWQiOiAiMjAxOC0wMS0wMVQwMDowMDowMCswMDAwIgp9
              schema:
                $ref: '#/components/schemas/client_access_token_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '403':
          content: {
            }
          description: Forbidden
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve client access token
      tags:
        - Users
  /users/auth/login:
    post:
      description: |-
        To log in a user and return a user access token, send a `POST` request to the `/users/auth/login` endpoint and include the user details in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.

        [TIP]
        To check a user's credentials without logging out the user, call the `/users/auth/onetime` endpoint.
      operationId: postUsersAuthLogin
      requestBody:
        content:
          application/json:
            example:
              email: jane.doe@company.com
              password: P@ssw0rd
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/login_request_model'
        description: User login object
        required: false
      responses:
        '204':
          content:
            application/json:
              example:
                access_token:
                  expires: 2023-03-01T21:02:04Z
                  one_time: false
                  token: e12b1f64-1444-4aa3-83d9-347800c68e94
                user:
                  active: true
                  created_time: 2021-04-01T17:52:39Z
                  email: jane.doe@company.com
                  last_modified_time: 2021-04-01T17:52:39Z
                  password: P@ssw0rd
                  token: my_user_01
                  uses_parent_account: false
              schema:
                $ref: '#/components/schemas/login_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Log in user
      tags:
        - Users
  /users/auth/logout:
    post:
      description: |-
        To log out a user, send a `POST` request to the `/users/auth/logout` endpoint.

        A successful logout returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthLogout
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Log out user
      tags:
        - Users
  /users/auth/onetime:
    post:
      description: |-
        This endpoint returns a single-use access token.
        This type of token authorizes a single request to access API endpoints and data associated with a particular user.
        A single-use access token differs from a user access token (as returned by `POST` `/users/auth/login`) only in the number of times it can be used.

        To return a single-use access token, send a `POST` request to the `/users/auth/onetime` endpoint.
        Provide one of these sets of input data:

        * *Case #1* – Application token and user access token
        * *Case #2* – Application token, admin access token, and user token
        * *Case #3* – Application token, user's Marqeta password, and user's email address

        In each case, provide the application token as the HTTP Basic Authentication username in the request header's Authorization field.
        When applicable, provide the user access token or admin access token as the HTTP Basic Authentication password.
        When applicable, provide the user token or user's Marqeta password and email address in link:http://www.json.org/[JSON, window="_blank"] format in the request body.

        Before instantiating an embedded Marqeta widget, call this endpoint to obtain the single-use access token required as input (cases #1 and #2).

        This endpoint is also useful when you want to check a user's credentials before performing a sensitive operation without having to log out the user (case #3).

        [NOTE]
        Calling this endpoint and returning a single-use access token does not invalidate the user's current user access token.
      operationId: postUsersAuthOnetime
      requestBody:
        content:
          application/json:
            examples:
              case_one:
                summary: '*Case 1:* Authorization: Basic `my_application_token:my_user_access_token`'
                value: {
                  }
              case_three:
                summary: '*Case 3:* Authorization: Basic `my_application_token`'
                value:
                  email: jane.doe@company.com
                  password: P@ssw0rd
              case_two:
                summary: '*Case 2:* Authorization: Basic `my_application_token:my_admin_access_token`'
                value:
                  user_token: my_user_token
            schema:
              $ref: '#/components/schemas/one_time_request_model'
        description: One-time object
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                expires: 2023-04-01T00:00:00Z
                one_time: true
                token: 697e0bde-ea52-44bd-8150-0e0f83e9625d
              schema:
                $ref: '#/components/schemas/access_token_response'
          description: Created
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Create single-use token
      tags:
        - Users
  /users/auth/resetpassword:
    post:
      description: |-
        The first step in resetting a user's password is to request a password reset token.
        Send a `POST` request to the `/users/auth/resetpassword` endpoint and include the user's email address in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        This request generates and sends an email message containing the `user_token` and `password_reset_token` to the user's email address.
        You must customize the email message with a link that passes the `user_token` and `password_reset_token` to a web page where a subsequent request updates the password.

        A successful request returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthResetpassword
      requestBody:
        content:
          application/json:
            example:
              email: jane.doe@company.com
            schema:
              $ref: '#/components/schemas/reset_user_password_email_model'
        required: false
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Request user password reset token
      tags:
        - Users
  /users/auth/resetpassword/{token}:
    post:
      description: |-
        To reset the user's password, send a `POST` request to the `/users/auth/resetpassword/{token}` endpoint.
        Include the `user_token` and `new_password` in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        Include the `password_reset_token` as a path parameter.

        A successful password reset returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthResetpasswordToken
      parameters:
        - description: The password reset token generated using the `POST /users/auth/resetpassword`
            operation.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              new_password: newPassword123@
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/reset_user_password_model'
        required: false
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Reset user password
      tags:
        - Users
  /users/auth/verifyemail:
    post:
      description: |-
        The first step in verifying a cardholder's email address is to request an email verification token.
        To request an email verification token, send a `POST` request to the `/users/auth/verifyemail` endpoint.
        No input parameters are required because this operation is performed in the context of an authenticated user.
        This request generates and sends an email message containing the email verification token to the user's email address.
        The email message must be customized with a link that passes the email verification token to a web page where a subsequent request verifies the email address.
        You set up the subsequent request in step 2.

        A successful request returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthVerifyemail
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Request email verification token
      tags:
        - Users
  /users/auth/verifyemail/{token}:
    post:
      description: |-
        To verify the email address, send a `POST` request to the `/users/auth/verifyemail/{email_verification_token}` endpoint.
        Include the `email_verification_token` as a path parameter.

        A successful email verification returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthVerifyemailToken
      parameters:
        - description: The email verification token generated using the `POST /users/auth/verifyemail`
            operation.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '401':
          content: {
            }
          description: Unauthorized
        '500':
          content: {
            }
          description: Server error
      summary: Verify email address
      tags:
        - Users
  /users/lookup:
    post:
      description: |-
        To search for one or more users, send a `POST` request to the `/users/lookup` endpoint.
        Include in the message body any parameters by which you want to query.
        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: postUsersLookup
      parameters:
        - description: The number of `user` resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search type
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      requestBody:
        content:
          application/json:
            example:
              first_name: Jane
            schema:
              $ref: '#/components/schemas/user_card_holder_search_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 1234 Grove Street
                    birth_date: 1991-01-01
                    city: Berkeley
                    country: USA
                    created_time: 2020-03-16T20:26:28Z
                    email: jane.doe@company.com
                    first_name: Jane
                    gender: F
                    identifications:
                      - type: DRIVERS_LICENSE
                        value: '12345'
                    last_modified_time: 2020-03-16T20:26:29Z
                    last_name: Doe
                    metadata: {
                      }
                    password: P@ssw0rd
                    phone: '5105551212'
                    postal_code: '94702'
                    state: CA
                    status: ACTIVE
                    token: my_user_01
                    uses_parent_account: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Search users
      tags:
        - Users
  /users/{parent_token}/children:
    get:
      description: |-
        To retrieve users who are children of a parent user or business, send a `GET` request to the `/users/{parent_token}/children` endpoint.
        Include the parent's user or business token as a URL path parameter.

        The `business_token` field is conditionally returned in the response (it cannot be set through the API).
        You can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:

        [cols="1,1,1"]
        |===
        | parent_token | business_token | Description

        | Not populated
        | Not populated
        | User does not have a parent.

        | Populated
        | Not populated
        | User's parent is a user.

        | Populated; matches `business_token`
        | Populated; matches `parent_token`
        | User's parent is a business.

        | Populated; does not match `business_token`
        | Populated; does not match `parent_token`
        | User's parent is a user and the parent's parent is a business.
        |===

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getUsersParenttokenChildren
      parameters:
        - description: The number of user resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: The unique identifier of the parent account holder.
          explode: false
          in: path
          name: parent_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 123 Main Street
                    city: Oakland
                    country: USA
                    created_time: 2020-08-16T19:46:58Z
                    email: john_smith@company.com
                    first_name: John
                    gender: M
                    identifications:
                      - birth_date: 1986-04-01
                        type: SSN
                        value: '7777'
                    last_modified_time: 2020-08-16T19:46:58Z
                    last_name: Smith
                    metadata: {
                      }
                    parent_token: my_user_01
                    password: P@55word
                    phone: '5101111111'
                    postal_code: '94601'
                    state: CA
                    status: ACTIVE
                    token: child_of_parent
                    uses_parent_account: true
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/UserCardHolderListResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List user child accounts
      tags:
        - Users
  /users/{token}:
    get:
      description: |-
        To retrieve a specific user, send a `GET` request to the `/users/{token}` endpoint.
        Include the user `token` path parameter to specify the user to return.

        The `business_token` field is conditionally returned in the response (it cannot be set through the API).
        You can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:

        [cols="1,1,1"]
        |===
        | parent_token | business_token | Description

        | Not populated
        | Not populated
        | User does not have a parent.

        | Populated
        | Not populated
        | User's parent is a user.

        | Populated; matches `business_token`
        | Populated; matches `parent_token`
        | User's parent is a business.

        | Populated; does not match `business_token`
        | Populated; does not match `parent_token`
        | User's parent is a user and the parent's parent is a business.
        |===

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getUsersToken
      parameters:
        - description: The unique identifier of the `user` resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 1234 Grove Street
                birth_date: 1991-01-01
                city: Berkeley
                country: USA
                created_time: 2021-08-16T19:39:34Z
                email: jane.doe@company.com
                first_name: Jane
                gender: F
                identifications:
                  - type: SSN
                    value: '5555'
                last_modified_time: 2021-08-16T19:39:34Z
                last_name: Doe
                metadata:
                  authentication_answer1: Cashier
                  authentication_answer2: Trabant
                  authentication_answer3: Blue
                  authentication_question1: What was your first job?
                  authentication_question2: What make was your first car?
                  authentication_question3: What is your favorite color?
                  notification_email: jane.doe@home.com
                  notification_language: spa
                password: P@ssw0rd
                phone: '5105551212'
                postal_code: '94702'
                state: CA
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
              schema:
                $ref: '#/components/schemas/user_card_holder_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Cardholder not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve user
      tags:
        - Users
    put:
      description: |-
        To update a specific `user` resource, send a `PUT` request to the `/users/{token}` endpoint.
        Include the user `token` path parameter to specify the user to update.

        To unlink a child user account from a parent account, pass a null value to the `parent_token` field of the child user resource.
      operationId: putUsersToken
      parameters:
        - description: The unique identifier of the `user` resource you want to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              address1: 4321 Grove Street
            schema:
              $ref: '#/components/schemas/UserCardHolderUpdateModel'
        description: User object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 4321 Grove Street
                corporate_card_holder: false
                created_time: 2021-01-29T00:12:20Z
                last_modified_time: 2021-09-23T21:41:24Z
                metadata: {
                  }
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
              schema:
                $ref: '#/components/schemas/card_holder_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update user
      tags:
        - Users
  /users/{token}/ssn:
    get:
      description: |-
        To retrieve the government-issued identification number for a user, send a `GET` request to the `/users/{token}/ssn` endpoint.
        Include the `token` path parameter to specify the user whose identification number (SSN, TIN, NIN, SIN) you wish to return.
        You can indicate whether to return the full number or the last four digits only.
      operationId: getUsersTokenSsn
      parameters:
        - description: The unique identifier of the `user` resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            To return the full identification number, set to `true`.
            To return only the last four digits, set to `false`.

            If the identifications array contains only the last four digits of the identification number, the `/users/{token}/ssn` endpoint will return only the last four digits, regardless of the `full_ssn` parameter.
          explode: true
          in: query
          name: full_ssn
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                ssn: '5555'
              schema:
                $ref: '#/components/schemas/ssn_response_model'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve user identification number
      tags:
        - Users
  /usertransitions:
    post:
      description: |-
        This endpoint enables you to change a user's status, depending on your role and the previous status change.
        By changing a user's status, you can control the user's capabilities and the setting of the `user.active` field.
        You cannot control `user.active` directly.

        [cols="2,4a,4a"]
        |===
        | user.status Field | Description | User Limitations

        | `UNVERIFIED`
        | Initial status of a new user belonging to an account holder group where KYC is always required.  +
        *Allowable Transitions:*  +
        `ACTIVE`, `CLOSED`
        | Cannot load funds or activate cards.  +
        *user.active Field:*  +
        `false`

        | `LIMITED`
        | Initial status of a new user belonging to an account holder group where KYC is conditionally required.  +
        *Allowable Transitions:*  +
        `ACTIVE`, `SUSPENDED`, `CLOSED`
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.  +
        *user.active Field:*  +
        `true`

        | `ACTIVE`
        | Status of a user who has passed KYC, or initial status of a new user belonging to an account holder group where KYC is never required.  +
        *Allowable Transitions:*  +
        `SUSPENDED`, `CLOSED`, `UNVERIFIED`
        | None.  +
        *user.active Field:*  +
        `true`

        | `SUSPENDED`
        | The user is temporarily inactive.

        Transitioning a suspended user to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.  +
        *Allowable Transitions:*  +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`
        | Cannot load funds or activate cards.  +
        *user.active Field:*  +
        `false`

        | `CLOSED`
        | The user is permanently inactive.

        In general, the `CLOSED` status should be terminal.
        For exceptional cases, you can transition a user to other statuses, depending on your role and the details of the previous status change.
        Contact your Marqeta representative for more information.  +
        *Allowable Transitions:*  +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`
        | Cannot load funds or activate cards.  +
        *user.active Field:*  +
        `false`

        |===

        [NOTE]
        The Marqeta platform transitions a user's status in response to certain events.
        For example, a user in the `UNVERIFIED` status is transitioned to `ACTIVE` when the user passes KYC verification.
      operationId: postUsertransitions
      requestBody:
        content:
          application/json:
            example:
              channel: API
              reason: Activating user
              reason_code: '00'
              status: ACTIVE
              token: activate_05
              user_token: my_user_01
            schema:
              $ref: '#/components/schemas/UserTransitionRequest'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                channel: API
                created_time: 2022-03-15T00:00:00Z
                reason: Activating user
                reason_code: '00'
                status: ACTIVE
                token: activate_05
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/UserTransitionResponse'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '412':
          content: {
            }
          description: Pre-condition setup issue
        '500':
          content: {
            }
          description: Server error
      summary: Create user transition
      tags:
        - User Transitions
  /usertransitions/user/{user_token}:
    get:
      description: List all transitions for a given user.
      operationId: getUsertransitionsUserUsertoken
      parameters:
        - description: The unique identifier of the `user` resource.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of user transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - channel: API
                    created_time: 2022-03-15T00:00:00Z
                    reason: Activating user
                    reason_code: '00'
                    status: ACTIVE
                    token: activate_05
                    user_token: my_user_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/UserTransitionListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List transitions for user
      tags:
        - User Transitions
  /usertransitions/{token}:
    get:
      description: Retrieve a user transition.
      operationId: getUsertransitionsToken
      parameters:
        - description: The unique identifier of the user transition you want to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                channel: API
                created_time: 2022-03-15T00:00:00Z
                reason: Activating user
                reason_code: '00'
                status: ACTIVE
                token: activate_05
                user_token: my_user_01
              schema:
                $ref: '#/components/schemas/UserTransitionResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Cardholder not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve user transition
      tags:
        - User Transitions
  /velocitycontrols:
    get:
      description: |-
        Retrieves a list of all the velocity controls associated with a specific user or card product, or lists all the velocity controls defined for your program.

        Include either a `user` or a `card_product` query parameter to indicate the user or card product whose associated velocity controls you want to retrieve (do not include both).

        To list all velocity controls for your program, omit the `user` and `card_product` query parameters from your request.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getVelocitycontrols
      parameters:
        - description: |-
            Unique identifier of the card product.
            Enter the string `null` to retrieve velocity controls that are not associated with any card product.
          explode: true
          in: query
          name: card_product
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the user.
            Enter the string `null` to retrieve velocity controls that are not associated with any user.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: Number of velocity control resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    amount_limit: 500.0
                    approvals_only: true
                    association:
                      user_token: my_user_04
                    currency_code: USD
                    include_cashback: true
                    include_credits: false
                    include_purchases: true
                    include_transfers: true
                    include_withdrawals: true
                    merchant_scope: {
                      }
                    token: my_velocitycontrol_01
                    usage_limit: 10
                    velocity_window: DAY
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/VelocityControlListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List velocity controls
      tags:
        - Velocity Controls
    post:
      description: |-
        Limits how much and how frequently a user can spend funds.
        If multiple velocity controls apply to the same user, the user cannot exceed any of the defined spending limits.

        [TIP]
        You can create program-level controls in the sandbox environment.
        However, you must work with your Marqeta representative to create program-level controls in a production environment.
      operationId: postVelocitycontrols
      requestBody:
        content:
          application/json:
            example:
              amount_limit: 500.0
              association:
                user_token: my_user_04
              currency_code: USD
              token: my_velocitycontrol_01
              usage_limit: 10
              velocity_window: DAY
            schema:
              $ref: '#/components/schemas/velocity_control_request'
        description: Velocity control object
        required: true
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                amount_limit: 500.0
                approvals_only: true
                association:
                  user_token: my_user_04
                currency_code: USD
                include_cashback: true
                include_credits: false
                include_purchases: true
                include_transfers: true
                include_withdrawals: true
                merchant_scope: {
                  }
                token: my_velocitycontrol_01
                usage_limit: 10
                velocity_window: DAY
              schema:
                $ref: '#/components/schemas/velocity_control_response'
          description: Created
        '400':
          content: {
            }
          description: Bad request
        '409':
          content: {
            }
          description: Token already associated with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create velocity control
      tags:
        - Velocity Controls
  /velocitycontrols/user/{user_token}/available:
    get:
      description: |-
        Retrieves a list of the available balances of the velocity controls associated with a user.
        This operation is unavailable for velocity controls with a window of `TRANSACTION`, because available balances do not apply to single-transaction velocity windows.

        Depending on the control, the balance can include an available monetary amount, the number of transactions remaining, and the number of days remaining in the time window.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getVelocitycontrolsUserUsertokenAvailable
      parameters:
        - description: Unique identifier of the cardholder.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of available balance resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 2
                data:
                  - active: true
                    amount_limit: 296.0
                    approvals_only: true
                    association: {
                      }
                    available:
                      amount: 296.0
                      days_remaining: 1
                      uses: 1
                    currency_code: USD
                    include_cashback: true
                    include_credits: false
                    include_purchases: true
                    include_transfers: true
                    include_withdrawals: true
                    merchant_scope:
                      mcc: '3058'
                    name: Jane Doe
                    token: card_3
                    usage_limit: 1
                    velocity_window: DAY
                  - active: true
                    amount_limit: 500.5
                    approvals_only: true
                    association: {
                      }
                    available:
                      amount: 500.5
                      days_remaining: 1
                      uses: 1000
                    currency_code: '840'
                    include_cashback: true
                    include_credits: false
                    include_purchases: true
                    include_transfers: true
                    include_withdrawals: true
                    merchant_scope:
                      mcc: '1234'
                    token: card_4
                    usage_limit: 1000
                    velocity_window: DAY
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: '#/components/schemas/VelocityControlBalanceListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List user velocity control balances
      tags:
        - Velocity Controls
  /velocitycontrols/{token}:
    get:
      description: Retrieves a specific velocity control.
      operationId: getVelocitycontrolsToken
      parameters:
        - description: Unique identifier of the velocity control resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                amount_limit: 500.0
                approvals_only: true
                association:
                  user_token: my_user_04
                currency_code: USD
                include_cashback: true
                include_credits: false
                include_purchases: true
                include_transfers: true
                include_withdrawals: true
                merchant_scope: {
                  }
                token: my_velocitycontrol_01
                usage_limit: 10
                velocity_window: DAY
              schema:
                $ref: '#/components/schemas/velocity_control_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '404':
          content: {
            }
          description: Velocity control not found
        '500':
          content: {
            }
          description: Server error
      summary: Returns a specific velocity control
      tags:
        - Velocity Controls
    put:
      description: Updates a specific velocity control.
      operationId: putVelocitycontrolsToken
      parameters:
        - description: Unique identifier of the velocity control resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              amount_limit: 1000.0
              token: my_velocitycontrol_01
              usage_limit: 20
            schema:
              $ref: '#/components/schemas/velocity_control_update_request'
        description: Velocity control object
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                amount_limit: 1000.0
                approvals_only: true
                association:
                  user_token: my_user_04
                currency_code: USD
                include_cashback: true
                include_credits: false
                include_purchases: true
                include_transfers: true
                include_withdrawals: true
                merchant_scope: {
                  }
                token: my_velocitycontrol_01
                usage_limit: 20
                velocity_window: DAY
              schema:
                $ref: '#/components/schemas/velocity_control_response'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: Update velocity control
      tags:
        - Velocity Controls
  /webhooks:
    get:
      description: |-
        Returns an array of all webhooks.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, sorting>>, and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getWebhooks
      parameters:
        - description: Set to `true` to return only active webhook configurations.
          explode: true
          in: query
          name: active
          required: false
          schema:
            default: false
            type: boolean
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    config:
                      basic_auth_password: my_20-to-50-character_password
                      basic_auth_username: my_username
                      custom_header:
                        my_header_name_1: my_value_1
                        my_header_name_2: my_value_2
                        my_header_name_3: my_value_3
                      secret: my_20-character-min_secret
                      url: https://my_secure_domain.com/webhook
                    created_time: 2023-02-24T23:20:28Z
                    events:
                      - '*'
                    last_modified_time: 2023-02-24T23:20:28Z
                    name: my_webhook_name
                    token: my_webhook_token
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: '#/components/schemas/WebhookResponseModelListResponse'
          description: Success
        '400':
          content: {
            }
          description: Bad request
        '500':
          content: {
            }
          description: Server error
      summary: List webhooks
      tags:
        - Webhooks
    post:
      description: Creates a webhook.
      operationId: postWebhooks
      requestBody:
        content:
          application/json:
            example:
              active: true
              config:
                basic_auth_password: my_20-to-50-character_password
                basic_auth_username: my_username
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                secret: my_20-character-min_secret
                url: https://my_secure_domain.com/webhook
              events:
                - '*'
              name: my_webhook_name
              token: my_webhook_token
            schema:
              $ref: '#/components/schemas/webhook_request_model'
        required: false
      responses:
        '201':
          content:
            application/json:
              example:
                active: true
                config:
                  basic_auth_password: my_20-to-50-character_password
                  basic_auth_username: my_username
                  custom_header:
                    my_header_name_1: my_value_1
                    my_header_name_2: my_value_2
                  secret: my_20-character-min_secret
                  url: https://my_secure_domain.com/webhook
                created_time: 2023-02-24T23:20:28Z
                events:
                  - '*'
                last_modified_time: 2023-02-24T23:20:28Z
                name: my_webhook_name
                token: my_webhook_token
              schema:
                $ref: '#/components/schemas/webhook_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '409':
          content: {
            }
          description: Request already processed with a different payload
        '500':
          content: {
            }
          description: Server error
      summary: Create webhook
      tags:
        - Webhooks
  /webhooks/customheaders/{token}:
    put:
      description: Adds or updates a webhook's custom HTTP headers.
      operationId: putWebhooksCustomHeadersToken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              custom_header:
                my_header_name_1: my_value_1
                my_header_name_2: my_value_2
                my_header_name_3: my_value_3
            schema:
              $ref: '#/components/schemas/WebhookUpdateCustomHeaderRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                active: true
                config:
                  basic_auth_password: my_20-to-50-character_password
                  basic_auth_username: my_username
                  custom_header:
                    my_header_name_1: my_value_1
                    my_header_name_2: my_value_2
                    my_header_name_3: my_value_3
                  secret: my_20-character-min_secret
                  url: https://my_secure_domain.com/webhook
                created_time: 2023-02-06T08:12:32Z
                events:
                  - transaction.*
                last_modified_time: 2023-02-26T22:07:23Z
                name: my_webhook_name
                token: my_webhook_01
              schema:
                $ref: '#/components/schemas/webhook_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Resource not found
        '500':
          content: {
            }
          description: Server error
      summary: Update webhook custom headers
      tags:
        - Webhooks
  /webhooks/{token}:
    get:
      description: Retrieves a webhook.
      operationId: getWebhooksToken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
          description: Success
        '404':
          content: {
            }
          description: Resource not found
        '500':
          content: {
            }
          description: Server error
      summary: Retrieve webhook
      tags:
        - Webhooks
    put:
      description: Updates a webhook.
      operationId: putWebhooksToken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook_base_model'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook_response_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Resource not found
        '500':
          content: {
            }
          description: Server error
      summary: Update webhook
      tags:
        - Webhooks
  /webhooks/{token}/ping:
    post:
      description: |-
        Pings your webhook endpoint.

        Send a ping request to your webhook endpoint to validate credentials and connectivity.
        Your webhook endpoint must be configured to respond.

        === Configuring your webhook endpoint

        When the Marqeta platform receives the ping request, it sends a `POST` request containing the following body to the URL of your webhook endpoint:

        [#ping-webhook-sample]
        [source,json]
        ----
        {
          "pings": [
            {
              "token": "marqeta",
              "payload": "healthcheck"
            }
          ]
        }
        ----

        To indicate that it is functioning properly, your webhook endpoint must respond with a status code of `200` (see <</developer-guides/signature-verification, Signature Verification>> for a code example that identifies a ping request).
        The response can optionally include a link:http://www.json.org/[JSON, window="_blank"]-formatted body, for example:

        [#ping-webhook-sample-2]
        [source,json]
        ----
        {"my_endpoint_status": "alive"}
        ----

        The Marqeta platform then responds to its requestor by echoing, as-is, the response code and body received from your webhook endpoint.

        === Using the ping facility

        To ping a webhook endpoint, send a `POST` request to `/webhooks/{token}/ping` and use the `token` path parameter to specify which webhook you want to reach.
        Include an empty, link:http://www.json.org/[JSON, window="_blank"]-formatted body in the request, that is:

        [#ping-webhook-sample-3]
        [source,json]
        ----
        {}
        ----

        The following chain of actions occurs during the successful execution of a ping operation:

        . The Marqeta platform receives the ping request (`POST` to `/webhooks/{token}/ping`).
        . The Marqeta platform sends a request to your webhook endpoint.
        . Your webhook endpoint responds with a status code of "200" and an optional body.
        . The Marqeta platform responds to its requestor by echoing, as-is, the response code and body it received from your webhook endpoint.

        [NOTE]
        If the customer-hosted endpoint fails to respond within five seconds, the Marqeta platform times out the request and responds with the following message body (where `<optional message>` represents additional details you can choose to include in the response):

        [#ping-webhook-sample-4]
        [source,json]
        ----
        {
          "error_message": "Webhook operation failed " + <optional message>,
          "error_code": "422600"
        }
        ----

        Failed pings are not automatically retried.
      operationId: postWebhooksTokenPing
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              example:
                pings:
                  - my_endpoint_status: alive
              schema:
                $ref: '#/components/schemas/webhook_ping_model'
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Resource not found
        '500':
          content: {
            }
          description: Server error
      summary: Ping webhook
      tags:
        - Webhooks
  /webhooks/{token}/{event_type}/{event_token}:
    post:
      description: |-
        Resends an event notification to your webhook endpoint.

        Although you send this request as a `POST`, all parameters are passed in the URL and the body is empty.
        The event notification is resent to your webhook endpoint and is also returned in the response to this request.
      operationId: postWebhooksTokenEventtypeEventtoken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Specifies the type of event you want to resend.
          explode: false
          in: path
          name: event_type
          required: true
          schema:
            enum:
              - chargebacktransition
              - digitalwallettokentransition
              - cardtransition
              - usertransition
              - businesstransition
              - transaction
              - threedstransition
            type: string
          style: simple
        - description: Unique identifier of the event for which you want to resend
            a notification.
          explode: false
          in: path
          name: event_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content: {
            }
          description: Success
        '400':
          content: {
            }
          description: User input error/Bad request
        '404':
          content: {
            }
          description: Resource not found
        '500':
          content: {
            }
          description: Server error
      summary: Resend event notification
      tags:
        - Webhooks
components:
  parameters:
    accountTokenParam:
      description: The unique identifier of the credit account for which you want
        to retrieve reward programs.
      explode: true
      in: query
      name: account_token
      required: false
      schema:
        type: string
        x-allowableValues: 36 char max
      style: form
    countParam:
      description: Number of resources to retrieve.
      explode: true
      in: query
      name: count
      required: false
      schema:
        default: 5
        type: integer
        x-allowableValues: 1–100
      style: form
    endDateParam:
      description: The ending date (or date-time) of a date range from which to return
        resources, in UTC.
      explode: true
      in: query
      name: end_date
      required: false
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    endDateParamRequired:
      description: The ending date (or date-time) of a date range from which to return
        resources, in UTC.
      explode: true
      in: query
      name: end_date
      required: true
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    isActiveParam:
      description: A value of `true` returns active resources; `false` returns inactive
        resources.
      explode: true
      in: query
      name: is_active
      required: false
      schema:
        type: boolean
        x-allowableValues: '`true`, `false`'
      style: form
    programTokenParam:
      description: Unique identifier of the reward program.
      explode: false
      in: path
      name: token
      required: true
      schema:
        type: string
        x-allowableValues: Existing reward program token
      style: simple
    redemptionToken:
      description: Unique identifier of the reward redemption.
      explode: false
      in: path
      name: redemption_token
      required: true
      schema:
        type: string
        x-allowableValues: Existing redemption token
      style: simple
    sortByCreatedTimeParam:
      description: |-
        Field on which to sort.
        Prefix the field name with a hyphen (`-`) to sort in descending order.
        Omit the hyphen to sort in ascending order.

        *NOTE*:
        You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        default: -createdTime
        enum:
          - createdTime
          - -createdTime
        type: string
      style: form
    sortByUpdatedTimeParam:
      description: |-
        Field on which to sort.
        Prefix the field name with a hyphen (`-`) to sort in descending order.
        Omit the hyphen to sort in ascending order.

        *NOTE*:
        You must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`.
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        default: -updatedTime
        enum:
          - updatedTime
          - -updatedTime
        type: string
      style: form
    startDateParam:
      description: The starting date (or date-time) of a date range from which to
        return resources, in UTC.
      explode: true
      in: query
      name: start_date
      required: false
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    startDateParamRequired:
      description: The starting date (or date-time) of a date range from which to
        return resources, in UTC.
      explode: true
      in: query
      name: start_date
      required: true
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    startIndexParam:
      description: Sort order index of the first resource in the returned array.
      explode: true
      in: query
      name: start_index
      required: false
      schema:
        default: 0
        format: int64
        type: integer
        x-allowableValues: 0 min
      style: form
  schemas:
    ACHListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of ACH funding source objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/base_ach_response_model'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    AbstractPage:
      description: Return paginated entities.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int64
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int64
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AcceptedCountriesListResponse:
      properties:
        count:
          description: |-
            Number of `acceptedcountries` objects retrieved.

            This field is returned if there are objects in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of `acceptedcountries` objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/accepted_countries_model'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    AccountAdjustmentPage:
      description: Returns paginated account adjustments.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more account adjustments.
          items:
            $ref: '#/components/schemas/AccountAdjustmentResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AccountAdjustmentReq:
      description: Contains information relevant to creating an account adjustment.
      properties:
        amount:
          description: |-
            Amount of the adjustment.

            Value must be negative if `original_ledger_entry_token` is not passed.
          maximum: 1000000
          type: number
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the adjustment.
          minLength: 1
          type: string
        external_adjustment_id:
          description: Unique identifier you provide of an associated external adjustment
            that exists outside Marqeta's credit platform.
          format: uuid
          type: string
        note:
          description: Additional information on the adjustment.
          type: string
        original_ledger_entry_token:
          description: |-
            Unique identifier of the original journal entry needing the adjustment.

            Required when adjusting an existing journal entry.
          format: uuid
          type: string
        reason:
          description: |-
            Reason for the adjustment.

            * `DISPUTE` - The adjustment occurred because a dispute was initiated.
            * `DISPUTE_RESOLUTION` - The adjustment occurred because of the result of a dispute resolution.
            * `RETURNED_OR_CANCELED_PAYMENT` - The adjustment occurred because a payment was returned or canceled.
            * `OTHER` - Any other reason the adjustment occurred. For example, a waived fee or account write-off.
          enum:
            - DISPUTE
            - DISPUTE_RESOLUTION
            - RETURNED_OR_CANCELED_PAYMENT
            - OTHER
          type: string
        token:
          description: Unique identifier of the adjustment.
          type: string
      required:
        - amount
        - currency_code
        - description
      type: object
    AccountAdjustmentResponse:
      description: Contains information returned for account adjustment.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the adjustment
            was made.
          maxLength: 36
          type: string
        adjustment_detail_object:
          description: |-
            Contains the adjustment's full details.

            The fields returned in this object depend on the adjustment type.

            Interest returns interest details.
            For the specific fields returned, see the `detail_object` fields marked "Returned for interest journal entries" in the <</core-api/credit-account-journal-entries#getAccountJournalEntry, account journal entry response fields>>.

            Disputes return dispute details.
            For the specific fields returned, see the <</core-api/credit-disputes#retrieveDispute, dispute response fields>>.
          nullable: true
          type: object
        amount:
          description: Amount of the adjustment.
          type: number
        created_time:
          description: Date and time when the account adjustment was applied, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the adjustment.
          minLength: 1
          type: string
        detail_token:
          description: |-
            Unique identifier of the adjustment detail.
            For example, the token of the dispute, the interest charge, or the returned payment that prompted the adjustment.

            Returned when the system automatically applies an adjustment.
          maxLength: 36
          nullable: true
          type: string
        external_adjustment_id:
          description: Unique identifier you provide of an associated external adjustment
            that exists outside Marqeta's credit platform.
          format: uuid
          nullable: true
          type: string
        note:
          description: Additional information on the adjustment.
          nullable: true
          type: string
        original_ledger_entry_token:
          description: Unique identifier of the original journal entry needing the
            adjustment.
          format: uuid
          type: string
        reason:
          description: |-
            Reason for the adjustment.

            * `DISPUTE` - The adjustment occurred because a dispute was initiated.
            * `DISPUTE_RESOLUTION` - The adjustment occurred because of the result of a dispute resolution.
            * `RETURNED_OR_CANCELED_PAYMENT` - The adjustment occurred because a payment was returned or canceled.
            * `OTHER` - Any other reason the adjustment occurred. For example, a waived fee.
          enum:
            - DISPUTE
            - DISPUTE_RESOLUTION
            - RETURNED_OR_CANCELED_PAYMENT
            - OTHER
          type: string
        related_detail_object:
          description: |-
            Contains full details of the related dispute or returned payment.

            The fields returned in this object depend on whether a dispute or returned payment led to the interest adjustment.
            A dispute returns dispute details; a returned payment returns payment details.

            For more on the dispute details returned, see the <</core-api/credit-disputes#retrieveDispute, dispute response fields>>.

            For more on the returned payment details returned, see the <</core-api/credit-account-payments#retrievePayment, payment response fields>>.

            This field is returned for interest adjustments only.
          nullable: true
          type: object
        related_detail_token:
          description: |-
            Unique identifier of the dispute or returned payment that prompted the interest adjustment.

            This field is returned for interest adjustments only.
          maxLength: 36
          nullable: true
          type: string
        token:
          description: |-
            Unique identifier of the adjustment.

            If in the `detail_object`, unique identifier of the detail object.
          type: string
        type:
          description: |-
            Type of adjustment.

            The adjustment is made on its correlating amount (for example, purchase adjustments are made on purchase amounts).
            You can use general adjustments for standalone adjustments made on the credit account balance itself, which includes account write-offs, credits, and more.
          enum:
            - PURCHASE
            - FEE
            - REWARD
            - INTEREST
            - GENERAL
          type: string
      required:
        - account_token
        - amount
        - currency_code
        - description
        - reason
        - token
        - type
      type: object
    AccountAndDocumentAssetType:
      description: Type of document.
      enum:
        - TERMS_SCHEDULE
        - ACCOUNT_STATEMENT
        - SUMMARY_OF_CREDIT_TERMS
        - REWARDS_DISCLOSURE
        - PRIVACY_POLICY
        - E_DISCLOSURE
        - BENEFITS_DISCLOSURE
        - CARD_MEMBER_AGREEMENT
      type: string
    AccountAprType:
      description: |-
        Type of APR.

        * `GO_TO` - Default APR rate that is applicable when any promotional periods expire.
        * `PROMOTIONAL` - A temporary rate that is applicable for a specified period of time.
      enum:
        - GO_TO
        - PROMOTIONAL
      type: string
    AccountCardsPage:
      description: Returns paginated account cards.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more credit cards.
          items:
            $ref: '#/components/schemas/CardResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AccountConfigMinPayment:
      description: Contains configurations for a minimum payment override on a credit
        account, which overrides the minimum payment configurations on the associated
        credit product.
      properties:
        active:
          description: Whether the minimum payment override is currently active.
          type: boolean
        min_payment_flat_amount:
          description: Flat amount of the minimum payment override.
          minimum: 0
          type: number
        min_payment_percentage:
          description: Percentage of the total statement balance used to calculate
            the minimum payment override amount.
          minimum: 0
          type: number
        override_end_time:
          description: Date and time when the minimum payment override ends, in UTC.
          format: date-time
          type: string
        override_start_time:
          description: Date and time when the minimum payment override starts, in
            UTC.
          format: date-time
          type: string
      type: object
    AccountConfigPaymentHolds:
      description: Contains configurations for a payment hold.
      properties:
        ach_hold_days:
          description: Number of days to hold an ACH payment.
          maximum: 7
          minimum: 0
          type: integer
        check_hold_days:
          description: Number of days to hold a check payment.
          maximum: 7
          minimum: 0
          type: integer
      type: object
    AccountConfigReq:
      description: Contains information relevant for configuring an account's billing
        cycle day, payment due day, fees, and more.
      properties:
        billing_cycle_day:
          description: Day of month the billing cycle starts.
          maximum: 1
          minimum: 1
          type: integer
        card_level:
          default: NA
          description: The level of the credit card.
          enum:
            - PREMIUM
            - TRADITIONAL
            - NA
          type: string
        e_disclosure_active:
          default: false
          description: A value of `true` indicates that the account holder consents
            to receiving disclosures and statements electronically.
          type: boolean
        fees:
          description: Contains one or more fees associated with the credit account.
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleReq'
          type: array
        payment_due_day:
          description: Day of month the payment for the previous billing cycle is
            due.
          maximum: 31
          minimum: 31
          type: integer
        payment_holds:
          $ref: '#/components/schemas/AccountConfigPaymentHolds'
        rewards:
          description: Contains one or more rewards associated with the credit account.
          items:
            $ref: '#/components/schemas/AccountReward'
          type: array
      type: object
    AccountConfigResponse:
      description: Contains information returned when configuring an account's billing
        cycle day, payment due day, fees, and more.
      properties:
        billing_cycle_day:
          description: Day of month the billing cycle starts.
          maximum: 1
          minimum: 1
          type: integer
        card_level:
          default: NA
          description: The level of the credit card.
          enum:
            - PREMIUM
            - TRADITIONAL
            - NA
          type: string
        e_disclosure_active:
          default: false
          description: A value of `true` indicates that the account holder consents
            to receiving disclosures and statements electronically.
          type: boolean
        fees:
          description: Contains one or more fees associated with the credit account.
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleResponse'
          type: array
        min_payment:
          $ref: '#/components/schemas/AccountConfigMinPayment'
        payment_due_day:
          description: Day of month the payment for the previous billing cycle is
            due.
          maximum: 31
          minimum: 31
          type: integer
        payment_holds:
          $ref: '#/components/schemas/AccountConfigPaymentHolds'
        rewards:
          description: Contains one or more rewards associated with the credit account.
          items:
            $ref: '#/components/schemas/AccountReward'
          type: array
      type: object
    AccountConfigUpdateReq:
      description: Contains information relevant for updating configurations for electronic
        disclosures, fees, payment holds, and minimum payment.
      properties:
        e_disclosure_active:
          default: false
          description: A value of `true` indicates that the account holder consents
            to receiving disclosures and statements electronically.
          type: boolean
        fees:
          description: Contains one or more fees associated with the credit account.
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleReq'
          type: array
        min_payment:
          $ref: '#/components/schemas/AccountConfigMinPayment'
        payment_holds:
          $ref: '#/components/schemas/AccountConfigPaymentHolds'
      type: object
    AccountCreateReq:
      description: Contains information relevant to creating a credit account.
      properties:
        application_token:
          description: Unique identifier of the associated credit account application.
          type: string
        bundle_token:
          description: |-
            Unique identifier of the associated bundle.

            You must pass either `bundle_token` or both `credit_product_token` and `external_offer_id`.
          type: string
        config:
          $ref: '#/components/schemas/AccountConfigReq'
        credit_limit:
          description: Maximum balance the credit account can carry.
          exclusiveMinimum: true
          maximum: 1000000
          minimum: 0
          type: number
        credit_product_token:
          description: |-
            Unique identifier of the associated credit product.

            This field is required if passing `external_offer_id`.

            You must pass either both `credit_product_token` and `external_offer_id` or `bundle_token`.
          type: string
        description:
          description: Description for the credit account.
          type: string
        external_offer_id:
          description: |-
            Unique identifier you provide of the associated external credit offer.

            This field is required if passing `credit_product_token`.

            You must pass either both `external_offer_id` and `credit_product_token` or `bundle_token`.
          type: string
        name:
          description: Name of the credit account.
          type: string
        token:
          description: Unique identifier of the credit account.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        usages:
          description: |-
            Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.

            You can pass only one `usages` object per `usages.type`.
          items:
            $ref: '#/components/schemas/AccountUsageCreateReq'
          minItems: 1
          type: array
        user_token:
          description: Unique identifier of the primary account holder.
          type: string
      required:
        - credit_limit
        - usages
        - user_token
      type: object
    AccountCreditBalanceRefundReq:
      description: Contains details on a credit balance refund.
      properties:
        amount:
          description: |-
            Amount of the credit balance refund.

            The maximum refund amount is the amount that brings the account balance to $0.
            For example, $4000 is the maximum refund amount for a -$4000 account balance.
          minimum: 0.01
          type: number
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description for the credit balance refund.
          type: string
        method:
          $ref: '#/components/schemas/RefundMethod'
        token:
          description: Unique identifier of the credit balance refund.
          type: string
      required:
        - amount
        - currency_code
        - description
        - method
      type: object
    AccountCreditBalanceRefundResponse:
      description: Contains details on a credit balance refund.
      properties:
        account_token:
          description: Unique identifier of the credit account that needs the credit
            balance refund.
          maxLength: 36
          type: string
        amount:
          description: |-
            Amount of the credit balance refund.

            The maximum refund amount is the amount that brings the account balance to $0.
            For example, $4000 is the maximum refund amount for a -$4000 account balance.
          type: number
        created_time:
          description: Date and time when the credit balance refund was created.
          format: date-time
          type: string
        description:
          description: Description for the credit credit balance refund.
          type: string
        method:
          $ref: '#/components/schemas/RefundMethod'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          description: |-
            Unique identifier of the credit balance refund.

            If in the `detail_object`, unique identifier of the detail object.
          type: string
        updated_time:
          description: Date and time when the credit balance refund was last updated.
          format: date-time
          type: string
      required:
        - account_token
        - amount
        - created_time
        - description
        - method
        - status
        - token
        - updated_time
      type: object
    AccountDocumentResponse:
      description: Account document response.
      properties:
        accepted_at:
          description: Date and time when the user accepted the document on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        asset_token:
          description: Unique identifier of the document on a credit account.
          type: string
        asset_urls:
          $ref: '#/components/schemas/PolicyDocumentAssetURLs'
        effective_from:
          description: Date and time when the document goes into effect on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      type: object
    AccountDocumentsPage:
      description: Account document response.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Array of documents on the credit account.
          items:
            $ref: '#/components/schemas/AccountDocumentResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AccountDocumentsResponse:
      description: Account documents response.
      properties:
        account_statement:
          $ref: '#/components/schemas/AccountDocumentResponse'
        benefits_disclosure:
          $ref: '#/components/schemas/AccountDocumentResponse'
        card_member_agreement:
          $ref: '#/components/schemas/AccountDocumentResponse'
        e_disclosure:
          $ref: '#/components/schemas/AccountDocumentResponse'
        privacy_policy:
          $ref: '#/components/schemas/AccountDocumentResponse'
        rewards_disclosure:
          $ref: '#/components/schemas/AccountDocumentResponse'
        summary_of_credit_terms:
          $ref: '#/components/schemas/AccountDocumentResponse'
        terms_schedule:
          $ref: '#/components/schemas/AccountDocumentResponse'
      type: object
    AccountFee:
      description: Contains fee configurations on a credit account.
      properties:
        method:
          $ref: '#/components/schemas/Method'
        type:
          $ref: '#/components/schemas/FeeType'
        value:
          description: Value of the fee, either a flat fee amount or percentage value.
          maximum: 9999.9999
          minimum: 0
          type: number
      required:
        - method
        - type
      type: object
    AccountHolderGroupListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of account holder group objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/account_holder_group_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    AccountProductFeeType:
      description: Type of fee.
      enum:
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
        - MONTHLY_FEE
        - ANNUAL_FEE
      type: string
    AccountResponse:
      description: Contains information on a credit account.
      properties:
        activation_time:
          description: Date and time when the credit account was activated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        available_credit:
          description: Amount of credit available for use on the credit account.
          type: number
        bundle_token:
          description: Unique identifier of the associated bundle product.
          type: string
        config:
          $ref: '#/components/schemas/AccountConfigResponse'
        created_time:
          description: Date and time when the credit account was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        credit_limit:
          description: Maximum balance the credit account can carry.
          exclusiveMinimum: true
          maximum: 1000000
          minimum: 0
          type: number
        credit_product_token:
          description: Unique identifier of the associated credit product.
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        current_balance:
          description: Current purchase balance on the credit account.
          type: number
        description:
          description: Description for the credit account.
          type: string
        external_offer_id:
          description: Unique identifier you provide of the associated external credit
            offer.
          type: string
        latest_statement_cycle_type:
          $ref: '#/components/schemas/CycleType'
        name:
          description: Name of the credit account.
          type: string
        remaining_min_payment_due:
          description: Amount remaining on the latest statement's minimum payment,
            after it's adjusted for payments, returned payments, and applicable credits
            that occurred after the latest statement's closing date.
          type: number
        remaining_statement_balance:
          description: Amount remaining on the latest statement's balance, after it's
            adjusted for payments, returned payments, and applicable credits that
            occurred after the latest statement's closing date.
          type: number
        status:
          $ref: '#/components/schemas/AccountStatusEnum'
        token:
          description: Unique identifier of the credit account.
          maxLength: 36
          type: string
        type:
          $ref: '#/components/schemas/AccountType'
        updated_time:
          description: Date and time when the credit account was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        usages:
          description: Contains one or more `usages` objects that contain information
            on how a credit account is used and what types of balances are permitted
            on the account.
          items:
            $ref: '#/components/schemas/AccountUsageResponse'
          type: array
        user_token:
          description: Unique identifier of the primary account holder.
          type: string
      required:
        - available_credit
        - config
        - created_time
        - credit_limit
        - credit_product_token
        - currency_code
        - current_balance
        - latest_statement_cycle_type
        - remaining_min_payment_due
        - remaining_statement_balance
        - status
        - token
        - updated_time
        - usages
        - user_token
      type: object
    AccountReward:
      description: TODO Add description here
      properties:
        method:
          $ref: '#/components/schemas/Method'
        type:
          $ref: '#/components/schemas/RewardType'
        value:
          description: Value of the reward, either a flat reward amount or percentage
            value.
          maximum: 100
          minimum: 0
          type: number
      required:
        - method
        - type
      type: object
    AccountStatusEnum:
      description: |-
        Status of the credit account.

        *NOTE* `CHARGE_OFF` is not an allowable value for `original_status`.
      enum:
        - UNACTIVATED
        - ACTIVE
        - SUSPENDED
        - TERMINATED
        - CHARGE_OFF
      type: string
    AccountTransitionReq:
      description: Information on the credit account transition.
      properties:
        status:
          $ref: '#/components/schemas/AccountStatusEnum'
        token:
          description: Unique identifier of the credit account transition.
          type: string
      required:
        - status
      type: object
    AccountTransitionResponse:
      description: Information on the credit account transition.
      properties:
        account_token:
          description: Unique identifier of the credit account for which to transition
            a status.
          maxLength: 36
          type: string
        created_time:
          description: Date and time when the transition record was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        original_status:
          $ref: '#/components/schemas/AccountStatusEnum'
        status:
          $ref: '#/components/schemas/AccountStatusEnum'
        token:
          description: Unique identifier of the credit account transition.
          type: string
      required:
        - account_token
        - created_time
        - original_status
        - status
        - token
      type: object
    AccountTransitionsPage:
      description: Return paginated account transitions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more account transitions.
          items:
            $ref: '#/components/schemas/AccountTransitionResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AccountType:
      description: Type of credit account.
      enum:
        - CONSUMER
        - BUSINESS
      type: string
    AccountUpdateReq:
      properties:
        config:
          $ref: '#/components/schemas/AccountConfigUpdateReq'
        credit_limit:
          description: Contains information on the credit limit.
          properties:
            value:
              description: Maximum balance the credit account can carry.
              exclusiveMinimum: true
              maximum: 9.9999999999999E11
              minimum: 0
              type: number
          required:
            - value
          type: object
        latest_statement_cycle_type:
          $ref: '#/components/schemas/CycleType'
        usages:
          description: |-
            Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.

            You can pass only one `usages` object per `usages.type`.
          items:
            $ref: '#/components/schemas/AccountUsageUpdateReq'
          type: array
      type: object
    AccountUsageCreateReq:
      description: Contains information on how a credit account is used and what types
        of balances are permitted on the account.
      properties:
        aprs:
          description: Contains one or more annual percentage rates (APRs) associated
            with the type of balance on the credit account.
          items:
            $ref: '#/components/schemas/AprScheduleCreateReq'
          minItems: 1
          type: array
        fees:
          description: Contains one or more fees associated with the credit account.
          items:
            $ref: '#/components/schemas/AccountFee'
          type: array
        type:
          $ref: '#/components/schemas/BalanceType'
      required:
        - aprs
        - type
      type: object
    AccountUsageResponse:
      description: Contains information on how a credit account is used and what types
        of balances are permitted on the account.
      properties:
        aprs:
          description: Contains one or more APRs associated with the type of balance
            on the credit account
          items:
            $ref: '#/components/schemas/AprScheduleResponse'
          type: array
        fees:
          description: Contains one or more fees associated with the credit account.
          items:
            $ref: '#/components/schemas/AccountFee'
          type: array
        type:
          $ref: '#/components/schemas/BalanceType'
      required:
        - aprs
        - type
      type: object
    AccountUsageUpdateReq:
      description: Contains information on how a credit account is used and what types
        of balances are permitted on the account.
      properties:
        aprs:
          description: Contains one or more annual percentage rates (APRs) associated
            with the credit account.
          items:
            $ref: '#/components/schemas/AprScheduleUpdateReq'
          type: array
        type:
          $ref: '#/components/schemas/BalanceType'
      required:
        - apr_type
        - apr_value
        - type
      type: object
    AccountsPage:
      description: Return paginated accounts.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more credit accounts.
          items:
            $ref: '#/components/schemas/AccountResponse'
          type: array
        end_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AccrualType:
      description: Type of reward accrued.
      enum:
        - CASHBACK
      type: string
    ActivationActions:
      description: Contains information on actions that can be performed when a card
        is activated.
      properties:
        swap_digital_wallet_tokens_from_card_token:
          description: |-
            Token of the card from which to move digital wallet tokens.
            All digital wallet tokens are move from the card specified in this field to the new card.

            Not relevant when `reissue_pan_from_card_token` is set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          type: string
        terminate_reissued_source_card:
          default: true
          description: |-
            If you are reissuing a card, the source card is terminated by default.
            To prevent the source card from being terminated, set this field to `false`.

            Only relevant when `reissue_pan_from_card_token` is set.
          type: boolean
      type: object
    AddressRequestModel:
      description: Address associated with the business.
      properties:
        address1:
          description: |-
            Street address of the business proprietor or officer.

            This field is required for KYC verification (US-based accounts only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 35
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 35
          minLength: 0
          type: string
        city:
          description: |-
            City of business proprietor or officer.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 35
          minLength: 0
          type: string
        country:
          description: Country where the business proprietor or officer resides.
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          description: |-
            Business proprietor or officer's postal code.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: |-
            State where the business proprietor or officer resides.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 35
          minLength: 0
          type: string
        zip:
          description: United States ZIP code of the address.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    AddressResponseModel:
      description: Address associated with the business.
      properties:
        address1:
          description: |-
            Street address.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        city:
          description: |-
            City of the address.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        country:
          description: |-
            Country of the address.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the address.

            This field is returned if it exists in the resource.
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: |-
            State, province, or territory of the address.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        zip:
          description: |-
            United States ZIP code of the address.

            This field is returned if it exists in the resource.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    AmountFilter:
      description: Contains information on the minimum and maximum amounts that the
        balance for a billing cycle can be to earn the reward.
      properties:
        greater_than:
          description: The minimum amount that a balance for a billing cycle can be
            to earn the reward.
          minimum: 0
          type: number
        less_than:
          description: The maximum amount that a balance for a billing cycle can be
            to earn the reward.
          exclusiveMinimum: true
          minimum: 0
          type: number
      type: object
    AndroidPushTokenRequestAddress:
      description: Specifies the cardholder address.
      properties:
        address1:
          description: Street address of the cardholder.
          type: string
        address2:
          description: |-
            Additional address information for the cardholder, such as a suite or apartment number.

            `Suite 600`, for example.
          type: string
        city:
          description: City of the cardholder.
          type: string
        country:
          description: |-
            Two-character link:https://www.iso.org/iso-3166-country-codes.html[ISO alpha-2 country code, window="_blank"].
            `US`, for example.
          type: string
        name:
          description: Name of the cardholder.
          type: string
        phone:
          description: Telephone number of the cardholder.
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder, such as a United States ZIP code.
            `94612`, for example.
          type: string
        state:
          description: |-
            Two-character <<<</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, state or province code>>.
            `CA`, for example.
          type: string
        zip:
          type: string
      type: object
    Application:
      description: Contains client application information.
      properties:
        access_code:
          description: The access code of the client application.
          type: string
        assets_url:
          description: The URL of the client application assets.
          type: string
        client_api_base_url:
          description: The base URL of the client API.
          type: string
        environment:
          description: The client application's environment.
          type: string
        program:
          description: The name of the program on the Marqeta platform.
          type: string
        program_short_code:
          description: The short code of the program on the Marqeta platform.
          type: string
        token:
          description: The unique identifier of the `application` object.
          type: string
      type: object
    ApplicationOfCredits:
      description: Contains information on the cycle type and billing cycle day when
        credits are applied in the daily balance calculation.
      properties:
        cycle_type:
          $ref: '#/components/schemas/CycleType'
        day:
          description: Day of the billing cycle when credits are applied.
          maximum: 31
          minimum: 1
          type: integer
      required:
        - cycle_type
        - day
      type: object
    ApplicationResourceState:
      description: |-
        State of the application.

        If manually <</core-api/credit-applications#transitionApplication, transitioning an application state>>:

        * `application_state` is the state to which you want to transition the application status; must be `ACCEPTED` or `REJECTED`.
        * `original_status` returns the state of the application before it was manually transitioned.
        * `status` returns the state to which the application was transitioned.
      enum:
        - CREATED
        - DECISIONING
        - MANUAL_REVIEW
        - EXPIRED
        - APPROVED
        - REJECTED
        - ACCEPTED
        - DECLINED
        - ERROR
      type: string
    ApplicationTransitionRequest:
      properties:
        application_state:
          $ref: '#/components/schemas/ApplicationResourceState'
        benefits_disclosure_tracking_token:
          description: |-
            The tracking token of the Benefits Disclosure.

            This is the `tracking_token` returned in the `BENEFITS_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        card_member_agreement_tracking_token:
          description: |-
            The tracking token of the Card Member Agreement.

            This is the `tracking_token` returned in the `CARD_MEMBER_AGREEMENT` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        rewards_disclosure_post_terms_tracking_token:
          description: |-
            The tracking token of the Rewards Disclosure Post-terms.

            This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_POST_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        terms_schedule_tracking_token:
          description: |-
            The tracking token of the Terms Schedule.

            This is the `tracking_token` returned in the `TERMS_SCHEDULE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        token:
          description: Main identifier of the resource, also used as the idempotency
            key on the request.
          maxLength: 36
          type: string
      required:
        - application_state
      type: object
    ApplicationTransitionResponse:
      description: Contains information on the transition of an application's state.
      properties:
        application_token:
          description: Unique identifier of the application whose state you transitioned.
          maxLength: 36
          type: string
        created_time:
          description: Date and time when the application changed states on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        original_status:
          $ref: '#/components/schemas/ApplicationResourceState'
        status:
          $ref: '#/components/schemas/ApplicationResourceState'
        token:
          description: Unique identifier of the transition of an application's state.
          maxLength: 36
          type: string
      type: object
    ApplicationsResponse:
      properties:
        account_token:
          description: |-
            Unique identifier of the credit account for which the user is applying.

            Returned when retrieving an application in the `APPROVED` state.
          type: string
        any_non_taxable_income:
          description: A value of `true` indicates that the user has a non-taxable
            income source.
          type: boolean
        application_accepted_at:
          description: |-
            Date and time when the application was accepted on the Marqeta platform, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        application_canceled_at:
          description: Date and time when the application was canceled on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        benefits_disclosure_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Benefits Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        bundle_token:
          description: Unique identifier of the bundle associated with the application.
          type: string
        card_membership_agreement_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Card Membership Agreement, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        created_date:
          description: Date and time when the application was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        decision_model:
          $ref: '#/components/schemas/DecisionsResponse'
        decision_token:
          description: Unique identifier of the decision made on the application.
          type: string
        device_data:
          $ref: '#/components/schemas/DeviceData'
        e_disclosure_accepted_at:
          description: |-
            Date and time when Marqeta accepted the e-Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        error_details:
          $ref: '#/components/schemas/ErrorDetailsResponse'
        monthly_mortgage_or_rent:
          description: Monthly amount of the mortgage or rent that the user currently
            pays.
          type: number
        primary_income_source:
          description: Whether the primary income source comes from the user being
            employed, unemployed, self-employment, or another situation.
          enum:
            - EMPLOYED
            - UNEMPLOYED
            - SELF_EMPLOYED
            - OTHER
          type: string
        privacy_policy_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Privacy Policy, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        residence_type:
          description: Whether the user owns or rents their residence, or has another
            situation.
          enum:
            - OWN
            - RENT
            - OTHER
          type: string
        rewards_disclosure_post_terms_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Rewards Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        rewards_disclosure_pre_terms_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Rewards Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        soct_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Summary of Credit Terms (SOCT), in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/ApplicationResourceState'
        term_schedule_information_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Terms Schedule, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        token:
          description: Unique identifier of the application.
          type: string
        total_annual_income:
          description: The total amount of the user's annual income.
          type: number
        updated_date:
          description: Date and time when the application was last updated on the
            Marqeta platform, in UTC.
          format: date-time
          type: string
        user_token:
          description: Unique identifier of the applicant, the user applying for a
            credit account.
          type: string
      required:
        - account_token
        - bundle_token
        - created_date
        - e_disclosure_accepted_at
        - privacy_policy_accepted_at
        - rewards_disclosure_pre_terms_accepted_at
        - soct_accepted_at
        - state
        - token
        - updated_date
        - user_token
      type: object
    ApplicationsTransitionPage:
      description: Contains information on application transitions.
      properties:
        count:
          description: Number of resources to retrieve.
          type: integer
        data:
          description: An array of application transition objects.
          items:
            $ref: '#/components/schemas/ApplicationTransitionResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AprScheduleCreateReq:
      properties:
        schedule:
          description: Contains one or more `schedule` objects, which contain information
            on the annual percentage rates (APRs) associated with the type of balance
            on the credit account and when they are effective.
          items:
            $ref: '#/components/schemas/AprScheduleEntryCreateReq'
          type: array
        type:
          $ref: '#/components/schemas/AccountAprType'
      required:
        - schedule
        - type
      type: object
    AprScheduleEntryCreateReq:
      properties:
        margin:
          description: |-
            The number of percentage points added to the prime rate, used to calculate a variable value.

            Used for variable values only.
          format: float
          type: number
        type:
          default: FIXED
          description: Indicates whether the APR value is fixed or variable.
          enum:
            - FIXED
            - VARIABLE
          type: string
        value:
          description: |-
            Percentage value of the APR.

            If the APR type is `FIXED`, this is the value of the fixed rate.
            If the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.

            When backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date.
          maximum: 100
          minimum: 0
          type: number
      required:
        - value
      type: object
    AprScheduleEntryResponse:
      properties:
        apply_next_cycle:
          default: false
          description: Whether the APR is ignored for the current billing cycle and
            applied on the next.
          type: boolean
        effective_date:
          description: Date and time when the APR becomes effective.
          format: date-time
          type: string
        margin:
          description: |-
            The number of percentage points added to the prime rate, used to calculate a variable value.

            Used for variable values only.
          format: float
          type: number
        type:
          default: FIXED
          description: Indicates whether the APR value is fixed or variable.
          enum:
            - FIXED
            - VARIABLE
          type: string
        value:
          description: |-
            Percentage value of the APR.

            If the APR type is `FIXED`, this is the value of the fixed rate.
            If the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.

            When backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date.
          maximum: 100
          minimum: 0
          type: number
      required:
        - value
      type: object
    AprScheduleEntryUpdateReq:
      properties:
        apply_next_cycle:
          default: false
          description: Whether the APR can be ignored for the current billing cycle
            and applied on the next.
          type: boolean
        effective_date:
          description: |-
            Date and time when the APR becomes effective.

            If you do not include a date-time value, the system uses the date and time when the API request was received.

            *NOTE:*
            When passing multiple `schedule` objects, this field is required in all objects but the first.
            If you do not include `effective_date` in the first `schedule`, the system uses the date and time when the API request was received.
          format: date-time
          type: string
        margin:
          description: |-
            The number of percentage points added to the prime rate, used to calculate a variable value.

            Used for variable values only.
          format: float
          type: number
        type:
          default: FIXED
          description: Indicates whether the APR value is fixed or variable.
          enum:
            - FIXED
            - VARIABLE
          type: string
        value:
          description: |-
            Percentage value of the APR.

            If the APR type is `FIXED`, this is the value of the fixed rate.
            If the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.

            When backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date.
          maximum: 100
          minimum: 0
          type: number
      required:
        - value
      type: object
    AprScheduleResponse:
      properties:
        active:
          description: Whether the APR is active.
          type: boolean
        created_date:
          description: Date and time when the APR was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        schedule:
          description: Contains one or more `schedule` objects, which contain information
            about the annual percentage rates (APRs) associated with the type of balance
            on the credit account and when they are effective.
          items:
            $ref: '#/components/schemas/AprScheduleEntryResponse'
          minItems: 1
          type: array
        type:
          $ref: '#/components/schemas/AccountAprType'
        updated_date:
          description: Date and time when the APR was last updated on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
      required:
        - schedule
        - type
      type: object
    AprScheduleUpdateReq:
      properties:
        schedule:
          description: Contains one or more `schedule` objects, which contain information
            about the annual percentage rates (APRs) associated with the type of balance
            on the credit account and when they are effective.
          items:
            $ref: '#/components/schemas/AprScheduleEntryUpdateReq'
          type: array
        type:
          $ref: '#/components/schemas/AccountAprType'
      required:
        - schedule
        - type
      type: object
    AuthControlExemptMidsListResponse:
      properties:
        count:
          description: |-
            Number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of objects in a returned resource.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/auth_control_exempt_mids_response'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    AuthControlListResponse:
      properties:
        count:
          description: |-
            Number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of objects in a returned resource.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/auth_control_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    Authentication:
      description: Contains the cardholder's email address and password information.
      properties:
        email_verified:
          default: false
          description: Specifies whether the email address has been verified.
          type: boolean
        email_verified_time:
          description: Date and time when the email address was verified.
          format: date-time
          type: string
        last_password_update_channel:
          description: Specifies the channel through which the password was last changed.
          enum:
            - USER_CHANGE
            - USER_RESET
          type: string
        last_password_update_time:
          description: Date and time when the password was last changed.
          format: date-time
          type: string
      type: object
    AutoReloadListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are objects in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of auto reload objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/auto_reload_response_model'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are objects in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are objects in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are objects in your returned array.
          format: int32
          type: integer
      type: object
    BalanceType:
      description: |-
        Type of balance.

        * `PURCHASE` - The balance on purchases.
      enum:
        - PURCHASE
      type: string
    BankTransferListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          description: An array of ACH transfer objects.
          items:
            $ref: '#/components/schemas/bank_transfer_response_model'
          type: array
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned
            array.
          format: int32
          type: integer
      type: object
    BankTransferTransitionListResponse:
      properties:
        count:
          description: The number of resources retrieved.
          format: int32
          type: integer
        data:
          description: An array of ACH transfer transition objects.
          items:
            $ref: '#/components/schemas/bank_transfer_transition_response_model'
          type: array
        end_index:
          description: The sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: The sort order index of the first resource in the returned
            array.
          format: int32
          type: integer
      type: object
    BillingAddress:
      properties:
        address:
          type: string
        compressed_zip:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        zip:
          type: string
      type: object
    BulkCardOrderListResponse:
      properties:
        count:
          description: |-
            Number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of bulk issuance objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/bulk_issuance_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    BundleCreateReq:
      description: Contains information on a bundle.
      properties:
        apr_policy_token:
          description: Unique identifier of the APR policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        credit_product_policy_token:
          description: Unique identifier of the credit product policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        description:
          description: Description of the bundle.
          type: string
        document_policy_token:
          description: Unique identifier of the document policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        fee_policy_token:
          description: Unique identifier of the fee policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        name:
          description: Name of the bundle.
          type: string
        offer_policy_token:
          description: Unique identifier of the offer policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        reward_policy_token:
          description: Unique identifier of the reward policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
        token:
          description: Unique identifier of the bundle.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - apr_policy_token
        - credit_product_policy_token
        - description
        - document_policy_token
        - fee_policy_token
        - name
        - status
      type: object
    BundleResourceStatus:
      description: |-
        Status of the bundle.

        * `DRAFT` - The bundle is in the process of being created.
        * `PENDING_APPROVAL` - The bundle has been created and is awaiting approval.
        * `SENT_FOR_REVISION` - The bundle has been returned for revision.
        * `ACTIVE` - The bundle is active.
        * `REJECTED` - The bundle has been rejected; this status cannot be changed.
        * `ARCHIVED` - The previously active bundle has been archived.
        * `APPROVED` - The bundle has been approved (after having been sent for approval).
      enum:
        - DRAFT
        - PENDING_APPROVAL
        - SENT_FOR_REVISION
        - ACTIVE
        - REJECTED
        - ARCHIVED
        - APPROVED
      type: string
    BundleResponse:
      description: Contains information on a bundle.
      properties:
        apr_policy_detail:
          $ref: '#/components/schemas/PolicyAprResponse'
        apr_policy_token:
          description: Unique identifier of the bundle's APR policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        created_time:
          description: Date and time when the bundle was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        credit_product_policy_detail:
          $ref: '#/components/schemas/PolicyProductResponse'
        credit_product_policy_token:
          description: Unique identifier of the bundle's credit product policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        description:
          description: Description of the bundle.
          type: string
        document_policy_detail:
          $ref: '#/components/schemas/PolicyDocumentResponse'
        document_policy_token:
          description: Unique identifier of the bundle's document policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        fee_policy_detail:
          $ref: '#/components/schemas/PolicyFeeResponse'
        fee_policy_token:
          description: Unique identifier of the bundle's fee policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        name:
          description: Name of the bundle.
          type: string
        offer_policy_detail:
          $ref: '#/components/schemas/PolicyOfferResponse'
        offer_policy_token:
          description: Unique identifier of the bundle's offer policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        reward_policy_detail:
          $ref: '#/components/schemas/PolicyRewardResponse'
        reward_policy_token:
          description: Unique identifier of the bundle's reward policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
        token:
          description: Unique identifier of the bundle.
          maxLength: 36
          type: string
        updated_time:
          description: Date and time when the bundle was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      type: object
    BundleResponsePage:
      description: Returns paginated bundles.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more bundles.
          items:
            $ref: '#/components/schemas/BundleResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    BundleTransitionReq:
      description: Contains information on a bundle transition.
      properties:
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
      required:
        - status
      type: object
    BundleTransitionResponse:
      description: Contains information on a bundle transition.
      properties:
        bundle_token:
          description: Unique identifier of the bundle.
          maxLength: 36
          type: string
        created_time:
          description: Date and time when the bundle was changed the status on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        original_status:
          $ref: '#/components/schemas/BundleResourceStatus'
        status:
          $ref: '#/components/schemas/BundleResourceStatus'
        token:
          description: Unique identifier of the bundle transition.
          maxLength: 36
          type: string
      type: object
    BundleUpdateReq:
      description: Specifies bundles for a credit program.
      properties:
        apr_policy_token:
          description: Unique identifier of the bundle's APR policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        credit_product_policy_token:
          description: Unique identifier of the bundle's credit product policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        description:
          description: Description of the bundle.
          type: string
        document_policy_token:
          description: Unique identifier of the bundle's document policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        fee_policy_token:
          description: Unique identifier of the bundle's fee policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        name:
          description: Name of the bundle.
          type: string
        offer_policy_token:
          description: Unique identifier of the bundle's offer policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        reward_policy_token:
          description: Unique identifier of the bundle's reward policy.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - apr_policy_token
        - credit_product_policy_token
        - description
        - document_policy_token
        - fee_policy_token
        - name
      type: object
    BusinessCardHolderListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of business objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/business_cardholder'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    BusinessTransitionListResponse:
      properties:
        count:
          description: |-
            The number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of business transition objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/BusinessTransitionResponse'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    BusinessTransitionRequest:
      properties:
        business_token:
          description: Unique identifier of the business whose status you want to
            transition.
          type: string
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        idempotentHash:
          description: Unique hashed value that identifies subsequent submissions
            of the business transition request.
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:

            *00:* Object activated for the first time.

            *01:* Requested by you.

            *02:* Inactivity over time.

            *03:* This address cannot accept mail or the addressee is unknown.

            *04:* Negative account balance.

            *05:* Account under review.

            *06:* Suspicious activity was identified.

            *07:* Activity outside the program parameters was identified.

            *08:* Confirmed fraud was identified.

            *09:* Matched with an Office of Foreign Assets Control list.

            *10:* Card was reported lost.

            *11:* Card information was cloned.

            *12:* Account or card information was compromised.

            *13:* Temporary status change while on hold/leave.

            *14:* Initiated by Marqeta.

            *15:* Initiated by issuer.

            *16:* Card expired.

            *17:* Failed KYC.

            *18:* Changed to `ACTIVE` because information was properly validated.

            *19:* Changed to `ACTIVE` because account activity was properly validated.

            *20:* Change occurred prior to the normalization of reason codes.

            *21:* Initiated by a third party, often a digital wallet provider.

            *22:* PIN retry limit reached.

            *23:* Card was reported stolen.

            *24:* Address issue.

            *25:* Name issue.

            *26:* SSN issue.

            *27:* DOB issue.

            *28:* Email issue.

            *29:* Phone issue.

            *30:* Account/fulfillment mismatch.

            *31:* Other reason.
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        status:
          description: Specifies the new status of the business.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: |-
            Unique identifier of the business transition.

            If you do not include a token, the system generates one automatically.
            This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.
            This value cannot be updated.
          type: string
      required:
        - business_token
        - channel
        - reason_code
        - status
      type: object
    BusinessTransitionResponse:
      properties:
        business_token:
          description: Unique identifier of the business whose status you want to
            transition.
          type: string
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:

            *00:* Object activated for the first time.

            *01:* Requested by you.

            *02:* Inactivity over time.

            *03:* This address cannot accept mail or the addressee is unknown.

            *04:* Negative account balance.

            *05:* Account under review.

            *06:* Suspicious activity was identified.

            *07:* Activity outside the program parameters was identified.

            *08:* Confirmed fraud was identified.

            *09:* Matched with an Office of Foreign Assets Control list.

            *10:* Card was reported lost.

            *11:* Card information was cloned.

            *12:* Account or card information was compromised.

            *13:* Temporary status change while on hold/leave.

            *14:* Initiated by Marqeta.

            *15:* Initiated by issuer.

            *16:* Card expired.

            *17:* Failed KYC.

            *18:* Changed to `ACTIVE` because information was properly validated.

            *19:* Changed to `ACTIVE` because account activity was properly validated.

            *20:* Change occurred prior to the normalization of reason codes.

            *21:* Initiated by a third party, often a digital wallet provider.

            *22:* PIN retry limit reached.

            *23:* Card was reported stolen.

            *24:* Address issue.

            *25:* Name issue.

            *26:* SSN issue.

            *27:* DOB issue.

            *28:* Email issue.

            *29:* Phone issue.

            *30:* Account/fulfillment mismatch.

            *31:* Other reason.
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        status:
          description: Specifies the status of the business.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: Unique identifier of the business transition.
          type: string
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
    BusinessUserCardHolderListResponse:
      properties:
        count:
          description: |-
            Number of user resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of user objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/user_card_holder_response'
          type: array
        end_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CalculationType:
      description: |-
        Type of calculation for the reward.

        * `NET_BALANCE` - The reward is calculated based on the net balance for a billing cycle, which is the total amount spent during a billing cycle, minus any refunds or disputes.
      enum:
        - NET_BALANCE
      type: string
    CardCreateReq:
      description: Information to create a credit card.
      properties:
        activation_actions:
          $ref: '#/components/schemas/ActivationActions'
        card_product_token:
          description: Unique identifier of the associated card product.
          type: string
        expiration_offset:
          $ref: '#/components/schemas/ExpirationOffset'
        new_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card) with a new primary account number (PAN).

            This field reissues a card with a new PAN from the specified source card. The source card is automatically terminated when the card is reissued with the new PAN. Use this field when reissuing a lost or stolen card.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        reissue_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card).

            This field reissues a card by copying the PAN and PIN from the specified source card to the newly created card.
            The reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.

            *NOTE:* By default, the source card is automatically terminated when the reissued card is activated.
            However, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`.
          maxLength: 36
          type: string
        token:
          description: Unique identifier of the credit card.
          pattern: (?!^ +$)^.+$
          type: string
        translate_pin_from_card_token:
          description: |-
            Copies the PIN from the specified card to the newly created card.

            Both cards must belong to the same user. This field is not allowed if `reissue_pan_from_card_token` is set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          type: string
        user_token:
          description: Unique identifier of the credit cardholder.
          type: string
      required:
        - card_product_token
        - user_token
      type: object
    CardFulfillmentRequest:
      description: Specifies certain physical characteristics of a card, as well as
        shipment information.
      properties:
        card_fulfillment_reason:
          description: Reason for card fulfillment.
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/shipping'
      required:
        - card_personalization
      type: object
    CardFulfillmentResponse:
      description: Determines physical characteristics of a card and shipment information.
      properties:
        card_fulfillment_reason:
          description: Descriptive reason for the card fulfillment.
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/ShippingInformationResponse'
      required:
        - card_personalization
      type: object
    CardListResponse:
      properties:
        count:
          description: |-
            The number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of card objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/card_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardProductListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of card product objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/card_product_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardResponse:
      description: Information about a credit card.
      properties:
        account_token:
          description: Unique identifier of the associated credit account.
          maxLength: 36
          type: string
        created_time:
          description: Date and time when the card was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the credit card.
          type: string
        updated_time:
          description: Date and time when the card was last modified on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        user_token:
          description: Unique identifier of the credit cardholder.
          type: string
      required:
        - account_token
        - created_time
        - token
        - updated_time
        - user_token
      type: object
    CardTransitionListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of card transition objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/card_transition_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardholderAddressListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of address objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/CardholderAddressResponse'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardholderAddressResponse:
      description: Contains information about the billing address of the funding source.
      properties:
        active:
          default: false
          description: Whether the address is active.
          type: boolean
        address_1:
          description: Street address of the funding source.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: |-
            Additional address information for the funding source.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        business_token:
          description: |-
            Unique identifier of the business account holder associated with the address.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        city:
          description: City of the funding source.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the funding source.
          maxLength: 40
          minLength: 1
          type: string
        created_time:
          description: Date and time when the address was created, in UTC.
          format: date-time
          type: string
        first_name:
          description: First name of the account holder associated with the funding
            source.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: Whether this address is the default address used by the funding
            source.
          type: boolean
        last_modified_time:
          description: |-
            Date and time when the address was last modified, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        last_name:
          description: Last name of the account holder associated with the funding
            source.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: |-
            Phone number of the funding source.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the funding source.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For the complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: Unique identifier of the `funding_source_address` object.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder associated with the address.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          description: United States ZIP code of the funding source.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address_1
        - city
        - country
        - created_time
        - first_name
        - last_modified_time
        - last_name
        - postal_code
        - state
        - token
        - zip
      type: object
    ClearingModel:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        force_post:
          default: false
          type: boolean
        is_refund:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          items:
            $ref: '#/components/schemas/network_fee_model'
          type: array
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - original_transaction_token
      type: object
    CommandoModeListResponse:
      properties:
        count:
          description: |-
            Number of Commando Mode control sets to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of Commando Mode control set objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/commando_mode_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CommandoModeTransitionListResponse:
      properties:
        count:
          description: Number of Commando Mode control set transition objects to retrieve.
          format: int32
          type: integer
        data:
          description: Array of Commando Mode control set transition objects.
          items:
            $ref: '#/components/schemas/commando_mode_transition_response'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: Value of `true` indicates that more unreturned resources exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int32
          type: integer
      type: object
    ConfigFeeScheduleEntry:
      description: Contains information on a fee schedule.
      properties:
        effective_date:
          description: Date the fee becomes effective.
          format: date-time
          type: string
        method:
          $ref: '#/components/schemas/FeeMethod'
        value:
          description: Amount of the fee.
          maximum: 9999.9999
          minimum: 0
          type: number
      required:
        - method
        - value
      type: object
    ConfigFeeScheduleReq:
      description: Contains information relevant to configuring fees.
      properties:
        schedule:
          description: Contains one or more fee schedules.
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleEntry'
          type: array
        type:
          $ref: '#/components/schemas/AccountProductFeeType'
      required:
        - schedule
        - type
      type: object
    ConfigFeeScheduleResponse:
      description: Contains information returned when configuring fees.
      properties:
        active:
          description: Whether the fee is active.
          type: boolean
        created_date:
          description: Date and time when the fee was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        schedule:
          description: Contains one or more fee schedules.
          items:
            $ref: '#/components/schemas/ConfigFeeScheduleEntry'
          type: array
        type:
          $ref: '#/components/schemas/AccountProductFeeType'
        updated_date:
          description: Date and time when the fee was last updated on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
      type: object
    CreateApplicationsRequest:
      properties:
        any_non_taxable_income:
          description: |-
            A value of `true` indicates that the user has a non-taxable income source.

            Required when retrieving an application.
          type: boolean
        bundle_token:
          description: Unique identifier of the bundle associated with the application.
          maxLength: 36
          type: string
        device_data:
          $ref: '#/components/schemas/DeviceData'
        e_disclosure_tracking_token:
          description: |-
            The tracking token of the eDisclosure.

            This is the `tracking_token` returned in the `E_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        monthly_mortgage_or_rent:
          description: |-
            Monthly amount of the mortgage or rent that the user currently pays.

            Required when retrieving an application.
          maximum: 99999.99
          minimum: 0
          type: number
        primary_income_source:
          description: |-
            Whether the primary income source comes from the user being employed, unemployed, self-employment, or another situation.

            Required when retrieving an application.
          enum:
            - EMPLOYED
            - UNEMPLOYED
            - SELF_EMPLOYED
            - OTHER
          type: string
        privacy_policy_tracking_token:
          description: |-
            The tracking token of the Privacy Policy.

            This is the `tracking_token` returned in the `PRIVACY_POLICY` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        residence_type:
          description: |-
            Whether the user owns or rents their residence, or has another situation.

            Required when retrieving an application.
          enum:
            - OWN
            - RENT
            - OTHER
          type: string
        rewards_disclosure_pre_terms_tracking_token:
          description: |-
            The tracking token of the Rewards Disclosure Pre-terms.

            This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        soct_tracking_token:
          description: |-
            The tracking token of the Summary of Credit Terms (SOCT).

            This is the `tracking_token` returned in the `SOCT` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        token:
          description: Unique identifier of the application.
          maxLength: 36
          type: string
        total_annual_income:
          description: |-
            The total amount of the user's annual income.

            Required when retrieving an application.
          maximum: 9.999999999E7
          minimum: 0
          type: number
        user_token:
          description: Unique identifier of the applicant, the user applying for a
            credit account.
          maxLength: 36
          type: string
      required:
        - any_non_taxable_income
        - bundle_token
        - e_disclosure_tracking_token
        - monthly_mortgage_or_rent
        - primary_income_source
        - privacy_policy_tracking_token
        - residence_type
        - rewards_disclosure_pre_terms_tracking_token
        - soct_tracking_token
        - total_annual_income
        - user_token
      type: object
    CreateRedemptionTransitionsRequest:
      properties:
        external_settlement_date_time:
          description: |-
            Date and time when the reward redemption was settled on your external platform.

            Pass this field if you handle the reward redemption outside of Marqeta's credit platform.
          format: date-time
          type: string
        new_state:
          $ref: '#/components/schemas/RedemptionStatus'
      required:
        - new_state
      type: object
    CreateRedemptionsRequest:
      properties:
        amount:
          description: Amount of the reward redemption.
          exclusiveMinimum: true
          format: decimal
          minimum: 0.0
          type: number
        destination:
          $ref: '#/components/schemas/DestinationType'
        note:
          description: A note explaining why the reward is being redeemed.
          type: string
        receiving_account_token:
          description: |-
            Unique identifier of the external account receiving the reward redemption.
            This token is equivalent to the <</core-api/payment-sources, payment source>> token.
          maxLength: 36
          type: string
        token:
          description: Unique identifier of the reward redemption.
          maxLength: 36
          type: string
        type:
          $ref: '#/components/schemas/RedemptionType'
      required:
        - amount
        - type
      type: object
    CreateRewardProgramsEntriesRequest:
      properties:
        created_time:
          description: Date and time when the reward entry was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        note:
          description: A note explaining why the reward entry is being created manually.
          type: string
        value:
          description: Value of the reward granted to the account.
          format: decimal
          type: number
      required:
        - note
        - value
      type: object
    CreditBureau:
      description: Contains information on the credit bureau.
      properties:
        address:
          $ref: '#/components/schemas/CreditBureauAddress'
        name:
          description: Name of the credit bureau used to obtain the user's credit
            data.
          type: string
        phone_number:
          description: Phone number of the credit bureau.
          example: '5555555555'
          type: string
        website:
          description: Website of the credit bureau.
          type: string
      required:
        - address
        - name
        - phone_number
        - website
      type: object
    CreditBureauAddress:
      description: Contains information on the address of the credit bureau.
      properties:
        address1:
          description: Street address.
          type: string
        address2:
          description: Additional address information.
          type: string
        city:
          description: Address city.
          type: string
        state:
          description: Address state.
          type: string
        zip:
          description: Address ZIP code.
          type: string
      required:
        - address1
        - city
        - state
        - zip
      type: object
    CurrencyCode:
      default: USD
      description: A valid three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
        4217 currency code, window="_blank"]
      enum:
        - USD
      type: string
    CycleType:
      description: |-
        Type of cycle.

        * `BEGINNING_REVOLVING` - Account is beginning to revolve and just started carrying a balance
        from the previous month.
        * `REVOLVING` - Account is revolving and has been carrying a balance from month to month for more than one month.
        * `END_REVOLVING` - Account is no longer revolving and the previous month's balance is paid off.
        * `TRANSACTING` - Account is not revolving and the balance is paid off each month.
      enum:
        - BEGINNING_REVOLVING
        - REVOLVING
        - END_REVOLVING
        - TRANSACTING
      type: string
    DDARequest:
      properties:
        dda:
          type: string
      required:
        - dda
      type: object
    DecisionsResponse:
      allOf:
        - $ref: '#/components/schemas/PostDecisionsResponse'
      description: |-
        Contains information on the decision model returned by the issuing bank if a decision has been rendered.

        Returned when retrieving an application after a decision has been rendered.
      properties:
        adverse_action_template_code:
          description: |-
            Indicates the version of the Notice of Adverse Action (NOAA) template used.
            Can have these possible values:

            * `AA0` - score denial with score disclosure
            * `AA1` - individual reason with score disclosure
            * `AA2` - individual reason without score disclosure
            * `AA3` - locked and frozen
            * `AA4` - fraud related
          type: string
        card_product_level:
          description: The tier of the card product.
          enum:
            - PREMIUM
            - TRADITIONAL
          type: string
        created_date:
          description: Date and time when the decision model was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        credit_bureau:
          $ref: '#/components/schemas/CreditBureau'
        credit_limit:
          description: The maximum line of credit extended to the user, also the maximum
            balance the credit account can carry.
          format: int32
          type: integer
        credit_score:
          description: The user's credit score.
          format: int32
          type: integer
        credit_score_date:
          description: Date and time when the credit score went into effect.
          format: date
          type: string
        decision_date:
          description: Date and time when the decision on the application was rendered,
            in UTC.
          format: date-time
          type: string
        denial_reasons:
          description: An array of reasons that explain why the application was declined.
          example:
            - CREDIT SCORE BELOW MINIMUM
            - PRIOR BANKRUPTCY
          items:
            type: string
          type: array
        expire_date:
          description: Date when the decision model expires.
          format: date
          type: string
        margin:
          description: Number of percentage points added to the prime rate, used to
            calculate the purchase APR.
          format: decimal
          type: number
        prime_rate:
          description: The current prime rate set by the Fed.
          format: decimal
          type: number
        purchase_apr:
          description: The purchase APR approved for the user.
          format: decimal
          type: number
        received_best_rate:
          description: |-
            A value of `true` indicates that the user received the credit product's best APR.

            If `false`, you must display to the user the following: `score_factors`, `credit_score`, `credit_score_date`, `credit_bureau`, `score_range`.
          type: boolean
        score_factors:
          description: Factors that the bureau used to determine the user's credit
            score.
          example:
            - TOO FEW ACCOUNTS CURRENTLY PAID AS AGREED
            - LACK OF RECENT INSTALLMENT LOAN INFORMATION
            - TOO MANY ACCOUNTS WITH BALANCES
            - LENGTH OF TIME REVOLVING ACCOUNTS HAVE BEEN ESTABLISHED
          items:
            type: string
          type: array
        score_range:
          description: The range in which the user's credit score falls.
          type: string
      type: object
    DelinquencyBucketResponse:
      description: |-
        One or more delinquency buckets for an account.
        Each delinquency bucket represents a billing cycle during which the account was delinquent.
      properties:
        bucket_number:
          description: |-
            Delinquency bucket number in the returned array.
            Delinquency buckets are returned from most recent to least; the most recent delinquency bucket is `1`.
          type: integer
        current_due:
          description: Current amount that is due for this delinquency bucket.
          type: number
        days_past_due:
          description: Total number of days that the payment is past due for this
            delinquency bucket.
          type: integer
        past_due_carried_forward:
          description: Amount that is past due and carried forward from previous delinquency
            buckets.
          type: number
        payment_due_date:
          description: Date that the payment was due for this delinquency bucket.
          format: date-time
          type: string
        total_due:
          description: Total amount that is due for this delinquency bucket; the sum
            of `past_due_carried_forward` and `current_due`.
          type: number
      required:
        - bucket_number
        - current_due
        - days_past_due
        - past_due_carried_forward
        - payment_due_date
        - total_due
      type: object
    DelinquencyStateResponse:
      description: Contains details of the delinquency state of an account.
      properties:
        account_token:
          description: Unique identifier of the credit account.
          format: string
          type: string
        buckets:
          description: |-
            One or more delinquency buckets for an account.
            Each delinquency bucket represents a billing cycle during which the account was delinquent.
          items:
            $ref: '#/components/schemas/DelinquencyBucketResponse'
          type: array
        current_due:
          description: Amount that is due for the current billing cycle.
          type: number
        date_account_current:
          description: |-
            Date and time when the account was last made current on the Marqeta platform, in UTC.

            If the account was never delinquent, this field returns the date and time the account was created on the Marqeta platform, in UTC.

            If `is_delinquent` is `true`, a null value is returned.
          format: date-time
          nullable: true
          type: string
        date_account_delinquent:
          description: |-
            Date and time when the account last fell delinquent on the Marqeta platform, in UTC.

            If `is_delinquent` is `false`, a null value is returned.
          format: date-time
          nullable: true
          type: string
        is_delinquent:
          description: A value of `true` indicates that the account is currently delinquent.
          type: boolean
        total_days_past_due:
          description: Total number of days that the account is past due.
          type: integer
        total_due:
          description: Total amount that is due for the current billing cycle; the
            sum of `total_past_due_amount` and `current_due_amount`.
          type: number
        total_past_due:
          description: Total amount that is past due.
          type: number
      required:
        - account_token
        - current_due
        - is_delinquent
        - total_days_past_due
        - total_due
        - total_past_due
      type: object
    DelinquencyStatus:
      description: Delinquency status of an account.
      enum:
        - CURRENT
        - DELINQUENT
      type: string
    DelinquencyTransitionResponse:
      description: Contains details of the delinquency transition for an account.
      properties:
        account_token:
          description: Unique identifier of the credit account.
          format: string
          type: string
        created_time:
          description: Date and time when the delinquency transition was created on
            Marqeta's credit platform, in UTC.
          format: date-time
          type: string
        impact_time:
          description: Date and time when the event that caused the transition impacted
            the account, in UTC.
          format: date-time
          type: string
        is_invalidated:
          description: |-
            A value of `true` indicates that the system invalidated the delinquency transition.

            This is a temporary field that allows Marqeta to handle occasional cases of out-of-order processing.
            This can occur when two delinquency transition webhooks are sent near-simultaneously.

            For example, if a credit and a payment that bring an account current are made around the same time, two delinquency transitions are sent very close together.
            In these cases, one of the transitions is rolled back and invalidated.
            For the transition that is rolled back, `is_invalidated` is `true` and the transition should be ignored.

            This field is temporary and to be deprecated when out-of-order processing is addressed in a future release.
          type: boolean
        original_status:
          $ref: '#/components/schemas/DelinquencyStatus'
        status:
          $ref: '#/components/schemas/DelinquencyStatus'
        token:
          description: Unique identifier of the delinquency transition.
          format: string
          type: string
      required:
        - account_token
        - created_time
        - impact_time
        - is_invalidated
        - original_status
        - status
        - token
      type: object
    DelinquencyTransitionsResponsePage:
      description: Returns paginated information for multiple delinquency state transitions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of delinquency transitions.
          items:
            $ref: '#/components/schemas/DelinquencyTransitionResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    DepositAccountUpdateRequest:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
      type: object
    DepositDepositResponse:
      description: Contains information about a direct deposit.
      properties:
        amount:
          description: Amount being debited or credited.
          type: number
        business_token:
          description: The unique identifier of the `business` account holder.
          type: string
        company_discretionary_data:
          description: Company-specific data provided by the direct deposit originator.
          type: string
        company_entry_description:
          description: Company-specific data provided by the direct deposit originator.
          type: string
        company_identification:
          description: Alphanumeric code that identifies the direct deposit originator.
          type: string
        company_name:
          description: Name of the direct deposit originator.
          type: string
        created_time:
          description: Date and time when the direct deposit account was created.
          format: date-time
          type: string
        direct_deposit_account_token:
          description: The unique identifier of the direct deposit account.
          type: string
        individual_identification_number:
          description: Accounting number by which the recipient is known to the direct
            deposit originator.
          type: string
        individual_name:
          description: Name of the direct deposit recipient.
          type: string
        last_modified_time:
          description: Date and time when the direct deposit account was last modified.
          format: date-time
          type: string
        settlement_date:
          description: Date and time when the credit or debit is applied.
          format: date-time
          type: string
        standard_entry_class_code:
          description: Three-letter code identifying the type of entry.
          type: string
        state:
          description: Current status of the direct deposit record.
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        state_reason:
          description: Explanation for why the direct deposit record is in the current
            state.
          type: string
        state_reason_code:
          description: Standard code describing the reason for the current state.
          type: string
        token:
          description: The unique identifier of the direct deposit record.
          type: string
        type:
          description: Determines whether funds are being debited from or credited
            to the account.
          enum:
            - CREDIT
            - DEBIT
          type: string
        user_token:
          description: The unique identifier of the `user` account holder.
          type: string
      type: object
    DestinationType:
      description: |-
        Destination of the reward redemption.

        * `INVESTMENT` - The redemption is paid into an investment account.

        * `WALLET` - The redemption is paid into a digital wallet.

        * `ACH` - The redemption is paid into an ACH account.

        Required for external redemptions.
      enum:
        - INVESTMENT
        - WALLET
        - ACH
      type: string
    DeviceData:
      description: |-
        Contains information on user's device fingerprint.
        Usually obtained through a component embedded in the application.
      properties:
        data:
          description: The data generated by the embedded component.
          type: string
        provider:
          description: The provider of the embedded component.
          type: string
      type: object
    DigitalWalletTokenListResponse:
      properties:
        count:
          description: |-
            Number of resources returned.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of digital wallet token resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/digital_wallet_token'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    DigitalWalletTokenTransitionListResponse:
      properties:
        count:
          description: |-
            Number of resources returned.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of digital wallet token transition resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/digital_wallet_token_transition_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    DirectDepositAccountListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/direct_deposit_account_response'
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DepositDepositResponse'
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositRequest:
      properties:
        account_number:
          type: string
        amount:
          type: number
        company_discretionary_data:
          maxLength: 20
          minLength: 0
          type: string
        company_entry_description:
          maxLength: 10
          minLength: 0
          type: string
        company_identification:
          maxLength: 10
          minLength: 0
          type: string
        company_name:
          maxLength: 16
          minLength: 0
          type: string
        earlyPayEligible:
          default: false
          type: boolean
        individual_identification_number:
          maxLength: 22
          minLength: 0
          type: string
        individual_name:
          maxLength: 35
          minLength: 0
          type: string
        settlement_date:
          format: date-time
          type: string
        standard_entry_class_code:
          maxLength: 3
          minLength: 0
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
        type:
          enum:
            - CREDIT
            - DEBIT
          type: string
      required:
        - account_number
        - amount
        - settlement_date
        - type
      type: object
    DirectDepositTransitionListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DirectDepositTransitionResponse'
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    DirectDepositTransitionRequest:
      properties:
        channel:
          enum:
            - API
            - SYSTEM
            - PROD_SUPPORT
          type: string
        direct_deposit_token:
          type: string
        idempotentHash:
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          enum:
            - R01
            - R02
            - R03
            - R04
            - R06
            - R08
            - R09
            - R10
            - R11
            - R14
            - R15
            - R16
            - R17
            - R18
            - R20
            - R23
            - R24
            - R29
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        token:
          type: string
      required:
        - channel
        - direct_deposit_token
        - reason
        - state
      type: object
    DirectDepositTransitionResponse:
      properties:
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        created_time:
          format: date-time
          type: string
        direct_deposit_account_token:
          type: string
        direct_deposit_token:
          type: string
        reason:
          type: string
        reason_code:
          type: string
        state:
          enum:
            - PENDING
            - APPLIED
            - REVERSED
            - REJECTED
          type: string
        token:
          type: string
        transaction_token:
          type: string
        type:
          type: string
      type: object
    DisputeCategory:
      description: Category to which the dispute belongs.
      enum:
        - FRAUD
        - AUTH
        - PROCESSING_ERROR
        - CONSUMER_DISPUTE
      type: string
    DisputeCreateReq:
      description: Information about a transaction dispute creation request.
      properties:
        amount:
          description: |-
            Amount of the dispute.
            Max value is equal to the value of the original transaction.
          minimum: 0.01
          type: number
        category:
          $ref: '#/components/schemas/DisputeCategory'
        ledger_entry_token:
          description: Unique identifier of the journal entry (`authorization.clearing`
            type only) in dispute.
          format: string
          type: string
        notes:
          description: Additional information on the dispute (for example, a reason
            for the dispute).
          format: string
          maxLength: 750
          type: string
        token:
          description: Unique identifier of the dispute.
          format: string
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount
        - category
        - ledger_entry_token
      type: object
    DisputeModel:
      description: Contains information about a disputed transaction.
      properties:
        case_management_identifier:
          description: The unique identifier of the dispute case.
          type: string
        reason:
          description: The reason for the dispute.
          type: string
      type: object
    DisputeResponse:
      description: Information about a transaction dispute response.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the dispute
            was created.
          format: string
          maxLength: 36
          type: string
        amount:
          description: Amount of the dispute.
          type: number
        category:
          $ref: '#/components/schemas/DisputeCategory'
        created_time:
          description: Date and time when the dispute was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        ledger_entry_token:
          description: Unique identifier of the journal entry (`authorization.clearing`
            type only) in dispute.
          format: string
          type: string
        notes:
          description: Additional information on the dispute (for example, a reason
            for the dispute).
          format: string
          type: string
        resolved_at:
          description: Date and time when the dispute was resolved and no longer in
            `ACTIVE` status.
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        token:
          description: Unique identifier of the dispute.
          format: string
          type: string
        updated_time:
          description: Date and time when the dispute was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - amount
        - category
        - created_time
        - ledger_entry_token
        - status
        - token
        - updated_time
      type: object
    DisputeResponsePage:
      description: Return paginated disputes.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more disputes on a credit account.
          items:
            $ref: '#/components/schemas/DisputeResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    DisputeStatus:
      description: |-
        Status of the dispute.

        * `ACTIVE` - The dispute is active and awaiting resolution.
        * `REVERSED` - The dispute has been reversed and is no longer active.
        * `AH_WON` - The account holder won the dispute.
        * `AH_LOST` - The account holder lost the dispute.
      enum:
        - ACTIVE
        - REVERSED
        - AH_WON
        - AH_LOST
      type: string
    DisputeTransitionReq:
      description: Information about a transaction dispute update request.
      properties:
        amount:
          description: Updated amount of the dispute, based on the resolution.
          type: number
        notes:
          description: Additional information on the dispute update (for example,
            a reason for the dispute update).
          format: string
          maxLength: 750
          type: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        token:
          description: Unique identifier of the dispute update.
          type: string
      required:
        - amount
        - status
      type: object
    DisputeTransitionResponse:
      description: Information about a transaction dispute update request.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the dispute
            was updated.
          type: string
        amount:
          description: Amount of the updated dispute, based on the resolution.
          type: number
        created_time:
          description: Date and time when the dispute update was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        notes:
          description: Additional information on the dispute update (for example,
            a reason for the dispute update).
          format: string
          maxLength: 750
          type: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        token:
          description: Unique identifier of the dispute update.
          type: string
      required:
        - account_token
        - amount
        - created_time
        - status
        - token
      type: object
    DynamicMccType:
      description: Type of dynamic MCC.
      enum:
        - HIGHEST_SPEND
      type: string
    Error:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    ErrorDetailsResponse:
      properties:
        application_token:
          description: Unique identifier of the application.
          maxLength: 36
          type: string
        message:
          description: error details message
          type: string
        token:
          description: Unique identifier of the error details.
          maxLength: 36
          type: string
        type:
          enum:
            - VALIDATION
            - TIMEOUT
            - UPSTREAM
            - DOWNSTREAM
            - UNKNOWN
          type: string
      required:
        - application_token
        - message
        - token
        - type
      type: object
    ExpandObjects:
      enum:
        - DEVICE_DATA
        - INCLUDE_DECISION
        - INCLUDE_ERROR
      type: string
    ExpirationOffset:
      description: |-
        Contains information on how long after the date of issue for when the cards are valid.

        If this field is not specified, the card uses the `config.card_life_cycle.expiration_offset` of the bulk card order or card product as appropriate.
      properties:
        unit:
          description: The units for the `value` field.
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field in this object) that this card is valid.
            In other words, cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS* - Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS* - Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS* - Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS* - No rounding.
          type: integer
      type: object
    FeeListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of fee objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/fee'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    FeeMethod:
      description: Method used to calculate the fee value.
      enum:
        - FLAT
      type: string
    FeeType:
      description: |-
        Type of fee.

        *NOTE:*
        Only `RETURNED_PAYMENT_FEE`, `LATE_PAYMENT_FEE`, `ANNUAL_FEE`, and `MONTHLY_FEE` are currently supported.
        Do not pass other fees types.
      enum:
        - FOREIGN_TRANSACTION_FEE
        - OVER_LIMIT_FEE
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
        - CARD_REPLACEMENT_FEE
        - MINIMUM_INTEREST_FEE
        - MINIMUM_INTEREST_FEE_REVERSAL
        - ANNUAL_FEE
        - MONTHLY_FEE
      type: string
    FileLinks:
      description: Contains links to the file in different formats.
      properties:
        html:
          description: Link to the HTML version of the file.
          type: string
        json:
          description: Link to the JSON version of the file.
          type: string
        pdf:
          description: Link to the PDF version of the file.
          type: string
      type: object
    FileResponse:
      properties:
        file_type:
          $ref: '#/components/schemas/FileType'
        links:
          $ref: '#/components/schemas/FileLinks'
        tracking_token:
          description: |-
            Unique identifier used to acknowledge that the file has been disclosed to the applicant.

            If the file was already disclosed, a null value is returned.

            *NOTE*: The tracking token is only valid for 14 calendar days.
          type: string
      required:
        - file_type
        - links
      type: object
    FileType:
      description: |-
        Type of file.

        * `SOCT` - The Summary of Credit Terms (SOCT), which outlines the interest rates, interest charges, and fees associated with the credit account being offered to the user.
        * `REWARDS_DISCLOSURE_PRE_TERMS` - The Rewards Disclosure Pre-terms, which discloses detailed information about the rewards program on the credit account being offered to the user before a decision is rendered on their application.
        * `REWARDS_DISCLOSURE_POST_TERMS` - The Rewards Disclosure Post-terms, which discloses detailed information about the rewards program on the user's credit account if their application is approved.
        * `BENEFITS_DISCLOSURE` - The Benefits Disclosure, which which is given to a user if their application is approved and discloses detailed information about the benefits on the user's credit account.
        * `CARD_MEMBER_AGREEMENT` - The Card Member Agreement, which specifies the terms and conditions of the user's credit account, including the interest rates, interest charges, fees, minimum payment calculations, and more.
        * `PRIVACY_POLICY` - The Privacy Policy, which explains how the information on the user's application is collected, handled, and processed.
        * `E_DISCLOSURE` - The eDisclosure, which states that the user has agreed to receive disclosures electronically.
        * `TERMS_SCHEDULE` - The Terms Schedule, which is given to a user if their application is approved and specifies the interest rate details on the user's credit account.
        * `NOAA` - The Notice of Adverse Action (NOAA), which is given to a user if their application is declined and informs them of the specific reasons why they were denied a credit account.
      enum:
        - SOCT
        - REWARDS_DISCLOSURE_PRE_TERMS
        - REWARDS_DISCLOSURE_POST_TERMS
        - BENEFITS_DISCLOSURE
        - CARD_MEMBER_AGREEMENT
        - PRIVACY_POLICY
        - E_DISCLOSURE
        - TERMS_SCHEDULE
        - NOAA
      type: string
    FulfillmentAddressResponse:
      description: Specifies a fulfillment shipping or return address.
      properties:
        address1:
          description: |-
            Number and street of the address.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: |-
            City of the address.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: |-
            Country of the address.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: |-
            First name of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: |-
            Last name of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          description: |-
            Middle name of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: |-
            Telephone number of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the address.

            This field is returned if it exists in the resource.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            State or province of the address.

            This field is returned if it exists in the resource.
          maxLength: 32
          minLength: 0
          type: string
        zip:
          description: |-
            United States ZIP code of the address.

            This field is returned if it exists in the resource.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    FulfillmentRequest:
      description: Specifies certain physical characteristics of a card, as well as
        bulk shipment information.
      properties:
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/shipping'
      required:
        - card_personalization
      type: object
    FulfillmentResponse:
      description: |-
        Specifies certain physical characteristics of a card, as well as bulk shipment information.

        This object is returned if it exists in the resource.
      properties:
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        shipping:
          $ref: '#/components/schemas/ShippingInformationResponse'
      required:
        - card_personalization
      type: object
    FundingAccountListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of funding account objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/funding_account_response_model'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    GPAUnloadListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of GPA unload order objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/gpa_returns'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    IdentificationRequestModel:
      description: Contains identifications associated with the cardholder.
      properties:
        expiration_date:
          description: Expiration date of the identification, if applicable.
          type: string
        type:
          description: |-
            Type of identification.

            *NOTE:* Full Social Security Number (SSN) is required for US-based cardholder KYC verification.
            Nine digits only, no delimiters.
            `123456789`, for example.
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          readOnly: true
          type: string
        value:
          description: Number associated with the identification.
          readOnly: true
          type: string
      required:
        - type
      type: object
    IdentificationResponseModel:
      description: Contains identifications associated with the cardholder.
      properties:
        expiration_date:
          description: Expiration date for the identification, if applicable.
          readOnly: true
          type: string
        type:
          description: Type of identification.
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          readOnly: true
          type: string
        value:
          description: Number associated with the identification.
          readOnly: true
          type: string
      type: object
    ImagesCarrier:
      description: Specifies personalized images that appear on the card carrier.
      properties:
        message_1:
          description: Specifies a custom message that appears on the card carrier.
          type: string
        name:
          description: Specifies a PNG image to display on the card carrier.
          type: string
      type: object
    InterestCalculation:
      description: Contains the configurations for interest calculation.
      properties:
        application_of_credits:
          $ref: '#/components/schemas/ApplicationOfCredits'
        day_count:
          description: Day-count convention.
          enum:
            - ACTUAL
          type: string
        exclude_tran_types:
          default:
            - ANNUAL_FEE
            - MONTHLY_FEE
            - LATE_PAYMENT_FEE
            - CASH_BACK_STATEMENT_CREDIT
          description: One or more transactions that are excluded from current billing
            period's interest charge, but included in next.
          items:
            enum:
              - LATE_PAYMENT_FEE
              - ANNUAL_FEE
              - MONTHLY_FEE
              - CASH_BACK_STATEMENT_CREDIT
              - RETURNED_PAYMENT_FEE
            type: string
          type: array
        grace_days_application:
          description: Determines the last day of grace period based on which interest
            charges are calculated.
          enum:
            - NEXT_CYCLE_DATE
          type: string
        interest_application:
          default:
            - PRINCIPAL
            - FEES
          description: One or more balance types on which interest is applied.
          items:
            enum:
              - PRINCIPAL
              - FEES
              - INTEREST
            type: string
          minItems: 1
          type: array
        interest_on_grace_reactivation:
          $ref: '#/components/schemas/InterestOnGraceReactivationEnum'
        method:
          description: Method of interest calculation.
          enum:
            - AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
          type: string
        minimum_interest:
          description: When interest is applied, this value determines the minimum
            amount of interest that can be charged.
          maximum: 9.9999999999999E11
          minimum: 0
          type: number
      required:
        - application_of_credits
        - day_count
        - grace_days_application
        - interest_application
        - interest_on_grace_reactivation
        - method
        - minimum_interest
      type: object
    InterestOnGraceReactivationEnum:
      description: Determines whether to charge or waive interest for the billing
        period when the balance is paid off.
      enum:
        - ACCRUE_FULL_CYCLE
        - ACCRUE_PAYMENT_DATE
        - WAIVE
      type: string
    JournalEntriesPage:
      description: Return filtered transactions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more journal entries on a credit account.
          items:
            $ref: '#/components/schemas/JournalEntry'
          minItems: 1
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    JournalEntry:
      description: Contains information about a journal entry.
      properties:
        account_token:
          description: Unique identifier of the credit account associated with the
            credit card used to make the journal entry.
          format: string
          type: string
        amount:
          description: Amount of the journal entry.
          type: number
        card_token:
          description: Unique identifier of the credit card used to make the journal
            entry.
          format: string
          maxLength: 36
          minLength: 8
          type: string
        created_time:
          description: Date and time when the journal entry was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        detail_object:
          description: |-
            Contains the journal entry's full details.
            The fields returned in this object vary based on the journal entry group.

            The following lists each journal entry group and the specific fields returned for each group.

            * Purchases and refunds: see the <</core-api/transactions#getTransactions, transactions>> response fields.

            * Disputes: see the <</core-api/credit-disputes#retrieveDispute, account disputes response fields.>>

            * Original credit transaction (OCT): see the <</core-api/push-to-card-payments#_create_push_to_card_disbursement, Push-to-Card disbursement>> fields.

            * Rewards: see the <</core-api/credit-account-rewards#createReward, account reward>> response fields.

            * Payments: see the <</core-api/credit-account-payments#retrievePayment, account payment>> response fields.

            * Balance refunds: see the <</core-api/credit-balance-refunds#createBalanceRefund, balance refund>> response fields.

            * Adjustments: see the <</core-api/credit-account-adjustments#retrieveAdjustment, account adjustment>> response fields.

            * Interest and fees: see fields below.
          type: object
        detail_token:
          description: Unique identifier of the journal entry's full details.
          type: string
        dispute_token:
          description: Unique identifier of the dispute, if the journal entry is disputed.
          type: string
        group:
          description: Group to which the journal entry belongs.
          enum:
            - PURCHASE
            - REFUND
            - DISPUTE
            - ORIGINAL_CREDIT
            - INTERNAL
            - FEE
            - REWARD
            - INTEREST
            - PAYMENT
            - ADJUSTMENT
            - BALANCE_TRANSFER
            - CASH_ADVANCE
            - BALANCE_REFUND
          type: string
        id:
          description: Eight-digit numeric identifier of the journal entry, an alternate
            identifier to the UUID that is useful for remembering and referencing.
          maxLength: 8
          minLength: 8
          type: string
        impact_time:
          description: |-
            Date and time when the journal entry impacts the account balance.

            For purchases, this is the time of the authorization.

            For purchase authorization clearings, this is the time when the transaction is settled.
          format: date-time
          type: string
        memo:
          description: Merchant name or description for the journal entry.
          example: Whole Foods Market
          type: string
        related_token:
          description: |-
            Unique identifier of the original journal entry.
            If the current journal entry is the original, this field is returned empty.
          type: string
        request_time:
          description: |-
            For purchases, the date and time of the authorization, which is when the user initiates the journal entry.

            For other journal entry groups, equivalent to `impact_time`.
          format: date-time
          type: string
        root_token:
          description: |-
            Unique identifier of the root journal entry.
            If the current journal entry is the root, this field is returned empty.
          type: string
        status:
          description: |-
            Status of the journal entry when it was initially recorded and had an impact on the balance, either `PENDING` or `POSTED`.
            This field is immutable and may not represent the current status.

            To view the current status of purchases, refunds, OCTs, and payments, see the `detail_object.state` field.
            These journal entries start in `PENDING` and can transition to `CLEARED`, `DECLINED`, or `ERROR`.
            This transition of status is only sent through webhook event notifications.

            Journal entries that are final transactions, such as clearings, start and remain in a `POSTED` state.

            *NOTE*:
            `CLEARED`, `DECLINED`, and `ERROR` are special statuses that do not have an impact on the account balance, and are not recorded in the journal.
            For these special statuses, `impact_time`, `request_time`, `created_time`, `token`, and `id` are returned blank.
          enum:
            - PENDING
            - POSTED
            - DECLINED
            - ERROR
            - CLEARED
          type: string
        token:
          description: Unique identifier of the journal entry.
          type: string
        type:
          description: The journal entry event type.
          example: '`authorization.clearing`'
          type: string
        user_token:
          description: Unique identifier of the credit user.
          type: string
      required:
        - account_token
        - amount
        - card_token
        - created_time
        - currency_code
        - detail_token
        - group
        - id
        - impact_time
        - memo
        - request_time
        - status
        - token
        - type
        - user_token
      type: object
    KYCListResponse:
      properties:
        count:
          description: |-
            Number of resources in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of KYC verification response objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/kyc_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    LedgerEntriesPage:
      description: Return filtered transactions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more ledger entries on a credit account.
          items:
            $ref: '#/components/schemas/LedgerEntry'
          minItems: 1
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    LedgerEntry:
      description: Contains information about a ledger entry.
      properties:
        account_token:
          description: Unique identifier of the credit account associated with the
            credit card used to make the ledger entry.
          format: string
          type: string
        amount:
          description: Amount of the ledger entry.
          type: number
        card_token:
          description: Unique identifier of the credit card used to make the ledger
            entry.
          format: string
          maxLength: 36
          minLength: 8
          type: string
        created_time:
          description: Date and time when the ledger entry was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        detail_object:
          description: |-
            Contains the ledger entry's full details.
            The fields returned in this object vary based on the ledger entry group.

            The following lists each ledger entry group and the specific fields returned for each group.

            * Purchases and refunds: see the <</core-api/transactions#getTransactions, transactions>> response fields.

            * Disputes: see the <</core-api/credit-disputes#retrieveDispute, account disputes response fields.>>

            * Original credit transaction (OCT): see the <</core-api/push-to-card-payments#_create_push_to_card_disbursement, Push-to-Card disbursement>> fields.

            * Rewards: see the <</core-api/credit-account-rewards#createReward, account reward>> response fields.

            * Payments: see the <</core-api/credit-account-payments#retrievePayment, account payment>> response fields.

            * Balance refunds: see the <</core-api/credit-balance-refunds#createBalanceRefund, balance refund>> response fields.

            * Adjustments: see the <</core-api/credit-account-adjustments#retrieveAdjustment, account adjustment>> response fields.

            * Interest and fees: see fields below.
          type: object
        detail_token:
          description: Unique identifier of the ledger entry's full details.
          type: string
        dispute_token:
          description: Unique identifier of the dispute, if the ledger entry is disputed.
          type: string
        group:
          description: Group to which the ledger entry belongs.
          enum:
            - PURCHASE
            - INTERNAL
            - FEE
            - REWARD
            - INTEREST
            - PAYMENT
            - ADJUSTMENT
            - BALANCE_TRANSFER
            - CASH_ADVANCE
            - BALANCE_REFUND
            - ORIGINAL_CREDIT
          type: string
        id:
          description: Eight-digit numeric identifier of the ledger entry, an alternate
            identifier to the UUID that is useful for remembering and referencing.
          maxLength: 8
          minLength: 8
          type: string
        impact_time:
          description: |-
            Date and time when the ledger entry impacts the account balance.

            For purchases, this is the time of the authorization.

            For purchase authorization clearings, this is the time when the transaction is settled.
          format: date-time
          type: string
        memo:
          description: Merchant name or description for the ledger entry.
          example: Whole Foods Market
          type: string
        related_token:
          description: |-
            Unique identifier of the original ledger entry.
            If the current ledger entry is the original, this field is returned empty.
          type: string
        request_time:
          description: |-
            For purchases, the date and time of the authorization, which is when the user initiates the ledger entry.

            For other ledger entry groups, equivalent to `impact_time`.
          format: date-time
          type: string
        root_token:
          description: |-
            Unique identifier of the root ledger entry.
            If the current ledger entry is the root, this field is returned empty.
          type: string
        status:
          description: |-
            Status of the ledger entry when it was initially recorded and had an impact on the balance, either `PENDING` or `POSTED`.
            This field is immutable and may not represent the current status.

            To view the current status of purchases, refunds, OCTs, and payments, see the `detail_object.state` field.
            These journal entries start in `PENDING` and can transition to `CLEARED`, `DECLINED`, or `ERROR`.
            This transition of status is only sent through webhook event notifications.

            Ledger entries that are final transactions, such as clearings, start and remain in a `POSTED` state.

            *NOTE*:
            `CLEARED`, `DECLINED`, and `ERROR` are special statuses that do not have an impact on the account balance, and are not recorded in the ledger.
            For these special statuses, `impact_time`, `request_time`, `created_time`, `token`, and `id` are returned blank.
          enum:
            - PENDING
            - POSTED
            - DECLINED
            - ERROR
            - CLEARED
          type: string
        token:
          description: Unique identifier of the ledger entry.
          type: string
        type:
          description: The ledger entry event type.
          example: '`authorization.clearing`'
          type: string
      required:
        - account_token
        - amount
        - card_token
        - created_time
        - currency_code
        - detail_token
        - group
        - id
        - impact_time
        - memo
        - request_time
        - status
        - token
        - type
      type: object
    LinkedAccountBalanceResponse:
      properties:
        account_balance:
          type: number
        available_balance:
          type: number
        balance_iso_currency_code:
          type: string
        created_time:
          format: date-time
          type: string
        last_modified_time:
          format: date-time
          type: string
        processor_token:
          type: string
      type: object
    MCCGroupListResponse:
      properties:
        count:
          description: |-
            The number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of MCC group objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/mcc_group_model'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    MccDynamicFilter:
      description: Contains information on the dynamic merchant category code (MCC)
        for a reward.
      properties:
        includes:
          description: One or more dynamic MCCs.
          items:
            $ref: '#/components/schemas/DynamicMccType'
          minItems: 1
          type: array
      required:
        - includes
      type: object
    MerchantGroupListResponse:
      properties:
        count:
          description: |-
            Number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of merchant group resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/merchant_group_response'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    Method:
      description: |-
        Method, either a flat amount or a percentage.

        *NOTE:*
        Only `FLAT` is currently supported.
      enum:
        - PERCENTAGE
        - FLAT
      type: string
    PTCAddress:
      properties:
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          maxLength: 3
          minLength: 3
          type: string
        county:
          maxLength: 3
          minLength: 3
          type: string
        line1:
          maxLength: 255
          minLength: 1
          type: string
        line2:
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          type: string
        state:
          type: string
      required:
        - city
        - county
        - line1
        - postal_code
        - state
      type: object
    PTCPhone:
      properties:
        country_code:
          type: string
        number:
          maxLength: 14
          minLength: 4
          type: string
      required:
        - number
      type: object
    PTCSoftDescriptor:
      properties:
        address:
          $ref: '#/components/schemas/PTCAddress'
        email:
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        phone:
          $ref: '#/components/schemas/PTCPhone'
      required:
        - address
        - name
      type: object
    PaymentAllocationOrderEnum:
      description: Ordered list of balance types to which payments are allocated,
        from first to last.
      enum:
        - INTEREST
        - FEES
        - PRINCIPAL
      type: string
    PaymentCreateReq:
      description: Created when a user pays a portion or all of their statement balance.
        This is for immediate payments only; Once set to `ACTIVE`, cannot be edited
        or deleted.
      properties:
        amount:
          description: Amount of the payment.
          minimum: 0
          type: number
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the payment.
          type: string
        impact_time:
          description: Date and time when the payment impacts the account balance
            and fee calculations.
          format: date-time
          type: string
        metadata:
          description: Customer-defined additional information about the payment (for
            example, a check number).
          type: string
        method:
          description: Method of payment.
          enum:
            - ACH
            - CHECK
            - DEBIT
            - CASH
          type: string
        payment_source_token:
          description: Unique identifier of the payment source. Required for ACH payments.
          type: string
        token:
          description: Unique identifier of the payment.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount
        - currency_code
        - description
        - method
      type: object
    PaymentDetailResponse:
      description: Response containing payment details with transition history
      properties:
        account_token:
          description: Unique identifier of the credit account on which the payment
            is made.
          maxLength: 36
          type: string
        amount:
          description: Total amount of the payment.
          minimum: 0
          type: number
        created_time:
          description: Date and time when the payment was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the payment.
          type: string
        hold_days:
          default: 0
          description: After a payment completes, the number of days to hold the available
            credit on the account before increasing it.
          type: integer
        hold_end_time:
          description: Date and time when the available credit hold is released.
          format: date-time
          type: string
        is_manually_released:
          default: false
          description: Whether the available credit hold was manually released for
            this payment.
          type: boolean
        metadata:
          description: Customer-defined additional information about the payment (for
            example, a check number).
          type: string
        method:
          description: Method of payment.
          enum:
            - ACH
            - CHECK
            - DEBIT
            - CASH
          type: string
        on_hold:
          default: false
          description: Whether the available credit is on hold for this payment.
          type: boolean
        payment_schedule_token:
          description: Unique identifier of the payment schedule.
          type: string
        payment_source_token:
          description: Unique identifier of the payment source. Required for ACH payments.
          type: string
        refund_details:
          $ref: '#/components/schemas/RefundDetailsResponse'
        returned_details:
          $ref: '#/components/schemas/ReturnedDetails'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          description: |-
            Unique identifier of the payment.

            If in the `detail_object`, unique identifier of the detail object.
          type: string
        transitions:
          description: Contains one or more `transitions` objects, which contain information
            on a payment status transition.
          items:
            $ref: '#/components/schemas/PaymentTransitionResponse'
          type: array
        updated_time:
          description: Date and time when the payment was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - amount
        - created_time
        - currency_code
        - description
        - hold_days
        - method
        - status
        - token
        - transitions
        - updated_time
      type: object
    PaymentScheduleAmountCategory:
      description: A category used to determine the actual payment amount.
      enum:
        - FIXED
        - MINIMUM_PAYMENT
        - REMAINING_STATEMENT_BALANCE
        - CURRENT_BALANCE
      type: string
    PaymentScheduleCreateReq:
      description: Information to create a payment schedule.
      properties:
        amount:
          description: |-
            Amount of the payment.

            Required if `amount_category` is `FIXED`.
          type: number
        amount_category:
          $ref: '#/components/schemas/PaymentScheduleAmountCategory'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the payment schedule.
          maxLength: 255
          type: string
        frequency:
          $ref: '#/components/schemas/PaymentScheduleFrequency'
        next_payment_impact_date:
          description: |-
            The date to make a one-time payment.

            Required if frequency is `ONCE`.
          format: date
          type: string
        payment_day:
          description: |-
            Day on which monthly payments are made.

            Required if `frequency` is `MONTHLY`.
          enum:
            - PAYMENT_DUE_DAY
          type: string
        payment_source_token:
          description: Unique identifier of the payment source.
          type: string
        token:
          description: Unique identifier of the payment schedule.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount_category
        - currency_code
        - frequency
        - payment_source_token
      type: object
    PaymentScheduleFrequency:
      description: Defines how often to make a scheduled payment.
      enum:
        - ONCE
        - MONTHLY
      type: string
    PaymentSchedulePage:
      description: Returns paginated information for multiple payment schedules.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of payment schedules.
          items:
            $ref: '#/components/schemas/PaymentScheduleResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PaymentScheduleResponse:
      description: A future one-time or recurring payment schedule.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the payment
            schedule is made.
          type: string
        amount:
          description: |-
            Amount of the payment.

            Returned if the `amount_category` is `FIXED`.
          nullable: true
          type: number
        amount_category:
          $ref: '#/components/schemas/PaymentScheduleAmountCategory'
        created_time:
          description: Date and time when the payment schedule was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the payment schedule.
          type: string
        frequency:
          $ref: '#/components/schemas/PaymentScheduleFrequency'
        next_payment_impact_date:
          description: |-
            The date to make a one-time payment.

            Returned if `frequency` is `ONCE`.
          format: date
          type: string
        payment_day:
          description: |-
            Day on which monthly payments are made.

            Returned if the `frequency` is `MONTHLY`.
          enum:
            - PAYMENT_DUE_DAY
          type: string
        payment_source_token:
          description: Unique identifier of a payment source.
          type: string
        status:
          $ref: '#/components/schemas/PaymentScheduleStatus'
        token:
          description: Unique identifier of the payment schedule.
          type: string
        updated_time:
          description: Date and time when the payment schedule was last updated on
            Marqeta's credit platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - amount_category
        - currency_code
        - frequency
        - payment_source_token
        - token
      type: object
    PaymentScheduleStatus:
      description: Status of the payment schedule.
      enum:
        - ACTIVE
        - COMPLETED
        - TERMINATED
      type: string
    PaymentScheduleTransitionCreateReq:
      description: Details to create a payment schedule transition
      properties:
        status:
          $ref: '#/components/schemas/PaymentScheduleStatus'
        token:
          description: Unique identifier of the payment schedule transition.
          maxLength: 36
          type: string
      required:
        - status
      type: object
    PaymentScheduleTransitionPage:
      description: Returns paginated information for multiple payment schedule transitions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of payment schedule transitions.
          items:
            $ref: '#/components/schemas/PaymentScheduleTransitionResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PaymentScheduleTransitionResponse:
      description: A payment schedule transition on a credit account.
      properties:
        account_token:
          description: |-
            Unique identifier of the credit account on which to transition a payment schedule.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          type: string
        created_time:
          description: Date and time when the payment schedule transition was created
            on Marqeta's credit platform, in UTC.
          format: date-time
          type: string
        payment_schedule_token:
          description: |-
            The unique identifier of the payment schedule whose status is to transition.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens.
          type: string
        status:
          $ref: '#/components/schemas/PaymentScheduleStatus'
        token:
          description: Unique identifier of the payment schedule transition.
          type: string
        updated_time:
          description: Date and time when the payment schedule transition was last
            updated on Marqeta's credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PaymentSourceCreateReq:
      description: Contains information about a payment source.
      properties:
        account_number:
          description: Account number of the payment source.
          type: string
        account_token:
          description: Unique identifier of the credit account receiving the payment.
          maxLength: 36
          type: string
        name:
          description: Name of the individual or business who owns the payment source.
          type: string
        owner:
          description: Type of payment source owner.
          enum:
            - INDIVIDUAL
            - BUSINESS
          type: string
        routing_number:
          description: Routing number of the payment source.
          type: string
        source_type:
          description: Type of payment source.
          enum:
            - CHECKING
            - SAVINGS
            - OTHER
          type: string
        token:
          description: Unique identifier of the payment source.
          pattern: (?!^ +$)^.+$
          type: string
        user_token:
          description: Unique identifier of the user making the payment.
          type: string
        verification_notes:
          description: Additional information on the verification.
          type: string
        verification_override:
          description: Whether to override the verification process.
          type: boolean
      required:
        - account_number
        - account_token
        - name
        - routing_number
        - source_type
        - user_token
        - verification_override
      type: object
    PaymentSourcePage:
      description: Returns paginated information for multiple payment sources.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of payment sources.
          items:
            $ref: '#/components/schemas/PaymentSourceResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PaymentSourceResponse:
      description: Contains information about a payment source.
      properties:
        account_suffix:
          description: Last four digits of the payment source account number.
          maxLength: 4
          type: string
        account_token:
          description: Unique identifier of the credit account receiving the payment.
          maxLength: 36
          type: string
        created_time:
          description: Date and time when the payment source was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the payment source was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the individual or business who owns the payment source.
          type: string
        owner:
          description: Type of payment source owner.
          enum:
            - INDIVIDUAL
            - BUSINESS
          type: string
        routing_number:
          description: Routing number of the payment source.
          type: string
        source_type:
          description: Type of payment source.
          enum:
            - CHECKING
            - SAVINGS
            - OTHER
          type: string
        status:
          $ref: '#/components/schemas/PaymentSourceStatusEnum'
        token:
          description: Unique identifier of the payment source.
          type: string
        user_token:
          description: Unique identifier of the user making the payment.
          type: string
        verification_notes:
          description: Additional information on the verification (for example, an
            external verification identifier that's outside Marqeta's credit platform).
          type: string
        verification_status:
          description: Status of the verification for the payment source.
          enum:
            - ACH_VERIFIED
            - PENDING
          type: string
      type: object
    PaymentSourceStatusEnum:
      description: Current status of the payment source.
      enum:
        - ACTIVE
        - PENDING
        - INACTIVE
      type: string
    PaymentSourceUpdateReq:
      description: Request used to update the status of a payment source.
      properties:
        status:
          $ref: '#/components/schemas/PaymentSourceStatusEnum'
      required:
        - status
      type: object
    PaymentStatus:
      description: Current status of the payment or refund.
      enum:
        - INITIATED
        - PENDING
        - PROCESSING
        - SUBMITTED
        - CANCELLED
        - COMPLETED
        - RETURNED
        - REFUNDED
        - SYS_ERROR
        - ACH_ERROR
      type: string
    PaymentTransitionReq:
      description: Request used to transition the status of a payment.
      properties:
        refund_details:
          $ref: '#/components/schemas/RefundDetails'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          description: Unique identifier of the payment status transition.
          type: string
      required:
        - status
      type: object
    PaymentTransitionResponse:
      description: Response containing payment transition information.
      properties:
        account_token:
          description: Unique identifier of the credit account on which you want to
            transition a payment status.
          type: string
        created_time:
          description: Date and time when the payment transition was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        payment_token:
          description: Unique identifier of the payment whose status you want to transition.
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        token:
          description: Unique identifier of the payment status transition.
          type: string
      required:
        - account_token
        - payment_token
        - status
        - token
      type: object
    PaymentsPage:
      description: Returns paginated payments
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more payments on a credit account.
          items:
            $ref: '#/components/schemas/PaymentDetailResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PeriodicFeeSchedule:
      description: periodic fee schedules on account
      properties:
        amount:
          description: fee amount
          type: number
        effective_date:
          description: date the fee becomes effective
          format: date
          type: string
        next_fee_impact_date:
          description: date of the next time fee will be charged
          format: date
          type: string
        type:
          description: type of fee to be charged
          enum:
            - ANNUAL_FEE
            - MONTHLY_FEE
          type: string
      type: object
    PeriodicFeeSchedulePage:
      description: Return paginated periodic fee schedules on a credit account.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of account periodic fee schedules.
          items:
            $ref: '#/components/schemas/PeriodicFeeSchedule'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PoliciesDocumentPage:
      description: List response details for paginated document policies.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: One or more document policies.
          items:
            $ref: '#/components/schemas/PolicyDocumentResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PoliciesProductPage:
      description: List response details for product policies.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: One or more credit product policies.
          items:
            $ref: '#/components/schemas/PolicyProductResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PolicyAprCreateReq:
      description: Request details for an APR policy.
      properties:
        description:
          description: Description of the APR policy.
          type: string
        name:
          description: Name of the APR policy.
          type: string
        purchases:
          $ref: '#/components/schemas/PolicyAprPurchaseReq'
        token:
          description: Unique identifier of the APR policy.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - name
        - purchases
      type: object
    PolicyAprPurchaseReq:
      description: Contains information on the pricing strategy for purchases.
      properties:
        external_token:
          description: Unique identifier of the external pricing strategy for the
            credit program.
          pattern: (?!^ +$)^.+$
          type: string
        name:
          description: Name of the pricing strategy.
          type: string
        tiers:
          description: One or more risk tiers for a pricing strategy.
          items:
            $ref: '#/components/schemas/PolicyAprTierReq'
          type: array
      required:
        - tiers
      type: object
    PolicyAprPurchaseResponse:
      description: Contains information on the pricing strategy for purchases.
      properties:
        external_token:
          description: Unique identifier of the pricing strategy on a credit program.
          pattern: (?!^ +$)^.+$
          type: string
        name:
          description: Name of the pricing strategy.
          type: string
        tiers:
          description: One or more risk tiers for a pricing strategy.
          items:
            $ref: '#/components/schemas/PolicyAprTierResponse'
          type: array
      type: object
    PolicyAprResponse:
      description: Contains information on an APR policy.
      properties:
        created_time:
          description: Date and time when the APR policy was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        description:
          description: Description of the APR policy.
          type: string
        effective_date:
          description: Date the APR becomes effective.
          format: date
          type: string
        name:
          description: Name of the APR policy.
          type: string
        purchases:
          $ref: '#/components/schemas/PolicyAprPurchaseResponse'
        token:
          description: Unique identifier of the APR policy.
          pattern: (?!^ +$)^.+$
          type: string
        updated_time:
          description: Date and time when the APR policy was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PolicyAprTierReq:
      description: Request details for the APR for a risk tier.
      properties:
        margin_rate:
          description: The number of percentage points added to the prime rate, used
            to calculate a variable APR value.
          type: number
      required:
        - margin_rate
      type: object
    PolicyAprTierResponse:
      description: Response details for the APR for a risk tier.
      properties:
        apr:
          default: 0
          description: The value of the APR.
          type: number
        margin_rate:
          description: Margin rate for the risk tier for a pricing strategy.
          type: number
      type: object
    PolicyAprUpdateReq:
      description: Request details for an APR policy.
      properties:
        description:
          description: Description of the APR policy.
          type: string
        name:
          description: Name of the APR policy.
          type: string
        purchases:
          $ref: '#/components/schemas/PolicyAprPurchaseReq'
        token:
          description: Unique identifier of the APR policy.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - name
      type: object
    PolicyAprsPage:
      description: List response details for paginated APR policies.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: One or more APR policies.
          items:
            $ref: '#/components/schemas/PolicyAprResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PolicyDocumentAssetAndTemplateReq:
      description: Request details for a specific asset and the template on which
        it was based.
      properties:
        asset_token:
          description: |-
            Unique identifier of the asset, which is the version of a document that is based on the template and contains finalized values.
            The values are finalized when the bundle containing the document is created.
          pattern: (?!^ +$)^.+$
          type: string
        template_token:
          description: |-
            Unique identifier of the template, which is the version of a document that serves as an initial disclosure but does not contain finalized values.
            The values are finalized in the asset version of the document.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - asset_token
        - template_token
      type: object
    PolicyDocumentAssetAndTemplateResponse:
      description: Return details for a specific asset and the template on which it
        was based.
      properties:
        asset_created_time:
          description: Date and time when the asset was created.
          format: date-time
          type: string
        asset_token:
          description: |-
            Unique identifier of the asset, which is the version of a document that is based on the template and contains finalized values.
            The values are finalized when the bundle containing the document is created.
          type: string
        asset_urls:
          $ref: '#/components/schemas/PolicyDocumentAssetURLs'
        template_created_time:
          description: Date and time when the template was created.
          format: date-time
          type: string
        template_token:
          description: |-
            Unique identifier of the template, which is the version of a document that serves as an initial disclosure but does not contain finalized values.
            Values are finalized in the asset version of the document.
          type: string
        template_urls:
          $ref: '#/components/schemas/PolicyDocumentTemplateURLs'
      type: object
    PolicyDocumentAssetReq:
      description: Request details for a specific asset.
      properties:
        asset_token:
          description: |-
            Unique identifier of the asset, which is a type of document that contains finalized values.
            The values are finalized when the bundle containing the document is created.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - asset_token
      type: object
    PolicyDocumentAssetResponse:
      description: Return details for a specific asset.
      properties:
        asset_created_time:
          description: Date and time when the asset was created.
          format: date-time
          type: string
        asset_token:
          description: |-
            Unique identifier of the asset, which is a type of document that contains finalized values.
            The values are finalized when the bundle containing the document is created.
          pattern: (?!^ +$)^.+$
          type: string
        asset_urls:
          $ref: '#/components/schemas/PolicyDocumentAssetURLs'
      type: object
    PolicyDocumentAssetURLs:
      description: Contains one or more URLs for an asset.
      properties:
        html:
          description: URL to the HTML version of the asset.
          type: string
        pdf:
          description: URL to the PDF version of the asset.
          type: string
        png:
          description: URL to the PNG version of the asset.
          type: string
      required:
        - html
        - pdf
        - png
      type: object
    PolicyDocumentCreateReq:
      description: Contains information on a document policy.
      properties:
        account_statement:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        benefits_disclosure_premium:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        benefits_disclosure_traditional:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        card_member_agreement:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        e_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        name:
          description: Name of the document policy.
          pattern: (?!^ +$)^.+$
          type: string
        noaa_multiple_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        privacy_policy:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        rewards_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        summary_of_credit_terms:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        terms_schedule:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        token:
          description: Unique identifier of the document policy.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - account_statement
        - benefits_disclosure_premium
        - benefits_disclosure_traditional
        - card_member_agreement
        - e_disclosure
        - name
        - noaa_multiple_reason_with_dodd_frank
        - noaa_single_reason
        - noaa_single_reason_with_dodd_frank
        - privacy_policy
        - summary_of_credit_terms
        - terms_schedule
      type: object
    PolicyDocumentResponse:
      description: Contains information on a document policy.
      properties:
        account_statement:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        benefits_disclosure_premium:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        benefits_disclosure_traditional:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        card_member_agreement:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        created_time:
          description: Date and time when the document policy was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        e_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        name:
          description: Name of the document policy.
          pattern: (?!^ +$)^.+$
          type: string
        noaa_multiple_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        noaa_single_reason:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        noaa_single_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        privacy_policy:
          $ref: '#/components/schemas/PolicyDocumentAssetResponse'
        rewards_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateResponse'
        summary_of_credit_terms:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateResponse'
        terms_schedule:
          $ref: '#/components/schemas/PolicyDocumentTemplateResponse'
        token:
          description: Unique identifier of the document policy.
          pattern: (?!^ +$)^.+$
          type: string
        updated_time:
          description: Date and time when the document policy was last updated on
            Marqeta's credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PolicyDocumentTemplateReq:
      description: Request details for a template.
      properties:
        template_token:
          description: Unique identifier of a template, which is a document that serves
            as an initial disclosure but does not contain finalized values.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - template_token
      type: object
    PolicyDocumentTemplateResponse:
      description: Response details for a template.
      properties:
        template_created_time:
          description: Date and time when the template was created.
          format: date-time
          type: string
        template_token:
          description: Unique identifier of a template, which is a document that serves
            as an initial disclosure but does not contain finalized values.
          type: string
        template_urls:
          $ref: '#/components/schemas/PolicyDocumentTemplateURLs'
      type: object
    PolicyDocumentTemplateURLs:
      description: Contains one or more URLs for a template.
      properties:
        html:
          description: URL to the HTML version of the document template.
          type: string
      required:
        - html
      type: object
    PolicyDocumentUpdateReq:
      description: Request details to update a document policy.
      properties:
        account_statement:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        benefits_disclosure_premium:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        benefits_disclosure_traditional:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        card_member_agreement:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        e_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        name:
          description: Name of the document policy.
          pattern: (?!^ +$)^.+$
          type: string
        noaa_multiple_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        noaa_single_reason_with_dodd_frank:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
        privacy_policy:
          $ref: '#/components/schemas/PolicyDocumentAssetReq'
        rewards_disclosure:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        summary_of_credit_terms:
          $ref: '#/components/schemas/PolicyDocumentAssetAndTemplateReq'
        terms_schedule:
          $ref: '#/components/schemas/PolicyDocumentTemplateReq'
      required:
        - account_statement
        - benefits_disclosure_premium
        - benefits_disclosure_traditional
        - card_member_agreement
        - e_disclosure
        - name
        - noaa_multiple_reason_with_dodd_frank
        - noaa_single_reason
        - noaa_single_reason_with_dodd_frank
        - privacy_policy
        - summary_of_credit_terms
        - terms_schedule
      type: object
    PolicyFeeAccount:
      description: Contains information on the fee policy on a credit account.
      properties:
        late_payment:
          $ref: '#/components/schemas/PolicyFeePayment'
        returned_payment:
          $ref: '#/components/schemas/PolicyFeePayment'
      type: object
    PolicyFeeCreateReq:
      description: Request details for a fee policy.
      properties:
        account:
          $ref: '#/components/schemas/PolicyFeeAccount'
        description:
          description: Description of the fee policy.
          type: string
        name:
          description: Name of the fee policy.
          type: string
        token:
          description: Unique identifier of the fee policy.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - account
        - name
      type: object
    PolicyFeePayment:
      description: Contains information on a specific fee in a fee policy.
      properties:
        default_method:
          $ref: '#/components/schemas/FeeMethod'
        default_value:
          description: Amount of the fee.
          type: number
      type: object
    PolicyFeeResponse:
      description: Response details for a fee policy.
      properties:
        account:
          $ref: '#/components/schemas/PolicyFeeAccount'
        created_time:
          description: Date and time when the fee policy was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        description:
          description: Description of the fee policy.
          type: string
        name:
          description: Name of the fee policy.
          type: string
        token:
          description: Unique identifier of the fee policy.
          pattern: (?!^ +$)^.+$
          type: string
        updated_time:
          description: Date and time when the fee policy was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PolicyFeeUpdateReq:
      description: Response details to update a fee policy.
      properties:
        account:
          $ref: '#/components/schemas/PolicyFeeAccount'
        description:
          description: Description of the fee policy.
          type: string
        name:
          description: Name of the fee policy.
          type: string
        token:
          description: Unique identifier of the fee policy.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - name
      type: object
    PolicyFeesPage:
      description: List response details for fee policies.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: One or more fee policies.
          items:
            $ref: '#/components/schemas/PolicyFeeResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PolicyOfferResponse:
      description: Response details for an offer policy.
      properties:
        created_time:
          description: Date and time when the offer policy was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        description:
          description: Description of the offer policy.
          type: string
        name:
          description: Name of the offer policy.
          type: string
        token:
          description: Unique identifier of the offer policy.
          pattern: (?!^ +$)^.+$
          type: string
        updated_time:
          description: Date and time when the offer policy was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PolicyProductCardProductLevel:
      description: Level of the card product.
      enum:
        - PREMIUM
        - TRADITIONAL
      type: string
    PolicyProductCardProductReq:
      description: Contains information on the card products associated with the credit
        product policy.
      properties:
        level:
          $ref: '#/components/schemas/PolicyProductCardProductLevel'
        token:
          description: Unique identifier of the card product.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - level
        - token
      type: object
    PolicyProductCardProductResponse:
      description: Contains information on the card products associated with the credit
        product policy.
      properties:
        level:
          $ref: '#/components/schemas/PolicyProductCardProductLevel'
        network:
          description: Name of the card network.
          enum:
            - VISA
            - MASTERCARD
            - SANDBOX
          type: string
        token:
          description: Unique identifier of the card product.
          pattern: (?!^ +$)^.+$
          type: string
      type: object
    PolicyProductCreateReq:
      description: Request details for a credit product policy.
      properties:
        card_products:
          description: One or more card products associated with the credit product
            policy.
          items:
            $ref: '#/components/schemas/PolicyProductCardProductReq'
          minItems: 1
          type: array
        classification:
          $ref: '#/components/schemas/ProductClassification'
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the credit product policy.
          type: string
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        name:
          description: Name of the credit product policy.
          minLength: 1
          type: string
        payments:
          $ref: '#/components/schemas/PolicyProductPaymentConfiguration'
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        token:
          description: Unique identifier of the credit product policy.
          pattern: (?!^ +$)^.+$
          type: string
        usage:
          description: One or more usage types for the credit product policy.
          items:
            $ref: '#/components/schemas/BalanceType'
          minItems: 1
          type: array
      required:
        - card_products
        - classification
        - credit_line
        - currency_code
        - interest_calculation
        - name
        - payments
        - product_sub_type
        - product_type
        - usage
      type: object
    PolicyProductMinPaymentCalculation:
      description: Contains information used to calculate the minimum payment amount
        on a credit product policy.
      properties:
        include_overlimit_amount:
          description: Whether to include the overlimit amount when calculating the
            minimum payment.
          type: boolean
        include_past_due_amount:
          description: Whether to include the past due amount when calculating the
            minimum payment.
          type: boolean
        min_payment_flat_amount:
          description: Minimum payment, expressed as a flat amount, due on the payment
            due day.
          type: number
        min_payment_percentage:
          $ref: '#/components/schemas/PolicyProductMinPaymentPercentage'
      required:
        - include_overlimit_amount
        - include_past_due_amount
      type: object
    PolicyProductMinPaymentPercentage:
      description: Contains information used to calculate the minimum payment amount
        when expressed as a percentage.
      properties:
        include_fees_charged:
          description: One or more fee types to include when calculating the minimum
            payment.
          items:
            enum:
              - LATE_PAYMENT_FEE
              - RETURNED_PAYMENT_FEE
            type: string
          type: array
        include_interest_charged:
          description: Whether to include the amount of interest charged when calculating
            the minimum payment.
          type: boolean
        percentage_of_balance:
          description: Minimum payment, expressed as a percentage of the total statement
            balance, due on the payment due day.
          maximum: 100
          minimum: 1.0E-4
          type: number
      required:
        - include_interest_charged
        - percentage_of_balance
      type: object
    PolicyProductPaymentConfiguration:
      description: Contains the configurations for billing cycle day, payment due
        day, and fees.
      properties:
        allocation_order:
          default:
            - INTEREST
            - FEES
            - PRINCIPAL
          description: Ordered list of balance types to which payments are allocated,
            from first to last.
          items:
            $ref: '#/components/schemas/PaymentAllocationOrderEnum'
          minItems: 1
          type: array
        billing_cycle_day:
          description: Day of month the billing cycle starts.
          maximum: 1
          minimum: 1
          type: integer
        due_day:
          description: Day of month the payment for the previous billing cycle is
            due.
          maximum: 31
          minimum: 31
          type: integer
        min_payment_calculation:
          $ref: '#/components/schemas/PolicyProductMinPaymentCalculation'
      required:
        - allocation_order
        - billing_cycle_day
        - due_day
        - min_payment_calculation
      type: object
    PolicyProductResponse:
      description: Contains information on the credit product policy.
      properties:
        card_products:
          description: One or more card products associated with the credit product
            policy.
          items:
            $ref: '#/components/schemas/PolicyProductCardProductResponse'
          minItems: 1
          type: array
        classification:
          $ref: '#/components/schemas/ProductClassification'
        created_time:
          description: Date and time when the credit product policy was created on
            Marqeta's credit platform, in UTC.
          format: date-time
          type: string
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the credit product policy.
          type: string
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        name:
          description: Name of the credit product policy.
          minLength: 1
          type: string
        payments:
          $ref: '#/components/schemas/PolicyProductPaymentConfiguration'
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        token:
          description: Unique identifier of the credit product policy.
          pattern: (?!^ +$)^.+$
          type: string
        updated_time:
          description: Date and time when the credit product policy was last updated
            on Marqeta's credit platform, in UTC.
          format: date-time
          type: string
        usage:
          description: One or more usage types for the credit product policy.
          items:
            $ref: '#/components/schemas/BalanceType'
          minItems: 1
          type: array
      type: object
    PolicyProductUpdateReq:
      description: Request details to update a credit product policy.
      properties:
        card_products:
          description: One or more card products associated with the credit product
            policy.
          items:
            $ref: '#/components/schemas/PolicyProductCardProductReq'
          minItems: 1
          type: array
        classification:
          $ref: '#/components/schemas/ProductClassification'
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the credit product policy.
          type: string
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        name:
          description: Name of the credit product policy.
          minLength: 1
          pattern: (?!^ +$)^.+$
          type: string
        payments:
          $ref: '#/components/schemas/PolicyProductPaymentConfiguration'
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        usage:
          description: One or more usage types for the credit product policy.
          items:
            $ref: '#/components/schemas/BalanceType'
          minItems: 1
          type: array
      required:
        - card_products
        - classification
        - credit_line
        - currency_code
        - interest_calculation
        - name
        - payments
        - product_sub_type
        - product_type
        - usage
      type: object
    PolicyRewardPage:
      description: List response details for reward policies.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: One or more reward policies.
          items:
            $ref: '#/components/schemas/PolicyRewardResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PolicyRewardReq:
      description: Request details for a reward policy.
      properties:
        description:
          description: Description of the reward policy.
          type: string
        name:
          description: Name of the reward policy.
          pattern: (?!^ +$)^.+$
          type: string
        rules:
          description: One or more reward rules.
          items:
            $ref: '#/components/schemas/PolicyRewardRule'
          minItems: 1
          type: array
        token:
          description: Unique identifier of the reward policy.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - name
        - rules
      type: object
    PolicyRewardResponse:
      description: Response details for a reward policy.
      properties:
        created_time:
          description: Date and time when the reward policy was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        description:
          description: Description of the reward policy.
          type: string
        name:
          description: Name of the reward policy.
          type: string
        rules:
          description: One or more reward rules
          items:
            $ref: '#/components/schemas/PolicyRewardRule'
          minItems: 1
          type: array
        token:
          description: Unique identifier of the reward policy.
          pattern: (?!^ +$)^.+$
          type: string
        updated_time:
          description: Date and time when the reward policy was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PolicyRewardRule:
      description: Contains information on a reward rule.
      properties:
        filters:
          $ref: '#/components/schemas/PolicyRewardRuleFilters'
        outcome:
          $ref: '#/components/schemas/PolicyRewardRuleOutcome'
        type:
          $ref: '#/components/schemas/PolicyRewardRuleType'
      required:
        - filters
        - outcome
        - type
      type: object
    PolicyRewardRuleFilters:
      description: Contains information on the rules defined for a reward program.
      properties:
        amount:
          $ref: '#/components/schemas/AmountFilter'
        mcc_dynamic:
          $ref: '#/components/schemas/MccDynamicFilter'
      required:
        - amount
      type: object
    PolicyRewardRuleOutcome:
      description: Contains information on the outcome of a reward rule.
      properties:
        max_amount:
          description: Max amount of the reward.
          minimum: 0
          type: number
        percentage:
          description: |-
            The reward percentage applied when the balance for a billing cycle is within the range specified in the `filters.amount.greater_than` and `filters.amount.less_than` fields.
            For example, if the percentage is `1`, the account holder earns 1% of the account balance if they spend between the `greater_than` and `less_than` amounts during a billing cycle.
          minimum: 0
          type: number
      required:
        - percentage
      type: object
    PolicyRewardRuleType:
      description: Type of reward rule.
      enum:
        - CASHBACK
      type: string
    PolicyType:
      description: Type of policy.
      enum:
        - APR
        - DOCUMENT
        - FEE
        - OFFER
        - PRODUCT
        - REWARD
        - ALL
      type: string
    PostDecisionsResponse:
      properties:
        application_token:
          description: Unique identifier of the application.
          type: string
        decision_id:
          description: |-
            Unique identifier of the decision made based on the decision model.

            See `decision_model.status` for the current state of the application.
          type: string
        status:
          description: Status of the decision on the application.
          enum:
            - SUBMITTED
            - DECISIONING
            - MANUAL_REVIEW
            - APPROVED
            - DECLINED
            - EXPIRED
            - REJECTED
            - ERROR
          type: string
        submitted_date_time:
          description: Date and time when the decision was submitted, in UTC.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the decision model.

            See `decision_model.status` for the current state of the application.
          type: string
        user_token:
          description: Unique identifier of the applicant, the user applying for a
            credit account.
          type: string
      required:
        - application_token
        - decision_id
        - status
        - submitted_date_time
        - token
        - user_token
      type: object
    PrimaryContactInfoModel:
      description: Describes the business' primary contact person.
      properties:
        department:
          description: Business department of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        email:
          description: Email address of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        extension:
          description: Phone extension of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        fax:
          description: Fax number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        full_name:
          description: Full name of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        mobile:
          description: Mobile phone number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: Phone number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        title:
          description: Title of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    ProductClassification:
      default: CONSUMER
      description: |-
        Specifies for whom the credit product is intended.

        * `CONSUMER` - The credit product is intended for individual consumers.
        * `SMALL_AND_MEDIUM_BUSINESS` - The credit product is intended for small and medium business.
      enum:
        - CONSUMER
        - SMALL_AND_MEDIUM_BUSINESS
      type: string
    ProductConfig:
      description: Contains information on configurations for billing cycle day, payment
        due day, and fees.
      properties:
        billing_cycle_day:
          description: Day of month the billing cycle starts.
          maximum: 1
          minimum: 1
          type: integer
        fees:
          description: One or more fee types.
          items:
            $ref: '#/components/schemas/ProductFeeType'
          type: array
        payment_due_day:
          description: Day of month the payment for the previous billing cycle is
            due.
          maximum: 31
          minimum: 31
          type: integer
        periodic_fees:
          description: Contains one or more periodic fees.
          items:
            description: Contains information on a periodic fee.
            properties:
              frequency:
                description: How frequently the fee is charged.
                enum:
                  - ANNUAL
                  - MONTHLY
                type: string
              number_of_days_post_activation:
                description: |-
                  The number of days after an account is activated that the initial fee is charged.
                  For example, if the value in this field is `30`, then the initial fee is charged 30 days after an account is activated.
                maximum: 1000
                minimum: 1
                type: integer
            required:
              - frequency
              - number_of_days_post_activation
            type: object
          type: array
      required:
        - billing_cycle_day
        - payment_due_day
      type: object
    ProductCreateReq:
      description: |-
        Specifies shared details for a credit program.

        Once set to `ACTIVE`, cannot be edited or deleted.
      properties:
        card_product_tokens:
          description: One or more associated card product tokens.
          items:
            type: string
          minItems: 1
          type: array
        classification:
          $ref: '#/components/schemas/ProductClassification'
        config:
          $ref: '#/components/schemas/ProductConfig'
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the credit product.
          type: string
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        min_payment_calculation:
          $ref: '#/components/schemas/ProductMinPaymentCalculation'
        min_payment_flat_amount:
          description: Minimum payment, expressed as a flat amount, due on the payment
            due day.
          minimum: 0.01
          type: number
        min_payment_percentage:
          description: Minimum payment, expressed as a percentage of the total statement
            balance, due on the payment due day.
          maximum: 100
          minimum: 1.0E-4
          type: number
        name:
          description: Name of the credit product.
          type: string
        payment_allocation_order:
          default:
            - INTEREST
            - FEES
            - PRINCIPAL
          description: Ordered list of balance types to which payments are allocated,
            from first to last.
          items:
            $ref: '#/components/schemas/PaymentAllocationOrderEnum'
          minItems: 1
          type: array
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        status:
          $ref: '#/components/schemas/ResourceStatus'
        token:
          description: Unique identifier of the credit product.
          pattern: (?!^ +$)^.+$
          type: string
        usage:
          description: One or more usage types for the credit product.
          items:
            $ref: '#/components/schemas/BalanceType'
          minItems: 1
          type: array
      required:
        - card_product_tokens
        - classification
        - config
        - credit_line
        - currency_code
        - interest_calculation
        - min_payment_flat_amount
        - min_payment_percentage
        - name
        - payment_allocation_order
        - product_sub_type
        - product_type
        - usage
      type: object
    ProductCreditLine:
      description: Contains information on the credit line range.
      properties:
        max:
          description: Maximum credit limit.
          exclusiveMinimum: true
          maximum: 9.9999999999999E11
          minimum: 0
          type: number
        min:
          description: Minimum credit limit.
          exclusiveMinimum: true
          maximum: 9.9999999999999E11
          minimum: 0
          type: number
      required:
        - max
        - min
      type: object
    ProductFeeType:
      description: Type of fee.
      enum:
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
      type: string
    ProductMinPaymentCalcFeeType:
      $ref: '#/components/schemas/ProductFeeType'
    ProductMinPaymentCalculation:
      description: Contains information used to calculate the minimum payment amount.
      properties:
        include_past_due_amount:
          description: Whether to include the past due amount when calculating the
            minimum payment.
          type: boolean
        min_payment_flat_amount:
          description: Minimum payment, expressed as a flat amount, due on the payment
            due day.
          minimum: 0.01
          type: number
        min_payment_percentage:
          $ref: '#/components/schemas/ProductMinPaymentPercentage'
      required:
        - include_overlimit_amount
        - include_past_due_amount
        - min_payment_flat_amount
        - min_payment_percentage
      type: object
    ProductMinPaymentPercentage:
      description: Contains information used to calculate the minimum payment percentage.
      properties:
        include_fees_charged:
          description: One or more fee types to include when calculating the minimum
            payment.
          items:
            $ref: '#/components/schemas/ProductFeeType'
          type: array
        percentage_of_balance:
          description: Minimum payment, expressed as a percentage of the total statement
            balance, due on the payment due day.
          maximum: 100
          minimum: 1.0E-4
          type: number
      required:
        - include_fees_charged
        - include_interest_charged
        - percentage_of_balance
      type: object
    ProductResponse:
      description: |-
        Specifies shared details for a credit program.

        Once set to `ACTIVE`, cannot be edited or deleted.
      properties:
        card_product_tokens:
          description: One or more associated card product tokens.
          items:
            type: string
          minItems: 1
          type: array
        classification:
          $ref: '#/components/schemas/ProductClassification'
        config:
          $ref: '#/components/schemas/ProductConfig'
        created_time:
          description: Date and time when the credit product was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        credit_line:
          $ref: '#/components/schemas/ProductCreditLine'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the credit product.
          type: string
        interest_calculation:
          $ref: '#/components/schemas/InterestCalculation'
        min_payment_calculation:
          $ref: '#/components/schemas/ProductMinPaymentCalculation'
        min_payment_flat_amount:
          description: Minimum payment, expressed as a flat amount, due on the payment
            due day.
          minimum: 0.01
          type: number
        min_payment_percentage:
          description: Minimum payment, expressed as a percentage of the total statement
            balance, due on the payment due day.
          maximum: 100
          minimum: 1.0E-4
          type: number
        name:
          type: string
        parent_product_token:
          description: Unique identifier of the parent credit product.
          type: string
        payment_allocation_order:
          default:
            - INTEREST
            - FEES
            - PRINCIPAL
          description: Ordered list of balance types to which payments are allocated,
            from first to last.
          items:
            $ref: '#/components/schemas/PaymentAllocationOrderEnum'
          minItems: 1
          type: array
        product_sub_type:
          $ref: '#/components/schemas/ProductSubType'
        product_type:
          $ref: '#/components/schemas/ProductType'
        status:
          $ref: '#/components/schemas/ResourceStatus'
        token:
          description: Unique identifier of the credit product.
          type: string
        updated_time:
          description: Date and time when the credit product was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        usage:
          description: One or more usage types for the credit product.
          items:
            $ref: '#/components/schemas/BalanceType'
          minItems: 1
          type: array
      type: object
    ProductSubType:
      default: CREDIT_CARD
      description: |-
        Subtype of the credit product type.

        `CREDIT_CARD` - Card that enables the cardholder to make purchases on credit.
      enum:
        - CREDIT_CARD
      type: string
    ProductType:
      default: REVOLVING
      description: |-
        Type of credit product.

        `REVOLVING` - Allows users to continuously borrow and pay debts up to the credit limit.
      enum:
        - REVOLVING
      type: string
    ProductsPage:
      description: Returns paginated products.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more credit product objects.
          items:
            $ref: '#/components/schemas/ProductResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    ProgramReserveTransactionListResponse:
      properties:
        count:
          description: |-
            The number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            A list of program reserve transactions.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/program_reserve_transaction_response'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    ProgramTransferListResponse:
      properties:
        count:
          description: |-
            The number of program transfer resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of program transfer objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/program_transfer_response'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    ProgramTransferTypeListResponse:
      properties:
        count:
          description: |-
            The number of program transfer resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of program transfer types.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/program_transfer_type_response'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    PushToCardDisburseListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/push_to_card_disbursement_response'
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    PushToCardListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: '#/components/schemas/push_to_card_response'
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    PutRewardProgramsRequest:
      properties:
        is_active:
          description: A value of `true` indicates that the reward program is active
            and rewards can be accrued for the associated account.
          type: boolean
        note:
          description: A note explaining why the reward program is being activated
            or deactivated.
          type: string
      required:
        - is_active
        - note
      type: object
    RealTimeFeeAssessmentRequest:
      description: Controls the assessment of real-time fees.
      properties:
        domestic_enabled:
          default: false
          description: Enables fee assessments where the origin of the transaction
            acquirer is inside the US.
          type: boolean
        international_enabled:
          default: false
          description: Enables fee assessments where the origin of the transaction
            acquirer is outside the US.
          type: boolean
        transaction_type:
          description: Indicates the type of transactions on which the fee is assessed.
          enum:
            - authorization
            - pindebit.atm.withdrawal
            - pindebit
          type: string
      type: object
    RealTimeFeeGroupListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of real time fee group objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/real_time_fee_group'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    RedemptionStatus:
      description: |-
        Status of the redemption.

        If <</core-api/reward-redemptions#postRedemptionTransition, transitioning the redemption's status>>:

        * `new_state` is the state to which you want to transition the redemption; must be `COMPLETED` or `RETURNED`.

        * `initial_status` is the initial status of the redemption prior to transition.
      enum:
        - INITIATED
        - COMPLETED
        - RETURNED
        - PROCESSING
        - SUBMITTED
      type: string
    RedemptionTransitionsResponse:
      description: Return redemptions transition.
      properties:
        created_time:
          description: Date and time when the reward redemption transition was created
            on Marqeta's credit platform.
          format: date-time
          type: string
        external_settlement_date_time:
          description: |-
            Date and time when the reward redemption was settled on your external platform.

            This field is returned if you handled the reward redemption outside of Marqeta's credit platform.
          format: date-time
          type: string
        initial_status:
          $ref: '#/components/schemas/RedemptionStatus'
        new_status:
          $ref: '#/components/schemas/RedemptionStatus'
        redemption_token:
          description: Unique identifier of the redemption whose status was transitioned.
          maxLength: 36
          type: string
        token:
          description: Unique identifier of the reward redemption transition.
          maxLength: 36
          type: string
      required:
        - created_time
        - initial_status
        - new_status
        - redemption_token
        - token
      type: object
    RedemptionType:
      description: |-
        Type of redemption.

        * `EXTERNAL` - You issue the redemption on your external platform; Marqeta adjusts the reward program balance on the system of record.

        * `STATEMENT_CREDIT` - Marqeta issues the redemption as a statement credit on the associated account. +
        *NOTE*: This creates a new journal entry on the account and cannot be undone.

        * `ACH` - The reward redemption is issued as an ACH transfer to the receiving account.
      enum:
        - EXTERNAL
        - STATEMENT_CREDIT
        - ACH
      type: string
    RedemptionsBalanceResponse:
      properties:
        end_date:
          description: The ending date (or date-time) of a date range from which to
            return the redemption balance, in UTC.
          format: date-time
          type: string
        redemption_total_amount:
          description: Total amount of rewards redeemed within a specified date range.
          format: decimal
          type: number
        reward_program_token:
          description: Unique identifier of the reward program for which to return
            the redemption balance.
          maxLength: 36
          type: string
        start_date:
          description: The starting date (or date-time) of a date range from which
            to return the redemption balance, in UTC.
          format: date-time
          type: string
      required:
        - end_date
        - redemption_total_amount
        - reward_program_token
        - start_date
      type: object
    RedemptionsBySettlementDatePage:
      allOf:
        - $ref: '#/components/schemas/AbstractPage'
      description: Return paginated redemptions by settlement date.
      properties:
        data:
          description: List of redemptions.
          items:
            $ref: '#/components/schemas/RedemptionsBySettlementDateResponse'
          type: array
      type: object
    RedemptionsBySettlementDateResponse:
      description: Return redemptions.
      properties:
        account_token:
          description: token of account the redemption is for.
          maxLength: 36
          type: string
        amount:
          format: decimal
          type: number
        completion_time:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        created_time:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        destination:
          $ref: '#/components/schemas/DestinationType'
        note:
          type: string
        redemption_token:
          description: Identifier of the redemption.
          maxLength: 36
          type: string
        reward_program_token:
          description: Token of reward program the redemption is for.
          maxLength: 36
          type: string
        status:
          $ref: '#/components/schemas/RedemptionStatus'
        type:
          $ref: '#/components/schemas/RedemptionType'
        updated_time:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
      required:
        - account_token
        - amount
        - created_time
        - destination
        - note
        - redemption_token
        - reward_program_token
        - status
        - type
        - updated_time
      type: object
    RedemptionsPage:
      allOf:
        - $ref: '#/components/schemas/AbstractPage'
      description: Return paginated redemptions for a reward program.
      properties:
        data:
          description: Contains one or more redemptions.
          items:
            $ref: '#/components/schemas/RedemptionsResponse'
          type: array
      type: object
    RedemptionsResponse:
      description: Contains information on a reward redemption.
      properties:
        amount:
          description: Amount to redeem.
          format: decimal
          type: number
        created_time:
          description: Date and time when the reward redemption was created on the
            Marqeta platform, in UTC.
          format: date-time
          type: string
        destination:
          $ref: '#/components/schemas/DestinationType'
        external_settlement_date_time:
          description: |-
            Date and time when the reward redemption was settled on your external platform.

            This field is returned if you handled the reward redemption outside of Marqeta's credit platform.
          format: date-time
          type: string
        note:
          type: string
        receiving_account_token:
          description: |-
            Unique identifier of the external account receiving the reward redemption.
            This token is equivalent to the <</core-api/payment-sources, payment source>> token.
          maxLength: 36
          type: string
        related_reward_entries:
          description: Contains one or more reward entries related to the redemption.
          items:
            $ref: '#/components/schemas/RewardProgramsEntriesResponse'
          type: array
        reward_program_token:
          description: Unique identifier of the reward program for which to redeem
            rewards.
          maxLength: 36
          type: string
        sor_reward_token:
          description: |-
            Unique identifier of the system of reward (SOR) reward that was created to represent the reward redemption as a `STATEMENT_CREDIT` on a credit account.
            The SOR entry is a positive amount that is added to the account balance.
          maxLength: 36
          type: string
        status:
          $ref: '#/components/schemas/RedemptionStatus'
        token:
          description: Unique identifier of the reward redemption.
          maxLength: 36
          type: string
        type:
          $ref: '#/components/schemas/RedemptionType'
        updated_time:
          description: Date and time when the reward redemption was last updated on
            the Marqeta platform, in UTC.
          format: date-time
          type: string
      required:
        - amount
        - created_time
        - note
        - reward_program_token
        - status
        - token
        - type
        - updated_time
      type: object
    RefundDetails:
      description: Details for refund.
      properties:
        description:
          description: Description of the refund.
          type: string
        method:
          $ref: '#/components/schemas/RefundMethod'
      required:
        - description
        - method
      type: object
    RefundDetailsResponse:
      description: Contains details for a refund.
      nullable: true
      properties:
        description:
          description: Description of the refund.
          type: string
        method:
          $ref: '#/components/schemas/RefundMethod'
        status:
          $ref: '#/components/schemas/RefundStatus'
      required:
        - description
        - method
        - status
      type: object
    RefundMethod:
      description: Method of the refund.
      enum:
        - CHECK
      type: string
    RefundStatus:
      description: Current status of the refund.
      enum:
        - COMPLETED
      type: string
    ResourceStatus:
      description: |-
        Status of the credit product.

        * `DRAFT` - The credit product is in the process of being created.
        * `PENDING_APPROVAL` - The credit product has been created and is awaiting approval.
        * `SENT_FOR_REVISION` - The credit product has been returned for revision.
        * `ACTIVE` - The credit product is active.
        * `REJECTED` - The credit product has been rejected; this status cannot be changed.
        * `ARCHIVED` - The previously active credit product has been archived.
      enum:
        - DRAFT
        - PENDING_APPROVAL
        - SENT_FOR_REVISION
        - ACTIVE
        - REJECTED
        - ARCHIVED
      type: string
    ReturnedDetails:
      description: Contains information on a returned payment.
      nullable: true
      properties:
        return_code:
          description: |-
            Return code for the returned payment.
            For more, see <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes>>.
          type: string
        return_reason:
          description: |-
            Reason the payment was returned.
            For more, see <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes>>.
          type: string
      required:
        - return_code
        - return_reason
      type: object
    ReversalModel:
      properties:
        amount:
          type: number
        find_original_window_days:
          format: int32
          type: integer
        is_advice:
          default: false
          type: boolean
        network_fees:
          items:
            $ref: '#/components/schemas/network_fee_model'
          type: array
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - original_transaction_token
      type: object
    RewardCreateReq:
      properties:
        amount:
          description: Amount of the reward.
          exclusiveMinimum: true
          minimum: 0
          type: number
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the reward.
          maxLength: 255
          type: string
        note:
          description: Additional information about the reward.
          maxLength: 255
          type: string
        token:
          description: Unique identifier of the reward.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount
        - currency_code
        - description
        - type
      type: object
    RewardEntryStatus:
      description: Status of the reward entry.
      enum:
        - PENDING
        - POSTED
      type: string
    RewardProgramsBalancesResponse:
      properties:
        billing_cycle_closing_date:
          description: Closing date of the billing cycle for which rewards were accrued,
            in UTC.
          format: date-time
          type: string
        billing_cycle_opening_date:
          description: Opening date of the billing cycle for which rewards were accrued,
            in UTC.
          format: date-time
          type: string
        net_balance:
          description: |-
            The net balance for a billing cycle, which is total amount spent during a billing cycle, minus any refunds or reversals.
            Used to determine reward accrual.
          format: decimal
          type: number
        pending_reward_balance:
          description: |-
            The pending balance of the rewards accrued for the current billing cycle.
            Pending rewards cannot be redeemed.
          format: decimal
          type: number
        percentage:
          description: |-
            The reward percentage applied to the balance for the current billing cycle.
            Determined by the reward rules config.
          type: integer
        reward_program_token:
          description: Unique identifier of reward program for which to return balances.
          maxLength: 36
          type: string
        total_reward_balance:
          description: The total balance of the rewards accrued to date minus the
            rewards redeemed to date.
          format: decimal
          type: number
      required:
        - billing_cycle_closing_date
        - billing_cycle_opening_date
        - net_balance
        - pending_reward_balance
        - percentage
        - reward_program_token
        - total_reward_balance
      type: object
    RewardProgramsEntriesBalanceResponse:
      properties:
        created_date:
          description: Date and time the reward entries balance was created on the
            Marqeta platform, in UTC.
          format: date-time
          type: string
        end_date:
          description: |-
            The ending date (or date-time) of a date range from which to return accrued rewards, in UTC.
            Reward entries created on or before this date count toward the total reward balance.
          format: date-time
          type: string
        reward_program_token:
          description: Unique identifier of the reward program for which to retrieve
            the reward entries balance.
          maxLength: 36
          type: string
        start_date:
          description: |-
            The starting date (or date-time) of a date range from which to return accrued rewards, in UTC.
            Reward entries created on or after this date count toward the total reward balance.
          format: date-time
          type: string
        total_reward_balance:
          description: The total balance of rewards accrued within a date range.
          format: decimal
          type: number
      required:
        - created_time
        - end_date
        - reward_program_token
        - start_date
        - total_reward_balance
      type: object
    RewardProgramsEntriesPage:
      description: Return paginated reward entries.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: An array of reward entry objects.
          items:
            $ref: '#/components/schemas/RewardProgramsEntriesResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int64
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int64
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    RewardProgramsEntriesResponse:
      properties:
        created_time:
          description: Date and time when the reward entry was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        mcc:
          description: Merchant category code (MCC) of the related journal entry.
          type: string
        mid:
          description: Merchant identifier (MID) of the related journal entry.
          type: string
        note:
          description: A note providing information on the reward entry.
          type: string
        related_journal_entry_token:
          description: Unique identifier of the related journal entry to which the
            reward rule was applied to trigger the reward entry.
          maxLength: 36
          type: string
        related_redemption_token:
          description: Unique identifier of the related redemption token that triggered
            the reward entry.
          maxLength: 36
          type: string
        reward_program_token:
          description: Unique identifier of the reward program for which to return
            reward entries.
          maxLength: 36
          type: string
        reward_rules_config_token:
          description: Unique identifier of the reward rules config used to determine
            the value of the reward entry.
          maxLength: 36
          type: string
        status:
          $ref: '#/components/schemas/RewardEntryStatus'
        token:
          description: Unique identifier of the reward entry.
          maxLength: 36
          type: string
        transaction_amount:
          description: |-
            The transaction amount to which the reward rule was applied.
            Used to determine the value of the reward entry.
          format: decimal
          type: number
        value:
          description: Value of the reward entry.
          format: decimal
          type: number
      required:
        - created_time
        - note
        - related_journal_entry_token
        - reward_program_token
        - reward_rules_config_token
        - status
        - token
        - transaction_amount
      type: object
    RewardProgramsPageResponse:
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: An array of reward program objects.
          items:
            $ref: '#/components/schemas/RewardProgramsResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int64
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int64
          type: integer
      required:
        - count
        - data
        - end_index
        - start_index
      type: object
    RewardProgramsResponse:
      properties:
        account_token:
          description: Unique identifier of the associated credit account.
          maxLength: 36
          type: string
        bundle_token:
          description: Unique identifier of the associated bundle that contains the
            reward policy on which the reward program is based.
          maxLength: 36
          type: string
        calculation_type:
          $ref: '#/components/schemas/CalculationType'
        created_time:
          description: Date and time when the reward program was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        is_active:
          description: A value of `true` indicates that the reward program is active.
          type: boolean
        note:
          description: A note that provides information on the reward program.
          type: string
        token:
          description: Unique identifier of the reward program.
          maxLength: 36
          type: string
        updated_time:
          description: Date and time when the reward program was last updated on the
            Marqeta platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - bundle_token
        - calculation_type
        - created_time
        - is_active
        - note
        - token
        - updated_time
      type: object
    RewardProgramsRulesConfigsPage:
      description: Return paginated rules configs for a reward program.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: An array of rules config objects.
          items:
            $ref: '#/components/schemas/RewardProgramsRulesConfigsResponse'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int64
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int64
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    RewardProgramsRulesConfigsResponse:
      properties:
        accrual_type:
          $ref: '#/components/schemas/AccrualType'
        created_time:
          description: Date and time when the reward rules config was created on the
            Marqeta platform, in UTC.
          format: date-time
          type: string
        greater_than:
          description: |-
            Minimum amount that the balance for a billing cycle can be to apply the specified reward percentage.
            For example, if the `greater_than` value is `500`, the account holder earns _x_% of the account balance if they spend over $500 during a billing cycle.
          exclusiveMinimum: true
          format: decimal
          minimum: 0
          type: number
        is_active:
          description: A value of `true` indicates that the reward rules config is
            active.
          type: boolean
        less_than:
          description: |-
            Maximum amount that the balance for a billing cycle can be to apply the specified reward percentage.
            For example, if the `less_than` value is `1500`, the account holder earns _x_% of the account balance if they spend under $1500 during a billing cycle.
          exclusiveMinimum: true
          format: decimal
          minimum: 0
          type: number
        percentage:
          description: |-
            The reward percentage applied when the balance for a billing cycle is within the range specified in the `less_than` and `greater_than` fields.
            For example, if the `percentage` is `1`, the account holder earns 1% of the account balance if they spend between the `less_than` and `greater_than` amounts during a billing cycle.
          type: integer
        reward_program_token:
          description: Unique identifier of the reward program on which the rules
            config is applied.
          maxLength: 36
          type: string
        token:
          description: Unique identifier of the reward rules config.
          maxLength: 36
          type: string
        updated_time:
          description: Date and time when the reward rules config was last updated
            on the Marqeta platform, in UTC.
          format: date-time
          type: string
      required:
        - accrual_type
        - created_time
        - is_active
        - percentage
        - reward_program_token
        - token
        - updated_time
      type: object
    RewardResponse:
      properties:
        account_token:
          description: Unique identifier of the account on which the reward exists.
          maxLength: 36
          type: string
        amount:
          description: Amount of the reward.
          minimum: 0
          type: number
        applied_to_amount:
          description: |-
            The total amount to which a percentage reward method is applied (for example, if a 3% reward is applied to 100, then `100` is the `applied_to_amount` value).

            This field is not applicable for a flat fee method.

            Returned for auto-cash back reward types only.
          type: number
        created_time:
          description: Date and time when the reward was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        description:
          description: Description of the reward.
          type: string
        method:
          $ref: '#/components/schemas/Method'
        note:
          description: Additional information about the reward.
          type: string
        token:
          description: |-
            Unique identifier of the reward.

            If in the `detail_object`, unique identifier of the detail object.
          type: string
        type:
          $ref: '#/components/schemas/RewardType'
        updated_time:
          description: Date and time when the reward was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        value:
          description: |-
            Value of the percentage or flat amount.

            Returned for auto-cash back reward types only.
          type: number
      required:
        - amount
        - created_time
        - currency_code
        - description
        - token
        - type
        - updated_time
      type: object
    RewardType:
      description: Type of reward.
      enum:
        - AUTO_CASH_BACK
        - CASH_BACK
      type: string
    ShippingInformationResponse:
      description: |-
        Specifies shipping details for the order.

        This object is returned if it exists in the resource.
      properties:
        care_of_line:
          description: |-
            Specifies the value of the care of (C/O) line on the mailing carrier.

            This field is returned if it exists in the resource.
          type: string
        method:
          description: |-
            Specifies the shipping service.

            This field is returned if it exists in the resource.
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
        recipient_address:
          $ref: '#/components/schemas/FulfillmentAddressResponse'
        return_address:
          $ref: '#/components/schemas/FulfillmentAddressResponse'
      type: object
    StatementFile:
      description: A collection of statement files.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the statement
            PDF file is generated.
          maxLength: 36
          type: string
        closing_date:
          description: Date and time when the statement period ended.
          format: date-time
          type: string
        opening_date:
          description: Date and time when the statement period began.
          format: date-time
          type: string
        signed_url:
          description: The signed URL to retrieve the statement PDF file.
          type: string
        statement_summary_token:
          description: Unique identifier of the statement summary.
          format: uuid
          type: string
        token:
          description: Unique identifier of the statement file.
          type: string
        type:
          description: Type of file.
          enum:
            - STATEMENT_PDF
          type: string
      type: object
    StatementFilePage:
      description: Returns paginated statement files.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of statement files.
          items:
            $ref: '#/components/schemas/StatementFile'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    StatementInterestCharge:
      description: Contains information on statement interest charges.
      properties:
        amount:
          description: Amount of interest calculated for the billing period.
          type: number
        apr_type:
          description: Type of APR.
          enum:
            - GO_TO
          type: string
        apr_value:
          description: Annual percentage rate.
          maximum: 100
          minimum: 0
          type: number
        balance_subject_to_interest_rate:
          description: Average daily balance used to calculate interest.
          type: number
        balance_type:
          description: |-
            Type of balance.

            * `PURCHASE` - The balance on purchases.
          enum:
            - PURCHASE
          type: string
      type: object
    StatementInterestChargesPage:
      description: Return paginated statement interest charges.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the statement
            interest charge is generated.
          maxLength: 36
          type: string
        data:
          description: Contains one or more interest charges on a statement.
          items:
            $ref: '#/components/schemas/StatementInterestCharge'
          type: array
        statement_summary_token:
          description: Unique identifier of the statement summary.
          type: string
      required:
        - account_token
        - data
        - statement_summary_token
      type: object
    StatementPaymentInfo:
      description: Contains information on a statement payment.
      properties:
        created_time:
          description: Date and time when the statement payment information was created
            on Marqeta's credit platform, in UTC.
          format: date-time
          type: string
        minimum_payment_due:
          description: Minimum payment amount for the current statement period, based
            on the associated credit product settings.
          type: number
        new_statement_balance:
          description: Balance on the credit account when the statement period ended.
          type: number
        payment_cutoff_date:
          description: Last day a payment can be made before interest and fees are
            charged to the account.
          format: date-time
          type: string
        payment_due_date:
          description: Payment due date, based on the credit account settings.
          format: date-time
          type: string
        statement_summary_token:
          description: Unique identifier of the statement summary.
          format: uuid
          type: string
        three_year_savings:
          description: Savings amount if the balance is paid off in three years versus
            only making minimum payments.
          type: number
        token:
          description: Unique identifier of the statement payment.
          format: uuid
          type: string
        warnings:
          description: One or more payoff warnings.
          items:
            $ref: '#/components/schemas/StatementPaymentWarning'
          type: array
      type: object
    StatementPaymentWarning:
      description: Contains information on statement payment warnings.
      properties:
        disclosure:
          description: |-
            Statement disclosure in the case of negative or no amortization, or no lifetime repayment for the minimum payment warning type.

            * `NEGATIVE_OR_NO_AMORTIZATION` - Occurs when the interest amount is higher than the minimum payment; results in the outstanding balance remaining in perpetuity.
            * `NO_LIFETIME_REPAYMENT` - Occurs when the interest amount is just below the minimum payment; results in the outstanding balance taking longer than a lifetime to pay off.
          enum:
            - NEGATIVE_OR_NO_AMORTIZATION
            - NO_LIFETIME_REPAYMENT
          type: string
        interest_paid:
          description: |-
            For the minimum payment warning type, this value represents the total amount of interest to pay off the statement balance if only making the minimum payment each month.

            For the 3 Year warning type, this value represents the total amount of interest if paying off the statement balance in three years.
          type: number
        monthly_payment:
          description: |-
            For the minimum payment warning type, this value is 0.

            For the 3 Year warning type, this value represents the fixed monthly payment amount required to pay off the statement balance in three years.
          type: number
        pay_off_period:
          description: |-
            For the minimum payment warning type, this value represents the number of periods required to pay off the statement balance.

            For the 3 Year warning type, this value is 36 (months).
          minimum: 1
          type: integer
        period_type:
          description: Time unit of the pay off period.
          enum:
            - MONTH
            - YEAR
          type: string
        total_paid:
          description: |-
            For the minimum payment warning type, this value represents the total amount of principal and interest to pay off the statement balance if only making the minimum payment each month.

            For the 3 Year warning type, this value represents the total amount of principal and interest if paying off the statement balance in three years.
          type: number
        type:
          description: |-
            Type of statement warning.

            * `MIN_PAYMENT` - Displays the total estimated payment amount and how long it would take to pay off the statement balance if only making minimum payments.
            * `3_YEAR` - Displays the monthly payment amount and total estimated payment amount if paying off the statement balance in three years.
          enum:
            - MIN_PAYMENT
            - 3_YEAR
          type: string
      type: object
    StatementReward:
      description: Contains information on statement rewards.
      properties:
        created_time:
          description: Date and time when the statement reward was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        current_billing_cycle_reward:
          description: Amount of rewards received in the current billing cycle.
          type: number
        previous_billing_cycle_reward:
          description: Amount of rewards received in the previous billing cycle.
          type: number
        token:
          description: Unique identifier of the rewards for a specific statement.
          type: string
      type: object
    StatementSummary:
      description: Contains the summary data for an account's monthly statement.
      properties:
        account_token:
          description: Unique identifier of the credit account on which the statement
            summary is generated.
          maxLength: 36
          type: string
        available_credit:
          description: Amount available to spend on the credit account, as of the
            statement closing date.
          type: number
        closing_balance:
          description: Balance of the credit account when the statement period ended.
          type: number
        closing_date:
          description: Date and time when the statement period ended.
          format: date-time
          type: string
        created_time:
          description: Date and time when the statement summary was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        credit_limit:
          description: Maximum balance the credit account can carry, as of the statement
            closing date.
          type: number
        credits:
          description: Total amount of credits received during the statement period.
          type: number
        cycle_type:
          $ref: '#/components/schemas/CycleType'
        days_in_billing_cycle:
          description: Number of days in the billing cycle, also known as the statement
            period.
          type: integer
        fees:
          description: |-
            Total amount of fees charged during the statement period.
            Does not include periodic fees.
          type: number
        interest:
          description: Total amount of interest charged during the statement period.
          type: number
        opening_balance:
          description: Balance of the credit account when the statement period began.
          type: number
        opening_date:
          description: Date and time when the statement period began.
          format: date-time
          type: string
        past_due_amount:
          description: Total payment amount, required to make the account current.
          type: number
        payments:
          description: Total amount of payments made during the statement period.
          type: number
        purchases:
          description: Total amount of purchases made during the statement period.
          type: number
        token:
          description: Unique identifier of the statement summary.
          format: uuid
          type: string
      required:
        - account_token
        - available_credit
        - closing_balance
        - closing_date
        - created_time
        - credits
        - cycle_type
        - days_in_billing_cycle
        - fees
        - interest
        - opening_balance
        - opening_date
        - past_due_amount
        - payments
        - purchases
        - token
      type: object
    StatementSummaryPage:
      description: Return filtered transactions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: One or more statement summaries.
          items:
            $ref: '#/components/schemas/StatementSummary'
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description: A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    TransactionModelListResponse:
      properties:
        count:
          description: |-
            The number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of transaction objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/transaction_model'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    UserCardHolderListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of user objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/card_holder_model'
          type: array
        end_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    UserCardHolderUpdateModel:
      properties:
        account_holder_group_token:
          description: |-
            Associates the specified account holder group with the cardholder.
            Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the cardholder is in the `ACTIVE` state on the
            Marqeta platform.
          type: boolean
        address1:
          description: |-
            Cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information for the cardholder.

            *NOTE:* Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        birth_date:
          description: |-
            Cardholder's date of birth.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          type: string
        city:
          description: |-
            The city that corresponds to the address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: |-
            Country in which the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: |-
            A valid email address for the cardholder.

            This value must be unique among cardholders.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Cardholder's first name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        gender:
          description: Cardholder's gender.
          enum:
            - F
            - M
          maxLength: 1
          minLength: 0
          type: string
        honorific:
          description: 'Cardholder''s title or prefix: Ms., Mr., Miss, Mrs.'
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: The expiration date of the cardholder's identification card.
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: One or more objects containing identifications associated with
            the cardholder.
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          type: array
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_name:
          description: |-
            Cardholder's last name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: |-
            The unique identifier of a `user` or `business` resource already in the system.

            Required if `uses_parent_account = true`.
            This account holder is configured as the parent of the current cardholder.

            To unlink a child account from a parent account, update this field to a null value.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: |-
            Cardholder's telephone number (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.
            Do not include hyphens, spaces, or parentheses.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: The cardholder's Social Security Number (SSN).
          type: string
        state:
          description: |-
            State where the cardholder resides.

            *NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only).
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: The unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: |-
            Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).

            If set to `true`, you must also include a `parent_token` in the request.
            This value cannot be updated.
          type: boolean
      type: object
    UserTransitionListResponse:
      properties:
        count:
          description: |-
            The number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of user transition objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/UserTransitionResponse'
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    UserTransitionRequest:
      properties:
        channel:
          description: The mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        idempotentHash:
          description: A unique hashed value that identifies subsequent submissions
            of the user transition request.
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:
            *00:* Object activated for the first time.
            *01:* Requested by you.
            *02:* Inactivity over time.
            *03:* This address cannot accept mail or the addressee is unknown.
            *04:* Negative account balance.
            *05:* Account under review.
            *06:* Suspicious activity was identified.
            *07:* Activity outside the program parameters was identified.
            *08:* Confirmed fraud was identified.
            *09:* Matched with an Office of Foreign Assets Control list.
            *10:* Card was reported lost.
            *11:* Card information was cloned.
            *12:* Account or card information was compromised.
            *13:* Temporary status change while on hold/leave.
            *14:* Initiated by Marqeta.
            *15:* Initiated by issuer.
            *16:* Card expired.
            *17:* Failed KYC.
            *18:* Changed to `ACTIVE` because information was properly validated.
            *19:* Changed to `ACTIVE` because account activity was properly validated.
            *20:* Change occurred prior to the normalization of reason codes.
            *21:* Initiated by a third party, often a digital wallet provider.
            *22:* PIN retry limit reached.
            *23:* Card was reported stolen.
            *24:* Address issue.
            *25:* Name issue.
            *26:* SSN issue.
            *27:* DOB issue.
            *28:* Email issue.
            *29:* Phone issue.
            *30:* Account/fulfillment mismatch.
            *31:* Other reason.
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        status:
          description: Specifies the new status of the user.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: |-
            The unique identifier of the user transition.

            If you do not include a token, the system generates one automatically.
            This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.
            This value cannot be updated.
          type: string
        user_token:
          description: The unique identifier of the user whose status is transitioned.
          type: string
      required:
        - channel
        - reason_code
        - status
        - user_token
      type: object
    UserTransitionResponse:
      properties:
        channel:
          description: The mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: The date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: "Identifies the standardized reason for the transition:\n*00:*\
            \ Object activated for the first time.\n*01:* Requested by you.\n*02:*\
            \ Inactivity over time.\n*03:* This address cannot accept mail or the\
            \ addressee is unknown.\n*04:* Negative account balance.\n*05:* Account\
            \ under review.\n*06:* Suspicious activity was identified.\n*07:* Activity\
            \ outside the program parameters was identified.\n*08:* Confirmed fraud\
            \ was identified.\n*09:* Matched with an Office of Foreign Assets Control\
            \ list.\n*10:* Card was reported lost.\n*11:* Card information was cloned.\n\
            *12:* Account or card information was compromised.\n*13:* Temporary status\
            \ change while on hold/leave.\n*14:* Initiated by Marqeta.\n*15:* Initiated\
            \ by issuer.\n*16:* Card expired.\n*17:* Failed KYC.\n*18:* Changed to\
            \ `ACTIVE` because information was properly validated.\n*19:* Changed\
            \ to `ACTIVE` because account activity was properly validated.\n*20:*\
            \ Change occurred prior to the normalization of reason codes.\n*21:* Initiated\
            \ by a third party, often a digital wallet provider.\n*22:* PIN retry\
            \ limit reached.\n*23:* Card was reported stolen.\n*24:* Address issue.\n\
            *25:* Name issue.\n*26:* SSN issue.\n*27:* DOB issue.\n*28:* Email issue.\n\
            *29:* Phone issue.\n*30:* Account/fulfillment mismatch.\n*31:* Other reason. "
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        status:
          description: Specifies the new status of the user.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: The unique identifier of the user transition.
          type: string
        user_token:
          description: The unique identifier of the user whose status is transitioned.
          type: string
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
    UserValidationRequest:
      description: Contains information about the user.
      properties:
        birth_date:
          description: Date of birth of the user associated with this card.
          format: date-time
          type: string
        phone:
          description: Telephone number of the user associated with this card.
          maxLength: 255
          minLength: 0
          type: string
        random_name_line1_postfix:
          description: |-
            Random six-digit numeric postfix generated for some bulk card orders.

            See <</core-api/bulk-card-orders, Bulk Card Orders>> for more information about numeric postfixes.
          maxLength: 6
          minLength: 6
          type: string
        ssn:
          description: Social Security Number (SSN) of the user associated with this
            card.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    UserValidationResponse:
      description: Contains information about the user.
      properties:
        birth_date:
          default: false
          description: Indicates whether the `birth_date` field in the request was
            validated.
          type: boolean
        phone:
          default: false
          description: Indicates whether the `phone` field in the request was validated.
          type: boolean
        random_name_line1_postfix:
          default: false
          description: Indicates whether the `random_name_line1_postfix` field in
            the request was validated.
          type: boolean
        ssn:
          default: false
          description: Indicates whether the `ssn` field in the request was validated.
          type: boolean
      required:
        - birth_date
        - phone
        - random_name_line1_postfix
        - ssn
      type: object
    ValidationsRequest:
      description: Contains information about the user.
      properties:
        user:
          $ref: '#/components/schemas/UserValidationRequest'
      type: object
    ValidationsResponse:
      description: Contains information about the user.
      properties:
        user:
          $ref: '#/components/schemas/UserValidationResponse'
      required:
        - user
      type: object
    VelocityControlBalanceListResponse:
      properties:
        count:
          description: |-
            Number of velocity control resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of velocity control objects that include available balances.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/velocity_control_balance_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    VelocityControlListResponse:
      properties:
        count:
          description: |-
            Number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of velocity control objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/velocity_control_response'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    WebhookEventResendContainerResponse:
      description: Contains information about a webhook event.
      properties:
        unused:
          description: The event notification that was resent to your webhook endpoint.
          type: string
      type: object
    WebhookResponseModelListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of webhooks resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: '#/components/schemas/webhook_response_model'
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    WebhookUpdateCustomHeaderRequest:
      properties:
        custom_header:
          additionalProperties:
            type: string
          description: |-
            Additional custom information included in the HTTP header.
            For example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.
          type: object
      type: object
    YearToDate:
      description: Contains information about year-to-date totals for an account.
      properties:
        account_token:
          description: Unique identifier of the associated credit account.
          maxLength: 36
          type: string
        created_time:
          description: Date and time when the year-to-date total was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        statement_token:
          description: Unique identifier of the statement summary from which to retrieve
            year-to-date totals.
          format: uuid
          type: string
        token:
          description: Unique identifier of the year-to-date total.
          format: uuid
          type: string
        total_fees:
          description: Total fees charged year-to-date.
          type: number
        total_interest:
          description: Total interest charged year-to-date.
          type: number
      required:
        - account_token
        - statement_token
        - total_fees
        - total_interest
      type: object
    accepted_countries_model:
      properties:
        country_codes:
          description: Comma-delimited list of accepted countries by ISO 3166 three-digit
            country code.
          items:
            description: ISO 3166 three-digit numeric country code.
            type: string
          type: array
        created_time:
          description: |-
            Date and time when the accepted countries object was created, in UTC.
            This field is returned when included in your query.
          format: date-time
          type: string
        is_whitelist:
          default: false
          description: |-
            Specifies if the list of accepted countries in this object is an allow list.
            If set to `true`, transactions are accepted for all countries included in the object's `country_codes` array.
            If set to `false`, transactions are prohibited for all countries included in the object's `country_codes` array.
          type: boolean
        last_modified_time:
          description: |-
            Date and time when the accepted countries object was last updated, in UTC.
            This field is returned when included in your query.
          format: date-time
          type: string
        name:
          description: Name of the `acceptedcountries` object.
          type: string
        token:
          description: |-
            The unique identifier of the `acceptedcountries` object.

            This field is always returned.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - country_codes
        - is_whitelist
        - name
      type: object
    access_token_response:
      description: Contains a cardholder's login access information.
      properties:
        accesstoken_id:
          type: string
        application:
          $ref: '#/components/schemas/Application'
        expires:
          description: The date and time when the access token expires.
          format: date-time
          type: string
        master_roles:
          description: An array of master roles.
          items:
            type: string
          type: array
        one_time:
          description: Indicates whether the access token is a single-use token.
          type: boolean
        token:
          description: The access token.
          type: string
        token_type:
          description: Specifies the type of access token.
          type: string
        user_token:
          description: The unique identifier of the `user` resource.
          type: string
      required:
        - expires
      type: object
    account:
      description: Contains information related to the cardholder and provided by
        the digital wallet provider.
      properties:
        email_address:
          description: Digital wallet provider's email address for the cardholder.
          type: string
        id:
          description: Digital wallet provider's identity number for the cardholder.
          type: string
        score:
          description: Score from the digital wallet provider.
          type: string
      type: object
    account_funding:
      properties:
        funding_source:
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
          type: string
        receiver_account_type:
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
        receiver_name:
          type: string
        screening_score:
          type: string
        transaction_purpose:
          type: string
        transaction_type:
          enum:
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - WALLET_TRANSFER
            - MONEY_TRANSFER_BY_BANK
            - BUSINESS_TO_BUSINESS
            - DISBURSEMENT
            - GOVERNMENT_DISBURSEMENT
            - GAMBLING_PAYOUT
            - LOYALTY
            - MERCHANT_DISBURSEMENT
            - ONLINE_GAMBLING_PAYOUT
            - PENSION_DISBURSEMENT
            - PREPAID_LOADS
            - CARD_BILL_PAYMENT
            - BILL_PAYMENT
            - CASH_CLAIM
            - CASH_IN
            - CASH_OUT
            - MOBILE_AIR_TIME_PAYMENT
            - MONEY_TRANSFER_BY_MERCHANT
            - FACE_TO_FACE_MERCHANT_PAYMENT
            - GOVERNMENT_PAYMENT
            - PAYMENTS_GOODS_SERVICES
            - FUNDS_TRANSFER
            - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
            - BUSINESS_TO_BUSINESS_TRANSFER
            - CASH_DEPOSIT
          type: string
      type: object
    account_holder_group_config:
      description: Contains configuration fields for the account holder group.
      properties:
        is_reloadable:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder's account from being reloaded with funds after the initial load.

            This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments.
          type: boolean
        kyc_required:
          description: If set to `ALWAYS`, new account holders are created in an `UNVERIFIED`
            status and must pass identity verification (KYC) before they can be active;
            if set to `CONDITIONAL`, new account holders begin in a `LIMITED` status
            and have limited actions available before passing identity verification;
            if set to `NEVER`, new account holders are created in an active state.
          enum:
            - ALWAYS
            - CONDITIONAL
            - NEVER
          type: string
        pre_kyc_controls:
          $ref: '#/components/schemas/pre_kyc_controls'
        real_time_fee_group_token:
          description: Associates the specified real-time fee group with the members
            of the account holder group.
          maxLength: 36
          minLength: 0
          type: string
      type: object
    account_holder_group_request:
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          description: Descriptive name for the account holder group.
          maxLength: 40
          minLength: 1
          type: string
        token:
          description: Unique identifier of the account holder group.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    account_holder_group_response:
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          description: |-
            Descriptive name for the account holder group.

            This field is returned if it exists in the resource.
          type: string
        token:
          description: |-
            Unique identifier of the account holder group.

            This field is always returned.
          type: string
      type: object
    account_holder_group_update_request:
      properties:
        config:
          $ref: '#/components/schemas/account_holder_group_config'
        name:
          description: Descriptive name for the account holder group.
          maxLength: 40
          minLength: 1
          type: string
      type: object
    ach_model:
      properties:
        account_number:
          description: ACH account number.
          type: string
        account_type:
          description: Type of account.
          enum:
            - checking
            - savings
            - corporate
            - loan
          type: string
        bank_name:
          description: Name of the financial institution where the ACH account is
            held.
          type: string
        business_token:
          description: |-
            Unique identifier of the `business` account holder.
            This token is required if a `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        name_on_account:
          description: Name on the ACH account.
          maxLength: 50
          minLength: 1
          type: string
        routing_number:
          description: Routing number for the ACH account.
          readOnly: true
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the `user` account holder.
            This token is required if a `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
    ach_partner_request_model:
      properties:
        business_token:
          description: Required if 'user_token' is null
          maxLength: 36
          minLength: 1
          type: string
        idempotentHash:
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        partner:
          enum:
            - PLAID
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          type: string
        user_token:
          description: Required if 'business_token' is null
          maxLength: 36
          minLength: 1
          type: string
      required:
        - partner
        - partner_account_link_reference_token
      type: object
    ach_response_model:
      properties:
        account_suffix:
          description: ACH account identifier appended to the bank account number.
          type: string
        account_type:
          description: Type of account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        bank_name:
          description: |-
            Name of the bank holding the account.
            This field is returned if it exists in the resource.
          type: string
        business_token:
          description: |-
            Unique identifier of the `business` account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        date_sent_for_verification:
          description: |-
            Date and time when the account was sent for verification, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            Date and time when the account was verified, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.

            This field is returned if it exists in the resource.
          type: boolean
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        name_on_account:
          description: Name on the ACH account.
          type: string
        partner:
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          description: Unique identifier of the funding source.
          type: string
        user_token:
          description: |-
            Unique identifier of the `user` account holder.
            This token is returned if a `business_token` is not specified.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: |-
            Allows the ACH funding source to be used regardless of its verification status.
            This field is returned if it exists in the resource.
          type: boolean
        verification_status:
          description: |-
            Account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
    ach_verification_model:
      properties:
        active:
          default: false
          description: Indicates whether the ACH funding source is active.
          type: boolean
        verify_amount1:
          description: Verification amount.
          type: number
        verify_amount2:
          description: Verification amount.
          type: number
      type: object
    acquirer:
      description: Contains information about the merchant's financial institution.
      properties:
        institution_country:
          description: Country code of the merchant's financial institution.
          type: string
        institution_id_code:
          description: Identifier code of the merchant's financial institution.
          type: string
        network_international_id:
          description: The international network identifier.
          type: string
        retrieval_reference_number:
          description: Retrieval reference number of the merchant's financial institution.
          type: string
        system_trace_audit_number:
          description: System trace audit number of the merchant's financial institution.
          type: string
      type: object
    activation_actions:
      description: |-
        Defines actions to execute when the card is activated.
        The fields in this object are mutually exclusive.
      properties:
        swap_digital_wallet_tokens_from_card_token:
          description: |-
            Moves all digital wallet tokens from the specified card to the new card.

            Not relevant when `reissue_pan_from_card_token` is set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          minLength: 1
          type: string
        terminate_reissued_source_card:
          default: true
          description: |-
            If you are reissuing a card, the source card is terminated by default.
            To prevent the source card from being terminated, set this field to `false`.

            Only relevant when `reissue_pan_from_card_token` is set.
          type: boolean
      type: object
    address_verification:
      description: Contains address verification information.
      properties:
        name:
          description: Name of the cardholder.
          type: string
        postal_code:
          description: Postal code.
          type: string
        street_address:
          description: Street address provided by the cardholder.
          type: string
        zip:
          description: United States ZIP code.
          type: string
      type: object
    address_verification_model:
      description: Contains address verification data consisting of address data entered
        by the cardholder, address data held by the Marqeta platform, and an assertion
        by the Marqeta platform as to whether the two sets of data match.
      properties:
        on_file:
          $ref: '#/components/schemas/avs_information'
        request:
          $ref: '#/components/schemas/avs_information'
        response:
          $ref: '#/components/schemas/response'
      type: object
    address_verification_source:
      description: Contains address verification data consisting of address data entered
        by the cardholder, address data held by the Marqeta platform, and an assertion
        by the Marqeta platform as to whether the two sets of data match.
      properties:
        on_file:
          $ref: '#/components/schemas/avs_information'
        response:
          $ref: '#/components/schemas/response'
      type: object
    airline:
      description: Contains information about airline-related transactions.
      properties:
        depart_date:
          description: The date and time of departure.
          format: date-time
          type: string
        origination_city:
          description: The city where the flight originates.
          type: string
        passenger_name:
          description: The name of the passenger.
          type: string
      type: object
    android_push_tokenize_request_data:
      description: Contains details about a card tokenization push request.
      properties:
        display_name:
          description: |-
            Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).
            `Visa 5678`, for example.
          type: string
        last_digits:
          description: Last four digits of the primary account number of the physical
            or virtual card.
          type: string
        network:
          description: Specifies the card network of the physical or virtual card.
          type: string
        opaque_payment_card:
          description: Encrypted data field created by the issuer and passed to Google
            Wallet during the push provisioning process.
          type: string
        token_service_provider:
          description: Specifies the network that provides the digital wallet token
            service.
          type: string
        user_address:
          $ref: '#/components/schemas/AndroidPushTokenRequestAddress'
      type: object
    atc_information:
      properties:
        atc_discrepancy_indicator:
          type: string
        atc_discrepancy_value:
          type: number
        atc_value:
          type: number
      type: object
    auth_control_exempt_mids_request:
      properties:
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          description: Date and time when the exception ends, in UTC.
          format: date-time
          type: string
        merchant_group_token:
          description: |-
            Unique identifier of the merchant group to be exempted.
            This field is required if there is no entry in the `mid` field.
            Pass either this field or the `mid` field, not both.

            For information about merchant groups, see <</core-api/merchant-groups, Merchant Groups>>.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant to be exempted.
            This field is required if there is no entry in the `merchant_group_token` field.
            Use either this field or the `merchant_group_token` field, not both.
          maxLength: 36
          minLength: 1
          type: string
        name:
          description: Name of the merchant identifier authorization control exemption.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: Date and time when the exception starts, in UTC.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the merchant identifier authorization control exemption.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          type: string
      required:
        - name
      type: object
    auth_control_exempt_mids_response:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the merchant identifier authorization control exception is active.

            This field is returned if it exists in the resource.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        created:
          description: |-
            Date and time when the resource was created, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        end_time:
          description: |-
            Date and time when the exception ends, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        last_updated:
          description: |-
            Date and time when the resource was last updated, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        merchant_group_token:
          description: |-
            Unique identifier of the merchant group to be exempted.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant to be exempted.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        name:
          description: Name of the merchant identifier authorization control exemption.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: |-
            Date and time when the exception starts, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the merchant identifier authorization control exemption.

            This field is always returned.
          type: string
      required:
        - name
      type: object
    auth_control_exempt_mids_update_request:
      properties:
        active:
          default: false
          description: Indicates whether the merchant identifier authorization control
            exception is active.
          type: boolean
      type: object
    auth_control_merchant_scope:
      description: |-
        Defines the group of merchants to which the authorization control applies.
        This object is required if the `association` object is not included in your request.
        Your request can include both the `merchant_scope` and `association` objects.

        If you include this object in your request, you must populate one or more of its fields.
        If no fields are populated, the authorization control applies to all merchants.
      properties:
        mcc:
          description: |-
            Merchant Category Code (MCC).
            Identifies the type of goods or services provided by the merchant.

            Enter a value to control access to a particular type of product or service.

            See <</developer-guides/controlling-spending, Controlling Spending>> for links to more information about merchant category codes.
          maxLength: 4
          minLength: 1
          type: string
        mcc_group:
          description: |-
            Token identifying a group of MCCs.

            Enter a value to control access to a group of product or service types.
          maxLength: 36
          minLength: 1
          type: string
        merchant_group_token:
          description: |-
            Unique identifier of a merchant group.

            Enter a value to control access to a group of merchants.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant identifier (MID).
            Identifies a specific merchant.

            Enter a value to control access to a particular merchant.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    auth_control_request:
      properties:
        active:
          default: true
          description: Indicates whether the authorization control is active.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          description: Date and time when the exception ends, in UTC.
          format: date-time
          type: string
        merchant_scope:
          $ref: '#/components/schemas/auth_control_merchant_scope'
        name:
          description: Name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: Date and time when the exception goes into effect, in UTC.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the authorization control.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    auth_control_response:
      properties:
        active:
          default: true
          description: |-
            Indicates whether the authorization control is active.

            This field is returned if it exists in the resource.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          description: |-
            Date and time when the exception ends, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        merchant_scope:
          $ref: '#/components/schemas/auth_control_merchant_scope'
        name:
          description: Name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: |-
            Date and time when the exception goes into effect, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the authorization control.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    auth_control_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the authorization control is active.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        end_time:
          description: Date and time when the exception ends, in UTC.
          format: date-time
          type: string
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        name:
          description: Name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: Date and time when the exception goes into effect, in UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the authorization control.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    auth_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_options:
          $ref: '#/components/schemas/card_options'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          items:
            $ref: '#/components/schemas/network_fee_model'
          type: array
        pin:
          maxLength: 50
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - card_token
        - mid
      type: object
    authorization_advice_model:
      properties:
        amount:
          type: number
        network_fees:
          items:
            $ref: '#/components/schemas/network_fee_model'
          type: array
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - original_transaction_token
      type: object
    authorization_controls:
      description: |-
        Controls the expiration of authorizations and automatic increases to the authorization amount for MCCs specified in this group.

        By default, these authorization controls apply program-wide, meaning that they apply to every card in your program.
        You can, however, exempt cards associated with any particular card product by setting that card product's `allow_mcc_group_authorization_controls` field to `false`.
      properties:
        hold_expiration_days:
          default: 7
          description: Specifies the number of days after which an authorization associated
            with this group expires.
          format: int32
          type: integer
        hold_increase:
          $ref: '#/components/schemas/hold_increase'
      type: object
    auto_reload_association:
      description: |-
        Specifies the scope of the auto reload.

        Input no more than one field.
        If no value is supplied, the auto reload applies at the program level.
      properties:
        business_token:
          description: |-
            Unique identifier of the business for which the auto reload is configured.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        card_product_token:
          description: |-
            Unique identifier of the card product for which the auto reload is configured.

            Send a `GET` request to `/cardproducts` to retrieve card product tokens.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user for which the auto reload is configured.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    auto_reload_model:
      description: |-
        Contains information about an auto reload.
        See <</core-api/auto-reload, Auto Reloads>> for more information.

        Returned if an auto reload was executed.
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: '#/components/schemas/auto_reload_association'
        currency_code:
          description: Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"].
          type: string
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this auto reload.

            If your funding source is an ACH account, then a `funding_source_address_token` is not required.
            If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.

            Send a `GET` request to `/fundingsources/addresses/user/{user_token}` to retrieve address tokens for a user.

            Send a `GET` request to `/fundingsources/addresses/business/{business_token}` to retrieve address tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: |-
            Unique identifier of the funding source to use for this auto reload.

            Send a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user.

            Send a `GET` request to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          description: |-
            Unique identifier of the auto reload.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - currency_code
        - order_scope
      type: object
    auto_reload_response_model:
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            This field is returned if it exists in the resource.
          type: boolean
        association:
          $ref: '#/components/schemas/auto_reload_association'
        created_time:
          description: Date and time when the auto reload object was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"].
          type: string
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this auto reload.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: |-
            Unique identifier of the funding source to use for this auto reload.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        last_modified_time:
          description: Date and time when the auto reload object was last modified,
            in UTC.
          format: date-time
          type: string
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          description: |-
            Unique identifier of the auto reload.

            This field is always returned.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - currency_code
        - last_modified_time
        - order_scope
      type: object
    auto_reload_update_model:
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: '#/components/schemas/auto_reload_association'
        currency_code:
          description: Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"].
          type: string
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this auto reload.

            If your funding source is an ACH account, then a `funding_source_address_token` is not required.
            If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: Unique identifier of the funding source to use for this auto
            reload.
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: '#/components/schemas/order_scope'
        token:
          description: The token in the path parameter takes precedence over the `token`
            body field.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    available:
      description: |-
        Specifies the available balances of the velocity controls associated with a user.

        This object is not returned if the velocity control window is `TRANSACTION`, because available balances do not apply to single-transaction velocity windows.
      properties:
        amount:
          description: Total amount of spend remaining in the velocity control.
          exclusiveMinimum: false
          minimum: 0
          type: number
        days_remaining:
          description: Number of days remaining in the velocity control time window.
          format: int32
          type: integer
        uses:
          default: 0
          description: Number of uses remaining in the velocity control.
          format: int32
          type: integer
      required:
        - amount
        - uses
      type: object
    avs_control_options:
      properties:
        decline_on_address_number_mismatch:
          default: false
          description: |-
            Set to `true` to decline account verification or authorization messages whose address number does not match the address number on file.

            Set to `false` to not decline account verification or authorization messages whose address number does not match the address number on file.

            This field is functional only if `validate = true`.
          type: boolean
        decline_on_postal_code_mismatch:
          default: true
          description: |-
            Set to `true` to decline account verification or authorization messages whose postal code does not match the postal code on file.

            Set to `false` to not decline account verification or authorization messages whose postal code does not match the postal code on file.

            This field is functional only if `validate = true`.
          type: boolean
        validate:
          default: true
          description: |-
            Set to `true` to require validation of account verification or authorization messages.

            Set to `false` to forgo validation and approve all account verification and authorization messages.
          type: boolean
      type: object
    avs_controls:
      properties:
        auth_messages:
          $ref: '#/components/schemas/avs_control_options'
        av_messages:
          $ref: '#/components/schemas/avs_control_options'
      type: object
    avs_information:
      description: Contains address verification information.
      properties:
        postal_code:
          description: Postal code of the address.
          type: string
        street_address:
          description: Street name and number of the address.
          type: string
        zip:
          description: United States ZIP code of the address.
          type: string
      type: object
    balance_inquiry_request_model:
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          items:
            $ref: '#/components/schemas/network_fee_model'
          type: array
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - account_type
        - card_acceptor
        - card_token
        - mid
      type: object
    bank_transfer_request_model:
      properties:
        amount:
          description: The amount to push or pull.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        channel:
          description: default = API
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        currency_code:
          description: The currency of the push or pull.
          type: string
        funding_source_token:
          description: The ACH funding source token for the external account.
          maxLength: 36
          minLength: 0
          type: string
        memo:
          description: Additional text describing the ACH transfer.
          type: string
        standard_entry_class_code:
          description: |-
            Three-letter code identifying the type of entry.

            * *WEB* — Internet-initiated entry
            * *PPD* — Prearranged Payment and Deposit
            * *CCD* — Cash Concentration and Disbursement
          enum:
            - WEB
            - PPD
            - CCD
          type: string
        statement_descriptor:
          description: Description of the transaction, as it will appear on the receiver's
            bank statement.
          maxLength: 10
          minLength: 0
          type: string
        token:
          description: The token of the ACH transfer to retrieve.
          maxLength: 36
          minLength: 0
          type: string
        transfer_speed:
          description: |-
            Specifies how quickly to initiate the ACH transfer.

            *NOTE:* Same-day transfers are limited to a maximum amount of $100,000.
          enum:
            - STANDARD
            - SAME_DAY
          type: string
        type:
          description: Specifies whether the ACH transfer is a push (credit) or pull
            (debit).
          enum:
            - PUSH
            - PULL
          type: string
      required:
        - amount
        - funding_source_token
        - type
      type: object
    bank_transfer_response_model:
      properties:
        amount:
          description: The amount to push or pull.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        batch_number:
          description: Field required in older versions of the API, but no longer
            used.
          type: string
        channel:
          description: default = API
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        created_by:
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          description: The date and time when the ACH transfer was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Valid alpha-3 link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"]
          type: string
        funding_source_token:
          description: The ACH funding source token for the external account.
          maxLength: 36
          minLength: 0
          type: string
        last_modified_time:
          description: The date and time when the ACH transfer was last modified,
            in UTC.
          format: date-time
          type: string
        memo:
          description: Additional text describing the ACH transfer.
          type: string
        return_code:
          description: A standardized ACH return code for a returned transaction,
            generally sent by the RDFI. Transactions can be returned for any of the
            reasons listed in the <</developer-guides/ach-origination#_nacha_ach_return_codes,
            NACHA ACH return codes table>> of the ACH Origination Guide.
          type: string
        return_reason:
          description: Human-readable description correlating to the `return_code`,
            such as `Insufficient funds`, if a return code is present in the response.
          type: string
        standard_entry_class_code:
          description: |-
            Three-letter code identifying the type of entry.

            * *WEB* — Internet-initiated entry
            * *PPD* — Prearranged Payment and Deposit
            * *CCD* — Cash Concentration and Disbursement
          enum:
            - WEB
            - PPD
            - CCD
          type: string
        statement_descriptor:
          description: Description of the transaction, as it will appear on the receiver's
            bank statement.
          maxLength: 10
          minLength: 0
          type: string
        status:
          description: New state of the ACH transfer.
          enum:
            - INITIATED
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - ERROR
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
            - REVERSAL_DECL
          type: string
        token:
          description: The token of the ACH transfer to retrieve.
          maxLength: 36
          minLength: 0
          type: string
        transfer_speed:
          description: |-
            Specifies how quickly to initiate the ACH transfer.

            *NOTE:* Same-day transfers are limited to a maximum amount of $100,000.
          enum:
            - STANDARD
            - SAME_DAY
          type: string
        transitions:
          description: An array of ACH transfer transition objects.
          items:
            $ref: '#/components/schemas/bank_transfer_transition_response_model'
          type: array
        type:
          description: Specifies whether the ACH transfer is a push (credit) or pull
            (debit).
          enum:
            - PUSH
            - PULL
          type: string
      required:
        - amount
        - funding_source_token
        - type
      type: object
    bank_transfer_transition_request_model:
      properties:
        amount:
          exclusiveMinimum: false
          minimum: 0
          type: number
        bank_transfer_token:
          description: Token of the ACH transfer you want to transition.
          maxLength: 36
          minLength: 0
          type: string
        batch_number:
          description: Field required in older versions of the API, but no longer
            used.
          type: string
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        effective_date:
          format: date-time
          type: string
        program_reserve_token:
          description: Not currently used.
          maxLength: 36
          minLength: 0
          type: string
        reason:
          description: Description of why the ACH transfer status was updated.
          type: string
        return_code:
          description: |-
            A standardized ACH return code for a returned transaction, generally sent by the RDFI.
            Transactions can be returned for any of the reasons listed in the <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes table>> of the ACH Origination Guide.
          type: string
        reversal_after_45_days:
          type: boolean
        status:
          description: |-
            New state of the ACH transfer.
            *NOTE:* In production environments, the only value to which you are allowed to transition an ACH transfer is `CANCELLED`.
          enum:
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
          type: string
        token:
          maxLength: 36
          minLength: 0
          type: string
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
    bank_transfer_transition_response_model:
      properties:
        amount:
          exclusiveMinimum: false
          minimum: 0
          type: number
        bank_transfer_token:
          description: Token of the ACH transfer being transitioned.
          maxLength: 36
          minLength: 0
          type: string
        batch_number:
          description: Field required in older versions of the API, but no longer
            used.
          type: string
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        created_time:
          description: The date and time when the ACH transfer was created, in UTC.
          format: date-time
          type: string
        effective_date:
          format: date-time
          type: string
        last_modified_time:
          description: The date and time when the ACH transfer was last modified.
          format: date-time
          type: string
        program_reserve_token:
          description: Not currently used.
          maxLength: 36
          minLength: 0
          type: string
        reason:
          description: |-
            An explanation of why the transition is being made, for example "Created by POST call on API".
            Returned if this information was supplied when the transition was originally created.
          type: string
        return_code:
          description: A standardized ACH return code for a returned transaction,
            generally sent by the RDFI. Transactions can be returned for any of the
            reasons listed in the <</developer-guides/ach-origination#_nacha_ach_return_codes,
            NACHA ACH return codes table>> of the ACH Origination Guide.
          type: string
        return_reason:
          description: Human-readable description correlating to the `return_code`,
            such as `Insufficient funds`, if a return code is present in the response.
          type: string
        reversal_after_45_days:
          type: boolean
        status:
          description: New state of the ACH transfer.
          enum:
            - PENDING
            - PROCESSING
            - SUBMITTED
            - RETURNED
            - COMPLETED
            - CANCELLED
            - REVERSAL_PEND
            - REVERSAL_COMP
          type: string
        token:
          description: The unique identifier of the bank transfer transition.
          maxLength: 36
          minLength: 0
          type: string
        transaction_jit_token:
          description: Transaction token for JIT-related ledger entries for the ACH
            transfer.
          type: string
        transaction_token:
          description: Transaction token for *non*-JIT-related ledger entries for
            the ACH transfer.
          type: string
      required:
        - bank_transfer_token
        - channel
        - status
      type: object
    base_ach_request_model:
      properties:
        account_number:
          description: ACH account number.
          type: string
        account_type:
          description: Type of account.
          enum:
            - checking
            - savings
            - corporate
            - loan
          type: string
        bank_name:
          description: Name of the bank holding the account.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        name_on_account:
          description: Name on the ACH account.
          maxLength: 50
          minLength: 1
          type: string
        routing_number:
          description: Routing number for the ACH account.
          readOnly: true
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
      required:
        - account_number
        - account_type
        - name_on_account
        - routing_number
      type: object
    base_ach_response_model:
      properties:
        account_suffix:
          description: ACH account identifier appended to the bank account number.
          type: string
        account_type:
          description: Type of account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        bank_name:
          description: |-
            Name of the bank holding the account.
            This field is returned if it exists in the resource.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        date_sent_for_verification:
          description: |-
            Date and time when the account was sent for verification, in UTC.
            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            Date and time when the account was verified, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        name_on_account:
          description: Name on the ACH account.
          type: string
        partner:
          type: string
        partner_account_link_reference_token:
          type: string
        token:
          description: The unique identifier of the funding source.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: |-
            Allows the ACH funding source to be used regardless of its verification status.
            This field is returned if it exists in the resource.
          type: boolean
        verification_status:
          description: |-
            Account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - last_modified_time
        - name_on_account
        - token
      type: object
    beneficial_owner_request:
      description: |-
        Contains information about the beneficial owner of the business, if applicable.

        This object is required for KYC verification in the United States if the business has a beneficial owner.
        Do not include information about the proprietor or business officer in a `beneficial_owner` object.
        If the proprietor or officer of the business is also a beneficial owner, you must indicate that in the `proprietor_is_beneficial_owner` field in the body field details of the business.
      properties:
        dob:
          description: Date of birth of the beneficial owner.
          format: date-time
          type: string
        first_name:
          description: First name of the beneficial owner.
          type: string
        home:
          $ref: '#/components/schemas/AddressRequestModel'
        last_name:
          description: Last name of the beneficial owner.
          type: string
        middle_name:
          description: Middle name of the beneficial owner.
          type: string
        phone:
          description: Ten-digit phone number of the beneficial owner.
          type: string
        ssn:
          description: Nine-digit Social Security Number (SSN) of the beneficial owner.
          type: string
        title:
          description: Title of the beneficial owner.
          type: string
      type: object
    beneficial_owner_response:
      description: Contains information about the beneficial owner of the business,
        if applicable.
      properties:
        first_name:
          description: |-
            First name of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        getdob:
          description: |-
            Date of birth of the beneficial owner.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        home:
          $ref: '#/components/schemas/AddressResponseModel'
        last_name:
          description: |-
            Last name of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        middle_name:
          description: |-
            Middle name of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        phone:
          description: |-
            Ten-digit phone number of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        title:
          description: |-
            Title of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
      type: object
    bulk_issuance_request:
      properties:
        card_allocation:
          description: Number of cards in the order.
          format: int32
          maximum: 50000
          type: integer
        card_product_token:
          description: Specifies the card product from which to create your cards.
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          default: false
          description: |-
            Set to `true` to request expedited processing of the order by your card fulfillment provider.

            This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].

            *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
          type: boolean
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentRequest'
        name_line_1_numeric_postfix:
          default: false
          description: If set to `true`, the unique numeric postfix appended to each
            card's token field is also appended to the card's `fulfillment.card_personalization.text.name_line_1.value`
            field.
          type: boolean
        name_line_1_random_postfix:
          default: false
          description: If set to `true`, the unique random postfix appended to each
            card's token field is also appended to the card's `fulfillment.card_personalization.text.name_line_1.value`
            field.
          type: boolean
        token:
          description: |-
            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_association:
          $ref: '#/components/schemas/user_association'
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
    bulk_issuance_response:
      properties:
        card_allocation:
          description: Number of cards in the order.
          format: int32
          maximum: 50000
          type: integer
        card_fulfillment_time:
          description: |-
            Date and time when the bulk card order was fulfilled, in UTC.

            This field is included if your bulk card order has been processed.
          format: date-time
          type: string
        card_product_token:
          description: Specifies the card product from which the cards are created.
          maxLength: 36
          minLength: 1
          type: string
        cards_processed:
          description: |-
            Number of cards processed in the bulk card order.

            This field is returned if it exists in the resource.
          format: int32
          type: integer
        created_time:
          description: |-
            Date and time when the resource was created, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        expedite:
          default: false
          description: |-
            Indicates if expedited processing of this bulk card order was requested.

            This field is returned if it exists in the resource.
          type: boolean
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentResponse'
        name_line1_end_index:
          description: |-
            This field is included if your bulk card order has been processed.

            You can use the `name_line1_start_index` and `name_line1_end_index` fields to identify the cards and users associated with the order.
            For example, if the start index is "1" and the end index is "3", the card tokens are "card-1", "card-2", and "card-3", and the user tokens are "user-1", "user-2", and "user-3".

            See <</core-api/bulk-card-orders#create_bulk_card_order, Create bulk card order>> for more information about the automatic generation and naming of cards and users.
          format: int32
          type: integer
        name_line1_start_index:
          description: |-
            This field is included if your bulk card order has been processed.

            You can use the `name_line1_start_index` and `name_line1_end_index` fields to identify the cards and users associated with the order.
            For example, if the start index is "1" and the end index is "3", the card tokens are "card-1", "card-2", and "card-3", and the user tokens are "user-1", "user-2", and "user-3".

            See <</core-api/bulk-card-orders#create_bulk_card_order, Create bulk card order>> for more information about the automatic generation and naming of cards and users.
          format: int32
          type: integer
        name_line_1_numeric_postfix:
          default: false
          description: If set to `true`, the unique numeric postfix appended to each
            card's token field is also appended to the card's `fulfillment.card_personalization.text.name_line_1.value`
            field.
          type: boolean
        name_line_1_random_postfix:
          default: false
          description: |-
            If set to `true`, the unique random postfix appended to each card's token field is also appended to the card's `fulfillment.card_personalization.text.name_line_1.value` field.

            This field is returned if it exists in the resource.
          type: boolean
        provider_ship_date:
          description: |-
            Date and time when the card provider shipped the bulk card order, in UTC.

            This field is included if your bulk card order has shipped.
          format: date-time
          type: string
        provider_shipping_method:
          description: |-
            Shipping method used by the card provider.
            `United_Postal_Service`, for example.

            This field is included if your bulk card order has shipped.
          type: string
        provider_tracking_number:
          description: |-
            A tracking number is included only if your card provider is Arroweye Solutions.

            This field is included if your bulk card order has shipped.
          type: string
        token:
          description: Unique identifier of the bulk card order.
          maxLength: 36
          minLength: 1
          type: string
        user_association:
          $ref: '#/components/schemas/user_association'
      required:
        - card_allocation
        - card_product_token
        - fulfillment
        - token
      type: object
    business_card_holder_response:
      properties:
        account_holder_group_token:
          description: |-
            Associates the specified account holder group with the business.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: false
          description: |-
            Specifies if the business is in the `ACTIVE` state on the Marqeta platform.

            This field is returned if it exists in the resource.
          type: boolean
        attestation_consent:
          default: false
          description: |-
            Indicates that the attester agrees that the information provided is correct and truthful.

            This field is returned if it exists in the resource.
          type: boolean
        attestation_date:
          description: |-
            Timestamp of the attestation.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        attester_name:
          description: |-
            Name of the attester for KYC verification.

            This field is returned if it exists in the resource.
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: |-
            Title of the attester for KYC verification.

            This field is returned if it exists in the resource.
          maxLength: 64
          minLength: 0
          type: string
        authentication:
          $ref: '#/components/schemas/Authentication'
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_response'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_response'
        business_name_dba:
          description: |-
            Fictitious business name ("Doing Business As" or DBA).

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: |-
            Legal name of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: |-
            Indicates the type of business, for example B2B (business-to-business) or B2C (business-to-consumer).

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          description: Date and time when the business was created, in UTC.
          format: date-time
          type: string
        date_established:
          description: |-
            Date and time when the business was established.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        duns_number:
          description: |-
            Data Universal Numbering System (DUNS) number of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: |-
            General description of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: |-
            History of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: |-
            One or more objects containing identifications associated with the business.

            Objects are returned if they exist in the resource.
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          type: array
        in_current_location_since:
          description: |-
            Date on which the business office opened in its current location.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        incorporation:
          $ref: '#/components/schemas/business_incorporation_response'
        international_office_locations:
          description: |-
            Locations of the business' offices outside the US.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: |-
            IP address of the business.

            This field is returned if it exists in the resource.
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          description: Date and time when the business was last modified, in UTC.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Associates any additional metadata you provide with the business.

            Metadata is returned if it exists in the resource.
          type: object
        notes:
          description: |-
            Any additional information pertaining to the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: '#/components/schemas/AddressResponseModel'
        password:
          description: |-
            Password for the business account on the Marqeta platform.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: |-
            10-digit telephone number of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          default: false
          description: |-
            Indicates that the proprietor or officer of the business is also a beneficial owner.

            This field is returned if it exists in the resource.
          type: boolean
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor_response'
        status:
          description: |-
            Specifies the state of the business on the Marqeta platform.

            This field is returned if it exists in the resource.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        taxpayer_id:
          description: |-
            Taxpayer identifier of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the business resource.

            This field is always returned.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: |-
            URL of the business' website.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    business_card_holder_update:
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the business.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: |-
            Indicates that the attester agrees that the information provided is correct and truthful.

            This field is required for KYC verification (US-based accounts only).
          type: boolean
        attestation_date:
          description: |-
            Timestamp of the attestation.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        attester_name:
          description: |-
            Name of the attester for KYC verification.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: Title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_request'
        business_name_dba:
          description: |-
            Fictitious business name ("Doing Business As" or DBA).

            This field is required for KYC verification (US-based accounts only).
            If your business does not use a fictitious business name, enter your legal business name again in this field.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: |-
            Legal name of business.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: Indicates the type of business, for example business-to-business
            (B2B) or business-to-consumer (B2C).
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          description: |-
            Date the business was established.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: One or more objects containing identifications associated with
            the business.
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          type: array
        in_current_location_since:
          description: Date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: '#/components/schemas/business_incorporation'
        international_office_locations:
          description: Locations of the business' offices outside the United States.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: '#/components/schemas/AddressRequestModel'
        password:
          description: Password for the business account on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          default: false
          description: |-
            Indicates that the proprietor or officer of the business is also a beneficial owner.

            This field is required for KYC verification in the United States if the business proprietor or officer is also a beneficial owner.
            If the proprietor or business officer is a beneficial owner, use this field to indicate their beneficial ownership.
            Do not include information about the proprietor or business officer in a `beneficial_owner` object.
          type: boolean
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor'
        taxpayer_id:
          description: Taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the business.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_cardholder:
      properties:
        account_holder_group_token:
          description: |-
            Existing account holder group token that associates the specified account holder group with the business.
            Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: |-
            Indicates that the attester agrees that the information provided is correct and truthful.

            This field is required for KYC verification (US-based accounts only).
          type: boolean
        attestation_date:
          description: |-
            Timestamp of the attestation.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        attester_name:
          description: |-
            Name of the attester for KYC verification.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: Title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner2:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner3:
          $ref: '#/components/schemas/beneficial_owner_request'
        beneficial_owner4:
          $ref: '#/components/schemas/beneficial_owner_request'
        business_name_dba:
          description: |-
            Fictitious business name ("Doing Business As" or DBA).

            This field is required for KYC verification (US-based accounts only).
            If your business does not use a fictitious business name, enter your legal business name again in this field.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: |-
            Legal name of business.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: Indicates the type of business, for example B2B (business-to-business)
            or B2C (business-to-consumer).
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          description: |-
            Date the business was established.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: One or more objects containing identifications associated with
            the business.
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          type: array
        in_current_location_since:
          description: Date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: '#/components/schemas/business_incorporation'
        international_office_locations:
          description: Locations of the business' offices outside the US.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: '#/components/schemas/AddressRequestModel'
        password:
          description: Password for the business account on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: '#/components/schemas/PrimaryContactInfoModel'
        proprietor_is_beneficial_owner:
          default: false
          description: |-
            Indicates that the proprietor or officer of the business is also a beneficial owner.

            This field is required for KYC verification if the business proprietor or officer is also a beneficial owner.
          type: boolean
        proprietor_or_officer:
          $ref: '#/components/schemas/business_proprietor'
        taxpayer_id:
          description: Taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the business resource.

            If you do not include a token, the system generates one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_incorporation:
      description: |-
        Contains information about the organizational structure of the business.

        This object is required for KYC verification (US-based accounts only).
      properties:
        address_registered_under:
          $ref: '#/components/schemas/AddressRequestModel'
        incorporation_type:
          description: |-
            Organizational structure of the business, such as corporation or sole proprietorship.

            This field is required for KYC verification (US-based accounts only).
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - COOPERATIVE
            - OTHER
          maxLength: 255
          minLength: 0
          type: string
        is_public:
          default: false
          description: A value of `true` indicates that the business is publicly held.
          type: boolean
        name_registered_under:
          description: Name under which the business is registered.
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          description: |-
            State where the business is incorporated.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          description: Business stock symbol.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_incorporation_response:
      description: Contains information about the organizational structure of the
        business.
      properties:
        address_registered_under:
          $ref: '#/components/schemas/AddressResponseModel'
        incorporation_type:
          description: |-
            Organizational structure of the business (corporation or sole proprietorship, for example).

            This field is returned if it exists in the resource.
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - OTHER
          maxLength: 255
          minLength: 0
          type: string
        is_public:
          default: false
          description: |-
            A value of `true` indicates that the business is publicly held.

            This field is returned if it exists in the resource.
          type: boolean
        name_registered_under:
          description: |-
            Name under which the business is registered.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          description: |-
            State where the business is incorporated.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          description: |-
            Stock symbol associated with the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_metadata:
      description: Contains customer-provided information about the business that
        funded the transaction.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the business.
          type: object
      type: object
    business_proprietor:
      description: |-
        Contains information about the proprietor or officer of the business.

        This object is required for KYC verification in the United States.
      properties:
        alternative_names:
          description: Alternate names of the business proprietor or officer.
          type: string
        dob:
          description: |-
            Business proprietor or officer's date of birth.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        email:
          description: Email address of the business proprietor or officer.
          type: string
        first_name:
          description: First name of business proprietor or officer.
          type: string
        home:
          $ref: '#/components/schemas/AddressRequestModel'
        identifications:
          description: One or more objects containing personal identifications of
            the business proprietor or officer.
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          type: array
        last_name:
          description: Last name of business proprietor or officer.
          type: string
        middle_name:
          description: Middle name of business proprietor or officer.
          type: string
        phone:
          description: Telephone number of the business proprietor or officer.
          type: string
        ssn:
          description: Social Security Number (SSN) of the business proprietor or
            officer.
          type: string
        title:
          description: Title of business proprietor or officer.
          type: string
      required:
        - first_name
        - last_name
      type: object
    business_proprietor_response:
      description: Contains information about the proprietor or officer of the business.
      properties:
        alternative_names:
          description: |-
            Alternate names of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        dob:
          description: |-
            Business proprietor or officer's date of birth.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        email:
          description: |-
            Email address of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        first_name:
          description: |-
            First name of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        home:
          $ref: '#/components/schemas/AddressResponseModel'
        identifications:
          description: |-
            One or more objects containing personal identifications of the business proprietor or officer.

            This field is returned if it exists in the resource.
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          type: array
        last_name:
          description: |-
            Last name of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        middle_name:
          description: |-
            Middle name of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        phone:
          description: |-
            Telephone number of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        ssn:
          description: |-
            Social Security Number (SSN) of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        title:
          description: |-
            Title of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
      type: object
    card_acceptor_model:
      properties:
        address:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        country:
          type: string
        ecommerce_security_level_indicator:
          type: string
        mcc:
          maxLength: 5
          minLength: 0
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        partial_approval_capable:
          default: false
          type: boolean
        state:
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      type: object
    card_holder_address_model:
      properties:
        active:
          default: true
          description: Specifies whether the address is active.
          type: boolean
        address_1:
          description: Street address.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        business_token:
          description: |-
            Unique identifier of the business account holder.
            This token is required if a `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        city:
          description: City of the address.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 1
          type: string
        first_name:
          description: First name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: |-
            A value of `true` specifies that this address is the default address used by the account holder's funding source.
            If this is the account holder's only address, it is used as the default regardless of this field's setting.
          type: boolean
        last_name:
          description: Last name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number of the account holder.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the address.
            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            This token is required if a `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          description: |-
            United States ZIP code.
            This field is required if `postal_code` is not specified.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address_1
        - city
        - country
        - first_name
        - last_name
        - state
      type: object
    card_holder_address_update_model:
      properties:
        active:
          default: true
          description: Specifies whether the address is active.
          type: boolean
        address_1:
          description: Street address.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City of the address.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: |-
            A value of `true` specifies that this address is the default address used by the account holder's funding source.
            If this is the account holder's only address, it is used as the default regardless of this field's setting.
          type: boolean
        last_name:
          description: Last name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number of the account holder.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For a complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        zip:
          description: United States ZIP code of the address.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    card_holder_model:
      description: Contains information about a cardholder.
      properties:
        account_holder_group_token:
          description: |-
            Associates the specified account holder group with the cardholder.

            Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: Specifies if the cardholder is in the `ACTIVE` state on the
            Marqeta platform.
          type: boolean
        address1:
          description: |-
            Cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information for the cardholder.

            *NOTE:* Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        birth_date:
          description: |-
            Cardholder's date of birth.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          type: string
        city:
          description: |-
            City where the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: |-
            Country where the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: |-
            Valid email address of the cardholder.

            This value must be unique among users.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Cardholder's first name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        gender:
          description: Gender of the cardholder.
          enum:
            - F
            - M
          maxLength: 1
          minLength: 0
          type: string
        honorific:
          description: 'Cardholder''s title or prefix: Dr., Miss, Mr., Ms., and so
            on.'
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: Expiration date of the cardholder's identification card.
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: One or more objects containing identifications associated with
            the cardholder.
          items:
            $ref: '#/components/schemas/IdentificationRequestModel'
          type: array
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_name:
          description: |-
            Cardholder's last name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: |-
            Unique identifier of the parent user or business resource.
            Send a `GET` request to `/users` to retrieve user resource tokens or `/businesses` to retrieve business resource tokens.

            Required if `uses_parent_account = true`.
            This user or business is configured as the parent of the current user.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's user account password on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: |-
            Telephone number of the cardholder (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.
            Do not include hyphens, spaces, or parentheses.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: Cardholder's Social Security Number (SSN).
          type: string
        state:
          description: |-
            State where the cardholder resides.

            *NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only).
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the cardholder.
            If you do not include a token, the system generates one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: |-
            Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).

            If set to `true`, must also include a `parent_token` in the request.
            This value cannot be updated.
          type: boolean
      type: object
    card_life_cycle:
      description: Defines characteristics of the lifecycle of cards of this card
        product type.
      properties:
        activate_upon_issue:
          default: false
          description: A value of `true` indicates that cards of this card product
            type are active once they are issued.
          type: boolean
        card_service_code:
          default: 101
          description: |-
            Sequence of three digits that defines various services, differentiates card usage in international or domestic interchange, designates personal identification number (PIN) and authorization requirements, and identifies card restrictions.
            The following values are commonly used:

            *First digit*

            * *1* — International interchange OK
            * *2* — International interchange, use IC (chip) where feasible
            * *5* — National interchange only except under bilateral agreement
            * *6* — National interchange only except under bilateral agreement, use IC (chip) where feasible
            * *7* — No interchange except under bilateral agreement (closed loop)
            * *9* — Test

            *Second digit*

            * *0* — Normal
            * *2* — Contact issuer via online means
            * *4* — Contact issuer via online means except under bilateral agreement

            *Third digit*

            * *0* — No restrictions, PIN required
            * *1* — No restrictions
            * *2* — Goods and services only (no cash)
            * *3* — ATM only, PIN required
            * *4* — Cash only
            * *5* — Goods and services only (no cash), PIN required
            * *6* — No restrictions, use PIN where feasible
            * *7* — Goods and services only (no cash), use PIN where feasible
          format: int32
          type: integer
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset_with_minimum'
        update_expiration_upon_activation:
          default: false
          description: |-
            Normally, the `expiration_offset` is measured from the date of issue.
            Set this field to `true` to measure `expiration_offset` from the date of activation instead.
          type: boolean
      type: object
    card_metadata:
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-injected metadata with the card.
          type: object
      type: object
    card_options:
      properties:
        billing_address:
          $ref: '#/components/schemas/BillingAddress'
        card_present:
          default: false
          type: boolean
        cvv:
          maxLength: 3
          minLength: 0
          type: string
        expiration:
          maxLength: 4
          minLength: 4
          type: string
      type: object
    card_personalization:
      description: Specifies personalized attributes to be added to the card.
      properties:
        carrier:
          $ref: '#/components/schemas/carrier'
        images:
          $ref: '#/components/schemas/images'
        perso_type:
          description: Specifies the type of card personalization.
          enum:
            - EMBOSS
            - LASER
            - FLAT
          type: string
        text:
          $ref: '#/components/schemas/text'
      required:
        - text
      type: object
    card_product_config:
      description: |-
        Defines the characteristics of the card product.
        Configurations are conditionally required based on program setup.

        For more information, contact your Marqeta representative.
      properties:
        card_life_cycle:
          $ref: '#/components/schemas/card_life_cycle'
        clearing_and_settlement:
          $ref: '#/components/schemas/clearing_and_settlement'
        digital_wallet_tokenization:
          $ref: '#/components/schemas/digital_wallet_tokenization'
        fulfillment:
          $ref: '#/components/schemas/card_product_fulfillment'
        jit_funding:
          $ref: '#/components/schemas/jit_funding'
        poi:
          $ref: '#/components/schemas/poi'
        selective_auth:
          $ref: '#/components/schemas/selective_auth'
        special:
          $ref: '#/components/schemas/special'
        transaction_controls:
          $ref: '#/components/schemas/transaction_controls'
      type: object
    card_product_fulfillment:
      description: Determines physical characteristics of a card, along with its bulk
        shipment information.
      properties:
        all_zero_card_security_code:
          default: false
          description: If `true`, an all zero code (000) is allowed as a valid value
            in an authorization request.
          type: boolean
        allow_card_creation:
          default: true
          description: |-
            Controls the ability to create cards from this card product; `true` allows and `false` disallows the creation of cards.

            *NOTE:* The card product's `active` field has no effect on card creation or the behavior of this field.
          type: boolean
        bin_prefix:
          description: Prefix of the bank identification number.
          type: string
        bulk_ship:
          default: false
          description: Enables bulk ordering of cards of this card product type using
            the `/bulkissuances` endpoint.
          type: boolean
        card_personalization:
          $ref: '#/components/schemas/card_personalization'
        enable_offline_pin:
          default: false
          description: Enables offline personal identification number (PIN) verification
            for Europay Mastercard and Visa (EMV, or "chip-and-PIN") card payments.
          type: boolean
        fulfillment_provider:
          default: PERFECTPLASTIC
          description: |-
            Specifies the fulfillment provider.

            *NOTE:* Expedited processing is available for cards that are fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].
            You can expedite an order's processing by using the `expedite` field of the <</core-api/cards, card>> or <</core-api/bulk-card-orders, bulkissuance>> object.
            Contact your Marqeta representative for information regarding the cost of expedited service.
          enum:
            - PERFECTPLASTIC
            - ARROWEYE
            - IDEMIA
            - IDEMIA_UK
            - IDEMIA_FR
            - IDEMIA_CZ
            - IDEMIA_APAC
            - IDEMIA_PL
            - IDEMIA_AU
            - IDEMIA_LA
            - GEMALTO
            - NITECREST
            - OBERTHUR
            - ALLPAY
          type: string
        package_id:
          default: '0'
          description: Card fulfillment provider's package ID.
          maxLength: 50
          minLength: 1
          type: string
        pan_length:
          default: '16'
          description: Specifies the length of the primary account number (PAN).
          type: string
        payment_instrument:
          default: PHYSICAL_MSR
          description: Specifies the physical form cards of this card product type
            will take.
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
        shipping:
          $ref: '#/components/schemas/shipping'
        uppercase_name_lines:
          default: true
          description: |-
            A value of `true` sets the text in the `fulfillment.card_personalization.text.name_line_1` and `name_line_2` fields to all uppercase letters.
            A value of `false` leaves the text in its original state.
          type: boolean
      required:
        - card_personalization
      type: object
    card_product_request:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the card product is active.

            *NOTE:* This field has no effect on the ability to create cards from this card product.
            Use the `config.fulfillment.allow_card_creation` field to allow/disallow card creation.
          type: boolean
        config:
          $ref: '#/components/schemas/card_product_config'
        end_date:
          description: End date of the range over which the card product can be active.
          format: date
          type: string
        name:
          description: |-
            Name of the card product.
            Marqeta recommends that you use a unique string.
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          description: |-
            Date when the card product becomes active.
            If the start date has passed and the card is set to `active = false`, then the card will not be activated.
          format: date
          type: string
        token:
          description: |-
            Unique identifier of the card product.

            If you do not include a token, the system will generate one automatically.
            This token is required in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
        - start_date
      type: object
    card_product_response:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the card product is active.

            This field is returned if it exists in the resource.
          type: boolean
        config:
          $ref: '#/components/schemas/card_product_config'
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        end_date:
          description: |-
            End date of the range over which the card product can be active.

            This field is returned if it exists in the resource.
          format: date
          type: string
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the card product.
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          description: Date when the card product becomes active.
          format: date
          type: string
        token:
          description: Unique identifier of the card product.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
        - name
        - start_date
      type: object
    card_product_update_model:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the card product is active.

            *NOTE:* This field has no effect on the ability to create cards from this card product.
            Use the `config.fulfillment.allow_card_creation` field to allow/disallow card creation.
          type: boolean
        config:
          $ref: '#/components/schemas/card_product_config'
        end_date:
          description: End date of the range over which the card product can be active.
          format: date
          type: string
        name:
          description: |-
            Name of the card product.
            Marqeta recommends that you use a unique string.
          maxLength: 40
          minLength: 0
          type: string
        start_date:
          description: |-
            Date the card product becomes active.
            If the start date has passed and the card is set to `active = false`, then the card will not be activated.
          format: date
          type: string
      type: object
    card_request:
      properties:
        activation_actions:
          $ref: '#/components/schemas/activation_actions'
        bulk_issuance_token:
          description: |-
            Associates the card with the specified bulk card order.
            This field cannot be updated.
          type: string
        card_product_token:
          description: Unique identifier of the card product.
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          default: false
          description: |-
            Set to `true` to request expedited processing of the card by your card fulfillment provider.

            This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].

            *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
          type: boolean
        expiration_offset:
          $ref: '#/components/schemas/expiration_offset'
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        new_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card) with a new primary account number (PAN).

            This field reissues a card with a new PAN from the specified source card.
            The source card is automatically terminated when the card is reissued with the new PAN.
            Use this field when reissuing a lost or stolen card.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          minLength: 0
          type: string
        reissue_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card).

            This field reissues a card by copying the primary account number (PAN) and personal identification number (PIN) from the specified source card to the newly created card.
            The reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.

            *NOTE:* By default, the source card is automatically terminated when the reissued card is activated.
            However, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`.
          maxLength: 36
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the card.

            If you do not include a token, the system will generate one automatically.
            Other API calls will require this token, so we recommend creating a token that is easy to remember rather than letting the system generate one.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        translate_pin_from_card_token:
          description: |-
            Copies the PIN from the specified card to the newly created card.

            Both cards must belong to the same user.
            Populating this field will raise an error if `reissue_pan_from_card_token` is also set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          description: Unique identifier of the authorized user of the card.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - card_product_token
        - user_token
      type: object
    card_response:
      description: Contains information about the card used in the transaction.
      properties:
        activation_actions:
          $ref: '#/components/schemas/activation_actions'
        barcode:
          description: Barcode printed on the card, expressed as numerals.
          type: string
        bulk_issuance_token:
          description: Unique identifier of the bulk card order.
          type: string
        card_product_token:
          description: Unique identifier of the card product.
          type: string
        chip_cvv_number:
          description: Three-digit card verification value (ICVV) stored on the chip
            of the card.
          type: string
        contactless_exemption_counter:
          description: |-
            Running count of the contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.
            You can limit the number of contactless transactions that can be performed without issuing an SCA challenge at the card product level.

            For more information about strong customer authentication, see <</core-api/card-products, Card Products>>.
          format: int32
          type: integer
        contactless_exemption_total_amount:
          description: |-
            Running total of the money spent in contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.
            You can limit the total amount that can be spent in contactless transactions without issuing an SCA challenge at the card product level.

            For more information about strong customer authentication, see <</core-api/card-products, Card Products>>.
          type: number
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        cvv_number:
          description: Three-digit card verification value (CVV2 or CVC2) printed
            on the card.
          type: string
        expedite:
          default: false
          description: A value of `true` indicates that you requested expedited processing
            of the card from your card fulfillment provider.
          type: boolean
        expiration:
          description: Expiration date in `MMyy` format.
          type: string
        expiration_time:
          description: Expiration date and time, in UTC.
          format: date-time
          type: string
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentResponse'
        fulfillment_status:
          description: |-
            Card fulfillment status:

            * *ISSUED:* Initial state of all newly created/issued cards.
            * *ORDERED:* Card ordered through the card fulfillment provider.
            * *REORDERED:* Card reordered through the card fulfillment provider.
            * *REJECTED:* Card rejected by the card fulfillment provider.
            * *SHIPPED:* Card shipped by the card fulfillment provider.
            * *DELIVERED:* Card delivered by the card fulfillment provider.
            * *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards.
          enum:
            - ISSUED
            - ORDERED
            - REORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
        instrument_type:
          description: |-
            Instrument type of the card:

            * *PHYSICAL_MSR:* A physical card with a magnetic stripe. This is the default physical card type.
            * *PHYSICAL_ICC:* A physical card with an integrated circuit, or "chip."
            * *PHYSICAL_CONTACTLESS:* A physical card that uses radio frequency identification (RFID) or near-field communication (NFC) to enable payment over a secure radio interface.
            * *PHYSICAL_COMBO:* A physical card with a chip that also supports contactless payments.
            * *VIRTUAL_PAN:* A virtual card with a primary account number (PAN).
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
        last_four:
          description: Last four digits of the card primary account number (PAN).
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        new_pan_from_card_token:
          description: Reissues the specified card (known as the "source" card) with
            a new primary account number (PAN).
          type: string
        pan:
          description: Primary account number (PAN) of the card.
          type: string
        pin_is_set:
          default: false
          description: Specifies if the personal identification number (PIN) has been
            set for the card.
          type: boolean
        reissue_pan_from_card_token:
          description: Reissues the specified card (known as the "source" card).
          type: string
        state:
          description: Indicates the state of the card.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        state_reason:
          description: |-
            Descriptive reason for why the card is in its current state.
            For example, "Card activated by cardholder".
          type: string
        token:
          description: Unique identifier of the card.
          type: string
        translate_pin_from_card_token:
          description: Copies the personal identification number (PIN) from the specified
            source card to the newly created card.
          type: string
        user_token:
          description: Unique identifier of the cardholder.
          type: string
      required:
        - barcode
        - card_product_token
        - created_time
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - last_modified_time
        - pan
        - pin_is_set
        - state
        - state_reason
        - token
        - user_token
      type: object
    card_security_code_verification:
      description: Contains information about a verification check performed on the
        card's security code.
      properties:
        response:
          $ref: '#/components/schemas/response'
        type:
          description: |-
            Indicates the type of security code.
            Can have these possible values:

            * *CVV1* – the security code stored in the magnetic stripe on the card.
            * *CVV2* – the security code printed on the card.
            * *ICVV* – the security code stored on the chip of the card.
            * *DCVV* – a dynamic security code used in some contactless payments when a card or device is tapped against the card reader.
          enum:
            - CVV1
            - CVV2
            - ICVV
            - DCVV
          type: string
      required:
        - response
        - type
      type: object
    card_swap_hash:
      description: Contains identifiers for swapping digital wallet tokens between
        cards.
      properties:
        new_card_token:
          description: Unique identifier of the new card resource to which the digital
            wallet tokens are assigned.
          maxLength: 36
          minLength: 1
          type: string
        previous_card_token:
          description: Unique identifier of the existing card resource that has digital
            wallet tokens assigned to it.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - new_card_token
        - previous_card_token
      type: object
    card_transition_request:
      properties:
        card_token:
          description: Identifies the card whose state will transition.
          maxLength: 36
          minLength: 1
          type: string
        channel:
          description: |-
            The mechanism by which the transition was initiated.

            * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.
            * *API* - Indicates that the card transition was initiated by you through the Core API.
            Use this value when creating a card transition with an API `POST` request.
            * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.
            * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.
            * *SYSTEM* - Indicates that the card transition was initiated by Marqeta.
            For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        reason:
          description: Additional information about the state change.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            Standard code describing the reason for the transition.

            *NOTE:* This field is required if your program is configured to use version two of the `user_card_state_version`.
            To learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        state:
          description: Specifies the new state.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          readOnly: true
          type: string
        sync_state_with_dwts:
          description: |-
            Set this field to `true` to synchronize the state of the card's associated token(s) with the card's new state.
            The digital wallet tokens must be in a valid starting state for the given transition, which will reflect the card's state transition.
            For example, if the card is transitioning from the `ACTIVE` state to the `SUSPENDED` state, only digital wallet tokens in the `ACTIVE` state will be synchronized with the card state transition and therefore be transitioned to the `SUSPENDED` state.

            Leave this field blank or set it to `false` to keep the states of the card and its digital wallet tokens independent.
          readOnly: true
          type: boolean
        token:
          description: |-
            Unique identifier of the card transition.

            If you do not include a token, the system will generate one automatically.
            This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: '#/components/schemas/ValidationsRequest'
      required:
        - card_token
        - channel
        - state
      type: object
    card_transition_response:
      properties:
        barcode:
          description: The barcode printed on the card, expressed as digits.
          type: string
        bulk_issuance_token:
          description: The unique identifier of the bulk card order.
          type: string
        card:
          $ref: '#/components/schemas/card_metadata'
        card_product_token:
          description: Unique identifier of the card product.
          maxLength: 36
          minLength: 0
          type: string
        card_token:
          description: Unique identifier of the card.
          maxLength: 36
          minLength: 1
          type: string
        channel:
          description: |-
            The mechanism by which the transition was initiated.

            * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.
            * *API* - Indicates that the card transition was initiated by you through the Core API.
            Use this value when creating a card transition with an API `POST` request.
            * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.
            * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.
            * *SYSTEM* - Indicates that the card transition was initiated by Marqeta.
            For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        expedite:
          default: false
          description: A value of `true` indicates that you requested expedited processing
            of the card from your card fulfillment provider.
          type: boolean
        expiration:
          description: Expiration date in `MMyy` format.
          type: string
        expiration_time:
          description: Expiration date and time in UTC format.
          type: string
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        fulfillment_status:
          description: |-
            Provides status information about the card related to order and delivery.

            The possible fulfillment states are:

            * *ISSUED:* Initial state of all newly created/issued cards
            * *ORDERED:* Card ordered through card fulfillment provider
            * *REJECTED:* Card rejected by card fulfillment provider
            * *SHIPPED:* Card shipped by card fulfillment provider
            * *DELIVERED:* Card delivered by the card fulfillment provider.
            * *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards
          enum:
            - ISSUED
            - ORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
        last_four:
          description: Last four digits of the card primary account number (PAN).
          type: string
        new_pan_from_card_token:
          description: Reissues the specified ("source") card with a new primary account
            number (PAN).
          type: string
        pan:
          description: Primary account number (PAN) of the card.
          type: string
        pin_is_set:
          default: false
          description: Specifies if the personal identification number (PIN) has been
            set for the card.
          type: boolean
        reason:
          description: Additional information about the state change.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            A standard code describing the reason for the transition:

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        reissue_pan_from_card_token:
          description: Reissues the specified ("source") card.
          type: string
        state:
          description: Indicates the state of the card.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNACTIVATED
          type: string
        token:
          description: Unique identifier of the card transition.
          maxLength: 36
          minLength: 1
          type: string
        type:
          description: |-
            This field cannot be set directly using the `/cardtransitions` endpoint.
            A card transition's `type` is managed by the Marqeta platform, based on the before and after state of the transition, as specified in the request's `state` field.

            This field appears only when populated by the card fulfillment provider.
            The `type` field's possible values are:

            * *fulfillment.issued:* Card was created/issued
            * *state.activated:* Card was activated
            * *state.reinstated:* Card was reinstated from a suspended state
            * *state.suspended:* Card was suspended
            * *state.terminated:* Card was terminated
            * *state.limited:* Card was limited
            * *fulfillment.digitally_presented:* Card was digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards
            * *fulfillment.ordered:* Card was ordered from the card fulfillment provider
            * *fulfillment.rejected:* Card was rejected by the card fulfillment provider
            * *fulfillment.shipped:* Card was shipped by the card fulfillment provider
            * *fulfillment.delivered:* Card was delivered by the card fulfillment provider
          enum:
            - fulfillment.issued
            - state.activated
            - state.suspended
            - state.reinstated
            - state.terminated
            - state.limited
            - fulfillment.ordered
            - fulfillment.rejected
            - fulfillment.shipped
            - fulfillment.delivered
            - fulfillment.digitally_presented
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/cardholder_metadata'
        user_token:
          description: Unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: '#/components/schemas/ValidationsResponse'
      required:
        - barcode
        - card_product_token
        - card_token
        - channel
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - pan
        - pin_is_set
        - state
        - token
        - type
        - user_token
      type: object
    card_update_request:
      properties:
        expedite:
          default: false
          description: |-
            Set to `true` to request expedited processing of the card by your card fulfillment provider.

            This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].

            *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
          type: boolean
        fulfillment:
          $ref: '#/components/schemas/CardFulfillmentRequest'
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        token:
          description: Unique identifier of the card you want to update.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: Specifies the user you want to associate with the card.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    cardholder_authentication_data:
      description: |-
        Contains 3D Secure authentication data:

        * `electronic_commerce_indicator` – The level of verification performed.
        * `verification_result` – The result of the verification.
        * `verification_value_created_by` – The transaction participant who determined the verification result.
        * `three_ds_message_version` – The 3D Secure message version used for authentication.
        * `authentication_method` – The 3D Secure authentication method.
        * `authentication_status` – The 3D Secure authentication status.
        * `acquirer_exemption` – Indicates a 3D Secure authentication exemption from the acquirer.
        * `issuer_exemption` – Indicates a 3D Secure authentication exemption from the issuer.
      properties:
        acquirer_exemption:
          description: |-
            Indicates 3D Secure authentication exemptions from the acquirer.
            This array is returned if it is included in the transaction data from the card network.
          items:
            type: string
          type: array
        authentication_method:
          description: Specifies the 3D Secure authentication method.
          type: string
        authentication_status:
          description: |-
            Specifies the status of the 3D Secure authentication:

            * `ATTEMPTED`: Indicates that 3D Secure authentication was requested and processed by the card network.
            * `DATA_SHARE_EXEMPTION`: Indicates that 3D Secure authentication was for information only and exempted.
            * `EXEMPTED`: Indicates that 3D Secure authentication was requested but the challenge was exempted.
            * `EXEMPTION_CLAIMED`: Indicates that 3D Secure authentication was exempted because acquirer transaction risk analysis (TRA) was already performed.
            * `SCA_EXEMPTION`: Indicates that 3D Secure authentication was exempted because strong customer authentication (SCA) was already performed.
            * `SUCCESSFUL`: Indicates that 3D Secure authentication was successful.
            * `SUCCESSFUL_NON_PAYMENT`: Indicates that 3D Secure non-payment authentication was successful.
            * `THREEDS_REQUESTER_DATA_SHARE_EXEMPTION`: Status is deprecated and will be removed from a future release of the Marqeta platform.
            After June 2023, use `DATA_SHARE_EXEMPTION` instead.
            * `THREEDS_REQUESTER_SCA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.
            After June 2023, use `SCA_EXEMPTION` instead.
            * `THREEDS_REQUESTER_TRA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.
            After June 2023, use `EXEMPTION_CLAIMED` instead.
            * `UNAVAILABLE`:
            ** For Visa transactions, this status indicates that 3D Secure authentication was requested, but Marqeta's access control server (ACS) was not available.
            ** For Mastercard transactions, this status indicates that 3D Secure authentication was not available.
          type: string
        electronic_commerce_indicator:
          description: |-
            Status of the 3D Secure authentication attempt, as provided by a transaction participant.

            * `authentication_attempted`: Merchant attempted to authenticate, but either the issuer or the cardholder does not participate in 3D Secure.
            * `authentication_successful`: Cardholder authentication successful.
            * `no_authentication`: Non-authenticated e-commerce transaction.
          type: string
        issuer_exemption:
          type: string
        three_ds_message_version:
          description: Specifies the 3D Secure message version used for authentication.
          type: string
        verification_result:
          description: |-
            Result of cardholder authentication verification value (CAVV) or accountholder authentication value (AAV) verification performed by the card network.

            * `failed`
            * `not_present`
            * `not_provided`
            * `not_verified`
            * `not_verified_authentication_outage`
            * `verified`
            * `verified_amount_greater_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by more than 20%.
            This 20% margin falls outside Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.
            * `verified_amount_less_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by 20% or less.
            This 20% margin falls within Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.
          type: string
        verification_value_created_by:
          description: |-
            Transaction participant who determined the verification result.
            This field is only available for Visa transactions.
          type: string
      type: object
    cardholder_balance:
      description: Returns general purpose account (GPA) balances for a user or business.
      properties:
        available_balance:
          description: |-
            Ledger balance minus any authorized transactions that have not yet cleared.
            Also known as the cardholder's purchasing power.
            When using JIT Funding, this balance is usually equal to $0.00.
          type: number
        balances:
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
          description: Contains GPA balance information, organized by currency code.
          type: object
        cached_balance:
          description: Not currently in use.
          type: number
        credit_balance:
          description: Not currently in use.
          type: number
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        impacted_amount:
          description: Balance change based on the amount of the transaction.
          type: number
        last_updated_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        ledger_balance:
          description: |-
            When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.
            When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.
          type: number
        pending_credits:
          description: ACH loads that have been accepted, but for which the funding
            time has not yet elapsed.
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    cardholder_balances:
      description: |-
        Returns general purpose account (GPA) balances for a user or business.
        This object includes a link to balances of related user GPAs.
      properties:
        gpa:
          $ref: '#/components/schemas/cardholder_balance'
        links:
          description: Array of links to balances of related user GPAs.
          items:
            $ref: '#/components/schemas/link'
          type: array
          uniqueItems: true
      required:
        - gpa
        - links
      type: object
    cardholder_metadata:
      description: Contains customer-provided information about the cardholder that
        performed the transaction.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the cardholder.
          type: object
      type: object
    carrier:
      description: Specifies attributes of the card carrier.
      properties:
        logo_file:
          description: Specifies an image to display on the card carrier.
          type: string
        logo_thumbnail_file:
          description: Specifies a thumbnail-sized rendering of the image specified
            in the `logo_file` field.
          type: string
        message_file:
          description: Specifies a text file containing a custom message to print
            on the card carrier.
          type: string
        message_line:
          description: Specifies a custom message that appears on the card carrier.
          type: string
        template_id:
          description: Specifies the card carrier template to use.
          type: string
      type: object
    chargeback_response:
      description: Contains the chargeback object associated with this transaction
        if a chargeback has been initiated.
      properties:
        amount:
          description: Amount of the chargeback.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        channel:
          description: Channel the chargeback came through.
          enum:
            - GATEWAY
            - GATEWAY_AUTOMATED
            - ISSUER
            - ISSUER_AUTOMATED
          type: string
        created_time:
          description: |-
            Date and time when the chargeback was created.
            Not returned for transactions when the associated chargeback is in the `INITIATED` state.
          format: date-time
          type: string
        credit_user:
          default: false
          description: Whether to credit the user for the chargeback amount.
          type: boolean
        last_modified_time:
          description: |-
            Date and time when the chargeback was last modified.
            Not returned for transactions when the associated chargeback is in the `INITIATED` state.
          format: date-time
          type: string
        memo:
          description: Additional comments about the chargeback.
          maxLength: 1024
          minLength: 1
          type: string
        network:
          description: Network handling the chargeback.
          enum:
            - MARQETA
            - DISCOVER
            - MASTERCARD
            - PULSE
            - VISA
          type: string
        network_case_id:
          description: Network-assigned identifier of the chargeback.
          maxLength: 50
          minLength: 0
          type: string
        reason_code:
          description: Identifies the standardized reason for the chargeback.
          type: string
        state:
          description: State of the case.
          enum:
            - INITIATED
            - REPRESENTMENT
            - PREARBITRATION
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - NETWORK_REJECTED
            - WITHDRAWN
          type: string
        token:
          description: Unique identifier of the chargeback.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the transaction being charged back.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - channel
        - created_time
        - credit_user
        - last_modified_time
        - network
        - state
        - token
        - transaction_token
      type: object
    clearing_and_settlement:
      description: Specifies the destination for overdraft funds.
      properties:
        overdraft_destination:
          default: GPA
          description: |-
            Specifies the destination for overdraft funds.

            This field does not apply if JIT Funding is enabled.
          enum:
            - GPA
            - MSA
            - MERCHANT_CAMPAIGN_ACCOUNT
            - GLOBAL_OVERDRAFT_ACCOUNT
          type: string
      type: object
    client_access_token_request:
      properties:
        application_token:
          description: The unique identifier of the `application` object.
          maxLength: 255
          minLength: 1
          type: string
        card_token:
          description: The unique identifier of the card whose sensitive information
            you want to display.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - card_token
      type: object
    client_access_token_response:
      properties:
        application:
          $ref: '#/components/schemas/Application'
        card_token:
          description: The unique identifier of the card whose sensitive information
            you want to display.
          type: string
        created:
          description: The date and time that the client access token was created,
            in UTC.
          format: date-time
          type: string
        expires:
          description: The date and time that the client access token expires, in
            UTC.
          format: date-time
          type: string
        token:
          description: Value of the client access token to redeem when displaying
            sensitive card data.
          type: string
      required:
        - created
        - expires
      type: object
    commando_mode_enables:
      description: Defines program behavior when Commando Mode is enabled.
      properties:
        auth_controls:
          description: Unique identifiers of the authorization controls enabled while
            in Commando Mode.
          items:
            type: string
          type: array
        ignore_card_suspended_state:
          default: false
          description: |-
            If set to `true`, transactions conducted while Commando Mode is enabled proceed even when the card is suspended.
            If set to `false`, transactions conducted while Commando Mode is enabled are declined if the card is suspended.
          type: boolean
        program_funding_source:
          description: Unique identifier of the program funding source that substitutes
            for the program gateway funding source upon Commando Mode enablement.
          type: string
        use_cache_balance:
          default: false
          description: This field is not currently in use.
          type: boolean
        velocity_controls:
          description: Unique identifiers of the velocity controls enabled while in
            Commando Mode.
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
        - program_funding_source
      type: object
    commando_mode_nested_transition:
      description: Describes the Commando Mode control set's `current_state` object.
      properties:
        channel:
          description: Mechanism that changed the Commando Mode control set's state.
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        commando_enabled:
          default: false
          description: |-
            Indicates whether Commando Mode is enabled.

            * If `commando_enabled` is `true` and `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.
            * If `commando_enabled` is `true` and `COMMANDO_AUTO` is configured, Commando Mode is ready to intervene only when a transaction times out or encounters an error.
          type: boolean
        reason:
          description: Describes the reason why the current state of the Commando
            Mode control set was last changed.
          type: string
        username:
          description: Identifies the user who last changed the Commando Mode control
            set's state.
          type: string
      required:
        - channel
        - commando_enabled
      type: object
    commando_mode_response:
      properties:
        commando_mode_enables:
          $ref: '#/components/schemas/commando_mode_enables'
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        current_state:
          $ref: '#/components/schemas/commando_mode_nested_transition'
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        program_gateway_funding_source_token:
          description: Unique identifier of the associated program gateway funding
            source.
          type: string
        real_time_standin_criteria:
          $ref: '#/components/schemas/real_time_standin_criteria'
        token:
          description: Unique identifier of the Commando Mode control set.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    commando_mode_transition_response:
      properties:
        commando_mode_token:
          description: Unique identifier of the Commando Mode control set.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        name:
          description: Identifies the user who changed the Commando Mode control set's
            state.
          type: string
        token:
          description: Unique identifier of the Command Mode control set transition
            object.
          type: string
        transition:
          $ref: '#/components/schemas/commando_mode_nested_transition'
        type:
          description: Specifies the type of event that triggered the Commando Mode
            transition, such as a `connection_error` or `response_timeout`.
          type: string
      required:
        - created_time
      type: object
    config:
      description: Allows for configuration options for this group, including control
        over the expiration of authorizations and automatic increases to the authorization
        amount.
      properties:
        authorization_controls:
          $ref: '#/components/schemas/authorization_controls'
      type: object
    control_token_request:
      properties:
        card_token:
          description: The unique identifier of the card for which you want to generate
            a control token.
          maxLength: 36
          minLength: 1
          type: string
        controltoken_type:
          description: "Specifies the type of action completed by this request.\n\n\
            *WARNING:* Sending a request to this endpoint with a `SHOW_PIN` control\
            \ token requires PCI DSS compliance.\n\nThe lifespan of the control token\
            \ depends on the token type: \n\n* *SET_PIN:* 60 minutes\n* *SHOW_PIN:*\
            \ 5 minutes"
          enum:
            - SET_PIN
            - SHOW_PIN
          type: string
      required:
        - card_token
      type: object
    control_token_response:
      properties:
        control_token:
          description: |-
            The unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.
            This value cannot be updated.
          type: string
      required:
        - control_token
      type: object
    currency_conversion:
      description: Contains information about currency conversion.
      properties:
        network:
          $ref: '#/components/schemas/network'
      type: object
    customer_due_diligence_request:
      properties:
        answer:
          type: string
        question:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - answer
        - question
      type: object
    customer_due_diligence_response:
      properties:
        account_token:
          type: string
        answer:
          type: string
        bank:
          type: string
        question:
          type: string
        token:
          type: string
        type:
          type: string
      required:
        - account_token
        - answer
        - bank
        - question
        - token
        - type
      type: object
    customer_due_diligence_update_response:
      properties:
        answer:
          type: string
      type: object
    deposit_account:
      properties:
        account_number:
          type: string
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          type: string
        routing_number:
          type: string
        token:
          type: string
        user_token:
          type: string
      required:
        - account_number
        - routing_number
        - token
      type: object
    deposit_account_update_request:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
      type: object
    device:
      description: Contains information related to the device being provisioned.
      properties:
        device_id:
          description: Identity number of the device.
          type: string
        ip_address:
          description: Device's IP address.
          type: string
        language_code:
          description: Language the device is configured to use.
          type: string
        location:
          description: Geographic coordinates of the device.
          type: string
        name:
          description: Name of the device.
          type: string
        phone_number:
          description: Device's telephone number.
          type: string
        token:
          description: Unique identifier of the device object.
          type: string
        type:
          description: Type of device being provisioned.
          type: string
      type: object
    digital_wallet_android_pay_provision_request:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description: Unique identifier of the user's Google device, as provided
            by Google during the provisioning process.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          description: Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud.
          maxLength: 50
          minLength: 1
          type: string
        wallet_account_id:
          description: User's Google Wallet account ID, as provided by Google during
            the provisioning process.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_account_id
      type: object
    digital_wallet_android_pay_provision_response:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description: Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: '#/components/schemas/android_push_tokenize_request_data'
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    digital_wallet_apple_pay_provision_request:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        certificates:
          description: |-
            Base64-encoded leaf and sub-CA certificates provided by Apple.

            The first element of the array should be the leaf certificate, followed by the sub-CA.
          items:
            description: |-
              Base64-encoded leaf and sub-CA certificates provided by Apple.

              The first element of the array should be the leaf certificate followed by the sub-CA.
            type: string
          type: array
        device_type:
          description: Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
          type: string
        nonce:
          description: One-time-use nonce provided by Apple for security purposes.
          type: string
        nonce_signature:
          description: Apple-provided signature to the nonce.
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - certificates
        - device_type
        - nonce
        - nonce_signature
        - provisioning_app_version
      type: object
    digital_wallet_apple_pay_provision_response:
      properties:
        activation_data:
          description: Cryptographic one-time passcode conforming to the payment network
            operator or service provider specifications.
          type: string
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description: Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        encrypted_pass_data:
          description: Payload encrypted with a shared key derived from the Apple
            Public Certificates and the generated ephemeral private key.
          type: string
        ephemeral_public_key:
          description: Ephemeral public key used for the provisioning attempt.
          type: string
        last_modified_time:
          description: Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
      required:
        - activation_data
        - card_token
        - created_time
        - encrypted_pass_data
        - ephemeral_public_key
        - last_modified_time
      type: object
    digital_wallet_samsung_pay_provision_request:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description: User's Samsung device unique identifier, as provided by Samsung
            during the provisioning process.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          description: Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud.
          maxLength: 50
          minLength: 1
          type: string
        wallet_user_id:
          description: User's Samsung Wallet account ID, as provided by Samsung during
            the provisioning process.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_user_id
      type: object
    digital_wallet_samsung_pay_provision_response:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description: Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: '#/components/schemas/samsung_push_tokenize_request_data'
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    digital_wallet_token:
      description: |-
        Contains information about the digital wallet that funded the transaction.

        Returned for all transactions funded by a digital wallet or related to digital wallet token provisioning.

        For more on digital wallets, see the <</core-api/digital-wallets-management, Digital Wallets Management>> API reference and <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>> developer guide.
      properties:
        address_verification:
          $ref: '#/components/schemas/address_verification'
        card_token:
          description: Unique identifier of the card.
          type: string
        created_time:
          description: Date and time when the digital wallet token object was created,
            in UTC.
          format: date-time
          type: string
        device:
          $ref: '#/components/schemas/device'
        fulfillment_status:
          description: |-
            Digital wallet token's provisioning status.

            For fulfillment status descriptions, see <</core-api/digital-wallets-management#postDigitalwallettokentransitions, Create Digital Wallet Token Transition>>.
          type: string
        issuer_eligibility_decision:
          description: |-
            The Marqeta platform's decision as to whether the digital wallet token should be provisioned.

            * *0000* – The token should be provisioned.

            * *token.activation.verification.required* – Provisioning is pending; further action is required for completion.

            For all other values, check the value of the `fulfillment_status` field to definitively ascertain the provisioning outcome.

            *NOTE:* The value `invalid.cid` indicates an invalid CVV2 number.
          type: string
        last_modified_time:
          description: Date and time when the digital wallet token object was last
            modified, in UTC.
          format: date-time
          type: string
        metadata:
          $ref: '#/components/schemas/digital_wallet_token_metadata'
        state:
          description: |-
            State of the digital wallet token.

            For state descriptions, see <</developer-guides/managing-the-lifecycle-of-digital-wallet-tokens#_transitioning_token_states, Transitioning Token States>>.
          type: string
        state_reason:
          description: Reason why the digital wallet token transitioned to its current
            state.
          type: string
        token:
          description: Unique identifier of the digital wallet token.
          type: string
        token_service_provider:
          $ref: '#/components/schemas/token_service_provider'
        user:
          $ref: '#/components/schemas/user_card_holder_response'
        wallet_provider_profile:
          $ref: '#/components/schemas/wallet_provider_profile'
      type: object
    digital_wallet_token_address_verification:
      properties:
        validate:
          default: true
          description: Specifies whether or not the address used for address verification
            is valid.
          type: boolean
      type: object
    digital_wallet_token_hash:
      description: Contains identifiers of the digital wallet token resource and the
        card resource.
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        token:
          description: Unique identifier of the digital wallet token resource.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    digital_wallet_token_metadata:
      description: Contains additional information about the digital wallet token.
      properties:
        cardproduct_preferred_notification_language:
          description: |-
            Language specified in the `config.transaction_controls.notification_language` field of the card product:
            `ces` (Czech), `deu` (German), `eng` (English), `fra` (French), `ita` (Italian), `pol` (Polish), `spa` (Spanish), `swe` (Swedish)

            The ISO maintains the link:https://www.iso.org/iso-3166-country-codes.html[full list of ISO 3166 two- and three-digit numeric country codes, window="_blank"].
          type: string
        issuer_product_config_id:
          description: Unique identifier of the product configuration on the Marqeta
            platform.
          type: string
      type: object
    digital_wallet_token_transition_request:
      properties:
        channel:
          description: Mechanism by which the transition was initiated.
          enum:
            - TOKEN_SERVICE_PROVIDER
            - TOKEN_SERVICE_PROVIDER_API
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token_hash'
        reason:
          description: The reason for the transition.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            Standard code describing the reason for the transition.

            *NOTE:* This field is required if your program uses v2 of the `user_card_state_version`, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API.
            To learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        state:
          description: |-
            Specifies the state to which the digital wallet token will transition.

            The original state is `REQUESTED`. You cannot modify the state if its current value is either `REQUEST_DECLINED` or `TERMINATED`.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
        token:
          description: |-
            The unique identifier of the digital wallet token transition (not the identifier of the digital wallet token itself).

            If you do not include a value for the `token` field, the system will generate one automatically.
            This value is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        token_reference_id:
          description: |-
            The unique identifier of the digital wallet token within the card network.
            The `token_reference_id` is unique at the card network level.
          type: string
      required:
        - digital_wallet_token
        - state
      type: object
    digital_wallet_token_transition_response:
      properties:
        card_swap:
          $ref: '#/components/schemas/card_swap_hash'
        channel:
          description: Mechanism by which the transition was initiated.
          enum:
            - TOKEN_SERVICE_PROVIDER
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - TOKEN_SERVICE_PROVIDER_API
          type: string
        created_time:
          description: Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token_hash'
        fulfillment_status:
          description: Provisioning status of the digital wallet token.
          enum:
            - DECISION_RED
            - DECISION_YELLOW
            - DECISION_GREEN
            - REJECTED
            - PROVISIONED
          type: string
        reason:
          description: Reason for the transition.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            Standard code describing the reason for the transition:

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - '00'
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - 08
            - 09
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - '17'
            - '18'
            - '19'
            - '20'
            - '21'
            - '22'
            - '23'
            - '24'
            - '25'
            - '26'
            - '27'
            - '28'
            - '29'
            - '30'
            - '31'
          type: string
        state:
          description: Specifies the state to which the digital wallet token is transitioning.
          enum:
            - REQUESTED
            - REQUEST_DECLINED
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
        token:
          description: Unique identifier of the digital wallet token transition, and
            not the identifier of the digital wallet token itself.
          maxLength: 36
          minLength: 1
          type: string
        type:
          description: |-
            Type of digital wallet token transition.
            `state.activated`, for example.
          maxLength: 36
          minLength: 0
          readOnly: true
          type: string
      required:
        - channel
        - digital_wallet_token
        - fulfillment_status
        - state
        - token
        - type
      type: object
    digital_wallet_tokenization:
      description: Controls characteristics related to digital wallets.
      properties:
        card_art_id:
          description: |-
            Specifies the digital wallet card art identifier for the card product.
            Digital wallets display the card art after the initial token has been provisioned and activated.
            Digital wallet card art is updated for all wallets automatically whenever a tokenized card is reissued or replaced.

            * If your card program is Managed by Marqeta, Marqeta populates this field on your behalf.
            * If your card program is Powered by Marqeta, you can obtain the correct card art identifier directly from Visa or Mastercard.

            If this field is left blank, your card product inherits the card art assigned to the account BIN range.
          type: string
        provisioning_controls:
          $ref: '#/components/schemas/provisioning_controls'
      type: object
    digital_wallet_x_pay_provision_request:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description: Unique identifier of the user's XPay device, as provided by
            XPay during the provisioning process.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          description: Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud.
          maxLength: 50
          minLength: 1
          type: string
        token_requestor_id:
          description: |-
            Unique numerical identifier of the digital wallet token requestor within the card network.
            These ID numbers map to `token_requestor_name` field values as follows:

            *Mastercard*

            * 50110030273 – `APPLE_PAY`
            * 50120834693 – `ANDROID_PAY`
            * 50139059239 – `SAMSUNG_PAY`

            *Visa*

            * 40010030273 – `APPLE_PAY`
            * 40010075001 – `ANDROID_PAY`
            * 40010043095 – `SAMSUNG_PAY`
            * 40010075196 – `MICROSOFT_PAY`
            * 40010075338 – `VISA_CHECKOUT`
            * 40010075449 – `FACEBOOK`
            * 40010075839 – `NETFLIX`
            * 40010077056 – `FITBIT_PAY`
            * 40010069887 – `GARMIN_PAY`
          maxLength: 11
          minLength: 0
          type: string
        wallet_account_id:
          description: User's XPay account identifier, as provided by XPay during
            the provisioning process.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - token_requestor_id
        - wallet_account_id
      type: object
    digital_wallet_x_pay_provision_response:
      properties:
        card_token:
          description: Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description: Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: '#/components/schemas/xpay_push_tokenize_request_data'
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    direct_deposit_account_request:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          description: Required if 'user_token' is null
          maxLength: 36
          minLength: 1
          type: string
        customer_due_diligence:
          description: Required if account type = Checking
          items:
            $ref: '#/components/schemas/customer_due_diligence_request'
          type: array
        token:
          type: string
        type:
          enum:
            - DEPOSIT_ACCOUNT
            - CHECKING
            - SAVINGS
          type: string
        user_token:
          description: Required if 'business_token' is null
          maxLength: 36
          minLength: 1
          type: string
      type: object
    direct_deposit_account_response:
      properties:
        account_number:
          maxLength: 17
          minLength: 13
          type: string
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        routing_number:
          maxLength: 9
          minLength: 9
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        type:
          maxLength: 36
          minLength: 7
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
      required:
        - account_number
        - allow_immediate_credit
        - business_token
        - created_time
        - last_modified_time
        - routing_number
        - state
        - token
        - user_token
      type: object
    direct_deposit_account_transition_request:
      properties:
        account_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        reason:
          maxLength: 255
          minLength: 1
          type: string
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        token:
          type: string
      required:
        - account_token
        - channel
      type: object
    direct_deposit_account_transition_response:
      properties:
        account_token:
          maxLength: 36
          minLength: 36
          type: string
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        channel:
          maxLength: 10
          minLength: 6
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
      required:
        - account_token
        - business_token
        - channel
        - created_time
        - reason
        - state
        - token
        - user_token
      type: object
    echo_ping_request:
      properties:
        payload:
          description: Payload of the ping request.
          type: string
        token:
          description: Unique identifier of the ping request.
          type: string
      type: object
    echo_ping_response:
      properties:
        id:
          type: string
        payload:
          type: string
        success:
          default: false
          type: boolean
      type: object
    error_message_from_web_push_provisioning_request:
      properties:
        error_code:
          description: Code for the error that occurred.
          example: '400401'
          type: string
        error_message:
          description: Descriptive error message.
          example: 'Invalid input(s): invalid user token'
          type: string
      required:
        - error_code
        - error_message
      type: object
    expiration_offset:
      description: Specifies the length of time after the date of issue for which
        the cards are valid.
      properties:
        unit:
          description: Specifies the units for the `value` field in this object.
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field in this object) for which the cards are valid.
            In other words, cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS* – Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS* – Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS* – Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS* – No rounding.
          format: int32
          type: integer
      type: object
    expiration_offset_with_minimum:
      description: Specifies the length of time after the date of issue for which
        cards of this card product type are valid.
      properties:
        min_offset:
          $ref: '#/components/schemas/min_offset'
        unit:
          description: Specifies the units for the `value` field.
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field in this object) for which cards of this card product type are valid.
            In other words, cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS* – Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS* – Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS* – Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS* – No rounding.
          format: int32
          type: integer
      type: object
    fee:
      description: Contains details about the fee.
      properties:
        active:
          default: false
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        created_time:
          description: Date and time when the `fees` object was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        last_modified_time:
          description: Date and time when the `fees` object was last modified, in
            UTC.
          format: date-time
          type: string
        name:
          description: Name of the fee.
          type: string
        real_time_assessment:
          $ref: '#/components/schemas/real_time_fee_assessment'
        tags:
          description: Descriptive metadata about the fee.
          type: string
        token:
          description: Unique identifier of the `fees` object.
          type: string
      required:
        - active
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
    fee_detail:
      description: Contains details about a fee.
      properties:
        fee:
          $ref: '#/components/schemas/fee'
        memo:
          description: Additional text that describes the fee transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the fee.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the fee transaction.
          type: string
      required:
        - fee
        - token
        - transaction_token
      type: object
    fee_model:
      description: Contains attributes that define characteristics of one or more
        fees.
      properties:
        memo:
          description: Additional text that describes the fee transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Descriptive metadata about the fee transfer.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the fee.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    fee_request:
      properties:
        active:
          default: true
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        name:
          description: Name of the fee request.
          maxLength: 50
          minLength: 1
          type: string
        real_time_assessment:
          $ref: '#/components/schemas/RealTimeFeeAssessmentRequest'
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the fee.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so Marqeta recommends that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - name
      type: object
    fee_transfer_request:
      properties:
        business_token:
          description: |-
            Specifies the business account holder to which the fee applies.

            Pass either `business_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
        fees:
          description: Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: '#/components/schemas/fee_model'
          type: array
        tags:
          description: Metadata about the transfer.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the fee transfer.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Specifies the user account holder to which the fee applies.

            Pass either `user_token` or `business_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - business_token
        - fees
        - user_token
      type: object
    fee_transfer_response:
      description: Contains information about a fee transfer, including the amount,
        currency code, and user or business token.
      properties:
        business_token:
          description: Specifies the business account holder to which the fee applies.
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          description: Date and time when the `fee_transfer` object was created, in
            UTC.
          format: date-time
          type: string
        fees:
          description: Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: '#/components/schemas/fee_detail'
          type: array
        tags:
          description: |-
            Metadata about the transfer.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the fee transfer.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: Specifies the user account holder to which the fee applies.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - business_token
        - created_time
        - fees
        - token
        - user_token
      type: object
    fee_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        name:
          description: Name of the fee request.
          maxLength: 50
          minLength: 1
          type: string
        real_time_assessment:
          $ref: '#/components/schemas/RealTimeFeeAssessmentRequest'
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 1
          type: string
      type: object
    fileMapResponse:
      additionalProperties:
        $ref: '#/components/schemas/FileResponse'
      type: object
    financial_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        transaction_options:
          $ref: '#/components/schemas/transaction_options'
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - card_acceptor
        - card_token
        - mid
      type: object
    fraud_view:
      description: Contains one or more fraud determinations by the card network that
        apply to either the transaction or the cardholder's account.
      properties:
        issuer_processor:
          $ref: '#/components/schemas/issuer_fraud_view'
        network:
          $ref: '#/components/schemas/network_fraud_view'
        network_account_intelligence_score:
          $ref: '#/components/schemas/network_account_intelligence_score'
      type: object
    fulfillment_address_request:
      description: Specifies a fulfillment shipping or return address.
      properties:
        address1:
          description: Number and street of the address.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City of the address.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name of the addressee.
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: Last name of the addressee.
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          description: Middle name of the addressee.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number of the addressee.
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: State of the address.
          maxLength: 32
          minLength: 0
          type: string
        zip:
          description: United States ZIP code of the address.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    funding:
      description: Contains funding information for the transaction, including funding
        amount, type, and time.
      properties:
        amount:
          description: Amount of funds loaded into the GPA.
          type: number
        gateway_log:
          $ref: '#/components/schemas/gateway_log_model'
        source:
          $ref: '#/components/schemas/funding_source_model'
        source_address:
          $ref: '#/components/schemas/CardholderAddressResponse'
      required:
        - source
      type: object
    funding_account_response_model:
      properties:
        account_suffix:
          description: |-
            Account identifier appended to the bank account number.
            This field is returned if it exists in the resource.
          type: string
        account_type:
          description: |-
            Type of account.
            This field is returned if it exists in the resource.
          type: string
        active:
          default: false
          description: |-
            Specifies whether the account is active.
            This field is returned if it exists in the resource.
          type: boolean
        business_token:
          description: |-
            Unique identifier of the `business` account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        date_sent_for_verification:
          description: |-
            Date and time when the account was sent for verification, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            Date and time when the account was verified, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        exp_date:
          description: |-
            Payment card expiration date.
            This field is returned if it exists in the resource.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.

            This field is returned if it exists in the resource.
          type: boolean
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        link_partner_account_reference_token:
          type: string
        name_on_account:
          description: |-
            Name on the account.
            This field is returned if it exists in the resource.
          type: string
        partner:
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            This field is returned if it exists in the resource.
          type: string
        type:
          description: Funding source type.
          type: string
        user_token:
          description: |-
            Unique identifier of the `user` account holder.
            This token is returned if a `business_token` is not specified.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description: Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
        verification_status:
          description: |-
            Account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    funding_source_model:
      description: Contains funding source information for the transaction, including
        the funding type and time.
      discriminator:
        mapping:
          bankaccount: '#/components/schemas/bank_account_funding_source_model'
          chargeback: '#/components/schemas/chargeback_funding_source_model'
          directdeposit: '#/components/schemas/direct_deposit_funding_source_model'
          paymentcard: '#/components/schemas/payment_card_funding_source_model'
          program: '#/components/schemas/program_funding_source_model'
          programgateway: '#/components/schemas/program_gateway_funding_source_model'
        propertyName: type
      properties:
        active:
          default: false
          description: Whether the funding source is active.
          type: boolean
        created_time:
          description: Date and time when the funding source was created, in UTC.
          format: date-time
          type: string
        is_default_account:
          default: false
          description: Whether the GPA order unload's funding source is the default
            funding account.
          type: boolean
        last_modified_time:
          description: Date and time when the funding source was last modified, in
            UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the funding source.
          type: string
        type:
          description: Funding type of the funding source.
          type: string
      required:
        - active
        - created_time
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
    gateway_log_model:
      description: Contains information from the JIT Funding gateway in response to
        a funding request.
      properties:
        duration:
          description: Length of time in milliseconds that the gateway took to respond
            to a funding request.
          format: int64
          type: integer
        message:
          description: |-
            Message about the status of the funding request.
            Useful for determining whether it was approved and completed successfully, declined by the gateway, or timed out.
          type: string
        order_number:
          description: Customer order number, same value as `transaction.token`.
          type: string
        response:
          $ref: '#/components/schemas/gateway_response'
        timed_out:
          default: false
          description: Whether the gateway sent a response (`true`) or timed out (`false`).
          type: boolean
        transaction_id:
          description: Customer-defined identifier for the transaction.
          type: string
      required:
        - message
        - order_number
        - transaction_id
      type: object
    gateway_program_custom_header_update_request:
      properties:
        custom_header:
          additionalProperties:
            type: string
          description: "Additional custom information included in the HTTP header.\
            \ \nFor example, this might contain security information, along with Basic\
            \ Authentication, when making a JIT Funding request. \nCustom headers\
            \ also appear in the associated webhook's notifications. "
          type: object
      type: object
    gateway_program_funding_source_request:
      properties:
        active:
          description: Indicates whether the program gateway funding source is active.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          maxLength: 100
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: |-
            Additional custom information included in the HTTP header.
            For example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.
            Custom headers also appear in the associated webhook's notifications.
          type: object
        name:
          description: Name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          maximum: 7000
          minimum: 1000
          type: integer
        token:
          description: |-
            Unique identifier of the program gateway funding source.
            If you do not include a token, the system will generate one automatically.
            As this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        url:
          description: URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          maxLength: 250
          minLength: 0
          type: string
        use_mtls:
          default: false
          description: Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - name
        - url
      type: object
    gateway_program_funding_source_response:
      properties:
        account:
          description: Bank account number.
          type: string
        active:
          description: |-
            Indicates whether the program gateway funding source is active.
            This field is returned if it exists in the resource.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: Additional custom information included in the HTTP header.
          type: object
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          type: integer
        token:
          description: Unique identifier of the program gateway funding source.
          maxLength: 36
          minLength: 1
          type: string
        url:
          description: URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          type: string
        use_mtls:
          default: false
          description: Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
        version:
          description: Program gateway funding source object version.
          type: string
      required:
        - account
        - basic_auth_password
        - basic_auth_username
        - created_time
        - custom_header
        - last_modified_time
        - name
        - timeout_millis
        - token
        - url
        - use_mtls
        - version
      type: object
    gateway_program_funding_source_update_request:
      properties:
        active:
          description: Indicates whether the program gateway funding source is active.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          maxLength: 100
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: |-
            Additional custom information included in the HTTP header.
            For example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.
            Custom headers also appear in the associated webhook's notifications.
          type: object
        name:
          description: Name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          maximum: 7000
          minimum: 1000
          type: integer
        url:
          description: URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          maxLength: 250
          minLength: 0
          type: string
        use_mtls:
          default: false
          description: Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
    gateway_response:
      description: Contains information from the gateway in response to a funding
        request.
      properties:
        code:
          description: Code received from the gateway.
          type: string
        data:
          $ref: '#/components/schemas/jit_program_response'
      required:
        - code
      type: object
    gpa:
      description: Defines the type of order.
      properties:
        reload_amount:
          description: |-
            Available balance on the card after the reload has completed.

            This value must be greater than or equal to the value of `trigger_amount`.
            Note that this is not the same as the amount added to the card, which will vary from reload to reload.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        trigger_amount:
          description: |-
            Threshold that determines when the reload happens.

            The reload is triggered when the card balance falls below this amount.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
      required:
        - reload_amount
        - trigger_amount
      type: object
    gpa_request:
      properties:
        amount:
          description: Amount to fund.
          type: number
        business_token:
          description: |-
            Unique identifier of the business.

            Pass either a `business` token or a `user` token, not both.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description: List of fees associated with the funding transaction.
          items:
            $ref: '#/components/schemas/fee_model'
          type: array
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this order.
            If your funding source is an ACH account, then a funding source address is not required. If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.
            Send a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: |-
            Unique identifier of the funding source to use for this order.

            You do not have to supply a funding source token value in this call if you have a default funding source set up (verify the funding source's `is_default_account` field).
            If you have only one funding source, then this source is used as the default.
            If you have multiple funding sources and none are configured as the default, then an error is returned.

            Send a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        memo:
          description: Additional descriptive text.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the order.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the GPA order.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user.

            Pass either a `user` token or a `business` token, not both.

            Send a `GET` request to `/users` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - funding_source_token
      type: object
    gpa_response:
      description: |-
        Contains information about a GPA order, including fees, funding sources, and addresses.
        See <</core-api/gpa-orders, GPA Orders>> for more information.
      properties:
        amount:
          description: Amount funded.
          type: number
        business_token:
          description: |-
            Unique identifier of the business.

            This field is returned if it exists in the resource.
          type: string
        created_time:
          description: Date and time when the GPA order was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description: |-
            List of fees associated with the funding transaction.

            This array is returned if it exists in the resource.
          items:
            $ref: '#/components/schemas/fee_detail'
          type: array
        funding:
          $ref: '#/components/schemas/funding'
        funding_source_address_token:
          description: Unique identifier of the funding source address to use for
            this order.
          type: string
        funding_source_token:
          description: Unique identifier of the funding source to use for this order.
          type: string
        gateway_message:
          description: |-
            Message about the status of the funding request.
            Useful for determining whether it was approved and completed successfully, declined by the gateway, or timed out.

            This field is returned if it exists in the resource.
          type: string
        gateway_token:
          description: |-
            Unique identifier of the JIT Funding request and response.

            This field is returned if it exists in the resource.
          format: int64
          type: integer
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        last_modified_time:
          description: Date and time when the GPA order was last modified, in UTC.
          format: date-time
          type: string
        memo:
          description: |-
            Additional descriptive text.

            This field is returned if it exists in the resource.
          type: string
        response:
          $ref: '#/components/schemas/response'
        state:
          description: Current status of the funding transaction.
          type: string
        tags:
          description: |-
            Comma-delimited list of tags describing the order.

            This field is returned if it exists in the resource.
          type: string
        token:
          description: Unique identifier of the GPA order.
          type: string
        transaction_token:
          description: Unique identifier of the transaction being funded.
          type: string
        user_token:
          description: |-
            Unique identifier of the user resource.

            This field is returned if it exists in the resource.
          type: string
      required:
        - amount
        - created_time
        - currency_code
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
    gpa_returns:
      description: Contains information about a GPA unload order.
      properties:
        amount:
          description: Amount of funds returned to the funding source.
          type: number
        created_time:
          description: Date and time when the GPA unload order was created, in UTC.
          format: date-time
          type: string
        funding:
          $ref: '#/components/schemas/funding'
        funding_source_address_token:
          description: Identifies the funding source used for this order.
          type: string
        funding_source_token:
          description: Identifies the funding source used for this order.
          type: string
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        last_modified_time:
          description: Date and time when the GPA unload order was last modified,
            in UTC.
          format: date-time
          type: string
        memo:
          description: Additional descriptive text.
          type: string
        original_order_token:
          description: Identifies the original GPA order.
          type: string
        response:
          $ref: '#/components/schemas/response'
        state:
          description: Current status of the GPA unload order.
          type: string
        tags:
          description: Comma-delimited list of tags describing the order.
          type: string
        token:
          description: Unique identifier of the GPA unload order.
          type: string
        transaction_token:
          description: Unique identifier of the transaction.
          type: string
      required:
        - amount
        - created_time
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
    hold_increase:
      description: Controls automatic increases to the authorization amount for MCCs
        specified in this group.
      properties:
        type:
          default: AMOUNT
          description: Controls whether the `value` field represents a fixed amount
            or a percentage of the authorization amount.
          enum:
            - AMOUNT
            - PERCENT
            - UP_TO_LIMIT
          type: string
        value:
          description: |-
            Specifies the amount of the automatic increase to the authorization amount.

            The `type` field controls whether this amount is a fixed amount or a percentage.
          type: number
      required:
        - type
        - value
      type: object
    images:
      description: Specifies personalized images that appear on the card.
      properties:
        card:
          $ref: '#/components/schemas/images_card'
        carrier:
          $ref: '#/components/schemas/ImagesCarrier'
        carrier_return_window:
          $ref: '#/components/schemas/images_carrier_return_window'
        signature:
          $ref: '#/components/schemas/images_signature'
      type: object
    images_card:
      description: Specifies personalized images that appear on the card.
      properties:
        name:
          description: Specifies a PNG image to display on the card.
          type: string
        thermal_color:
          description: Specifies the color of the image displayed on the card.
          type: string
      type: object
    images_carrier_return_window:
      description: Specifies a custom image to display in the return address window
        of the card carrier envelope.
      properties:
        name:
          description: Specifies a PNG image to display in the return address window
            of envelopes used for sending cards to cardholders.
          type: string
      type: object
    images_signature:
      description: Specifies an image of the cardholder's signature.
      properties:
        name:
          description: Specifies a PNG image of the cardholder's signature.
          type: string
      type: object
    in_app_provisioning:
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          default: false
          description: Specifies if in-app provisioning is enabled.
          type: boolean
      type: object
    issuer_fraud_view:
      description: Contains one or more fraud determinations by the card network that
        apply to either the transaction or the cardholder's account.
      properties:
        fraud_score_reasons:
          items:
            type: string
          type: array
        recommended_action:
          description: The rules violated by the transaction.
          type: string
        risk_level:
          description: The fraud rating, or level of risk associated with the transaction.
          type: string
        riskcontrol_tags:
          description: The RiskControl tags that were triggered by the transaction.
          items:
            $ref: '#/components/schemas/riskcontrol_tags'
          type: array
        rule_violations:
          description: The rules violated by the transaction.
          items:
            type: string
          type: array
        score:
          description: |-
            The risk score generated by RiskControl.
            This is either the Mastercard Decision Intelligence or Visa Advance Authorization transaction risk score.
          format: int32
          type: integer
      type: object
    jit_address_verification:
      description: Contains address verification data consisting of address data entered
        by the cardholder, address data held by the Marqeta platform, and an assertion
        by the Marqeta platform as to whether the two sets of data match.
      properties:
        gateway:
          $ref: '#/components/schemas/address_verification_source'
        issuer:
          $ref: '#/components/schemas/address_verification_source'
        request:
          $ref: '#/components/schemas/avs_information'
      type: object
    jit_funding:
      description: Governs the behavior of JIT Funding.
      properties:
        paymentcard_funding_source:
          $ref: '#/components/schemas/jit_funding_paymentcard_funding_source'
        program_funding_source:
          $ref: '#/components/schemas/jit_funding_program_funding_source'
        programgateway_funding_source:
          $ref: '#/components/schemas/jit_funding_programgateway_funding_source'
      type: object
    jit_funding_api:
      description: Contains information about the JIT Funding load event, in which
        funds are loaded into an account.
      properties:
        acting_user_token:
          description: |-
            User who conducted the transaction.

            Can be a child user configured to share its parent's account balance.
          maxLength: 36
          minLength: 0
          type: string
        address_verification:
          $ref: '#/components/schemas/jit_address_verification'
        amount:
          description: Requested amount of funding.
          exclusiveMinimum: false
          minimum: 0
          type: number
        balances:
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
          description: Contains the GPA's balance details.
          type: object
        business_token:
          description: Holder of the business account that was funded.
          maxLength: 36
          minLength: 0
          type: string
        decline_reason:
          description: Reason why the transaction was declined.
          enum:
            - INVALID_AMOUNT
            - INSUFFICIENT_FUNDS
            - TRANSACTION_NOT_PERMITTED
            - SUSPECTED_FRAUD
            - AMOUNT_LIMIT_EXCEEDED
            - TRANSACTION_COUNT_LIMIT_EXCEEDED
            - DUPLICATE_TRANSACTION
            - INVALID_MERCHANT
            - INVALID_CARD
            - NO_CREDIT_ACCOUNT
            - EXPIRED_CARD
            - NO_CHECKING_ACCOUNT
            - NO_SAVINGS_ACCOUNT
            - STOP_PAYMENT
            - REVOCATION_AUTHORIZATION_ORDER
            - REVOCATION_ALL_AUTHORIZATION_ORDER
            - SOFT_DECLINE_AUTHENTICATION_REQUIRED
            - CLOSED_ACCOUNT
            - SOFT_DECLINE_PIN_REQUIRED
            - CARD_NOT_ACTIVE
            - CARDHOLDER_NOT_ACTIVE
          type: string
        incremental_authorization_jit_funding_tokens:
          description: |-
            Array of tokens referencing the JIT Funding tokens of all previous associated incremental authorization JIT Funding requests.
            Useful for ascertaining the final transaction amount when the original amount was incremented.
          items:
            type: string
          type: array
        memo:
          description: Additional information that describes the JIT Funding transaction.
          maxLength: 99
          minLength: 0
          type: string
        method:
          description: |-
            JIT Funding response type.
            See <</core-api/gateway-jit-funding-messages#_the_jit_funding_object, The jit_funding object>> for the purpose, funding event type, and description of each method.
          enum:
            - pgfs.authorization
            - pgfs.balanceinquiry
            - pgfs.authorization.incremental
            - pgfs.authorization.capture
            - pgfs.authorization.reversal
            - pgfs.auth_plus_capture
            - pgfs.refund
            - pgfs.force_capture
            - pgfs.authorization.capture.chargeback
            - pgfs.authorization.capture.chargeback.reversal
            - pgfs.pindebit.chargeback
            - pgfs.pindebit.chargeback.reversal
            - pgfs.dispute.credit
            - pgfs.dispute.debit
            - pgfs.directdeposit.credit
            - pgfs.directdeposit.debit
            - pgfs.directdeposit.credit.reversal
            - pgfs.directdeposit.debit.reversal
            - pgfs.adjustment.credit
            - pgfs.adjustment.debit
            - pgfs.auth_plus_capture.standin
            - pgfs.authorization.standin
            - pgfs.network.load
            - pgfs.original.credit.authorization
            - pgfs.original.credit.auth_plus_capture
            - pgfs.refund.authorization
            - pgfs.refund.authorization.reversalpgfs.billpayment
            - pgfs.billpayment.capture
            - pgfs.billpayment.reversal
            - pgfs.authorization.account_verification
          type: string
        original_jit_funding_token:
          description: |-
            Unique identifier of the first associated JIT Funding message.
            Useful for correlating related JIT Funding messages (that is, those associated with the same GPA order).
            Not included in the first of any set of related messages.
          maxLength: 36
          minLength: 0
          type: string
        tags:
          description: Customer-defined tags related to the JIT Funding transaction.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Existing JIT Funding token matching the `funding.gateway_log.transaction_id` field of the associated GPA order.
            Note that the `transaction_id` field updates if a subsequent JIT Funding message associated with that GPA order is sent.
            If multiple JIT Funding messages are associated with the same GPA order, the `transaction_id` field matches the token of the most recent message.
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          description: Holder of the user account that was funded.
          maxLength: 36
          minLength: 0
          type: string
      required:
        - amount
        - method
        - token
        - user_token
      type: object
    jit_funding_paymentcard_funding_source:
      properties:
        enabled:
          default: false
          description: |-
            Specifies whether JIT Funding is enabled or disabled for the payment card funding source.
            A value of `true` indicates that the payment card funding source is enabled and will be debited when swipes occur.
          type: boolean
        refunds_destination:
          description: Specifies the return destination for refunds in the case of
            a transaction reversal.
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          maxLength: 50
          minLength: 0
          type: string
      type: object
    jit_funding_program_funding_source:
      properties:
        enabled:
          default: false
          description: |-
            Specifies whether JIT Funding is enabled or disabled for the program funding source.
            A value of `true` indicates that the program funding source is enabled and will be debited when swipes occur.
          type: boolean
        funding_source_token:
          description: |-
            Unique identifier of the already existing funding source.
            Required if JIT Funding is enabled.
          maxLength: 36
          minLength: 0
          type: string
        refunds_destination:
          description: |-
            Specifies the return destination for refunds in the case of a transaction reversal.
            `PROGRAM_FUNDING_SOURCE` returns funds to the program funding source.
            `GPA` returns the funds to the user's GPA.
          enum:
            - PROGRAM_FUNDING_SOURCE
            - GPA
            - WATERFALL
          maxLength: 50
          minLength: 0
          type: string
      type: object
    jit_funding_programgateway_funding_source:
      properties:
        always_fund:
          default: false
          description: If set to `true`, this card product is always funded from this
            program gateway funding source.
          type: boolean
        enabled:
          default: false
          description: |-
            Specifies whether JIT Funding is enabled or disabled for the program gateway funding source.
            A value of `true` indicates that the program gateway funding source is enabled and will be debited when swipes occur.
          type: boolean
        funding_source_token:
          description: |-
            Unique identifier of the already existing funding source.
            Required if JIT Funding is enabled.
          maxLength: 36
          minLength: 0
          type: string
        refunds_destination:
          description: |-
            Specifies the return destination for refunds in the case of a transaction reversal.
            In most cases, you should set the value to `GATEWAY`, which returns funds to the program gateway funding source.
            Setting to `GPA` returns the funds to the user's GPA, which creates a positive account balance and introduces the potential of a transaction being authorized without a JIT Funding request being sent to the gateway.
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          maxLength: 50
          minLength: 0
          type: string
      type: object
    jit_program_response:
      description: Contains the gateway's information about the JIT Funding transaction.
      properties:
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
      required:
        - jit_funding
      type: object
    kyc_request:
      properties:
        business_token:
          description: |-
            Specifies the `business` account holder on which to perform the identity check.
            Do not pass this field if your request includes the `user_token` field.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        manual_override:
          default: false
          description: |-
            Set to `true` to designate a `user` account holder as having passed a verification check without Marqeta performing the check through one of its KYC providers.

            Use this override when you perform verification through another mechanism, such as with an alternative KYC provider or directly with the account holder.
            You must obtain explicit, written approval from Marqeta before using the `manual_override` field for KYC verification.
            Consult your Customer Success representative for more information.
          type: boolean
        notes:
          description: |-
            Notes pertaining to a manual override.
            This field is returned in the response only when the `manual_override` field is set to `true`.
          maxLength: 255
          minLength: 0
          type: string
        reference_id:
          description: |-
            Can be specified only if `manual_override=true`.
            If you verified a `user` account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.

            *NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.
            If the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response.
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: |-
            The unique identifier of the identity check.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Specifies the `user` account holder on which to perform the identity check.
            Do not pass this field if your request includes the `business_token` field.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    kyc_response:
      properties:
        business_token:
          description: The `business` account holder on which the identity check was
            performed.
          type: string
        created_time:
          description: Time when the KYC verification was performed.
          format: date-time
          type: string
        last_modified_time:
          description: Time when the KYC verification was last updated.
          format: date-time
          type: string
        manual_override:
          default: false
          description: |-
            If `true`, the `user` account holder is designated as having passed a verification check without Marqeta performing the check.

            This override is used when verification is performed through another mechanism, such as with an alternative KYC provider or directly with the account holder.
          readOnly: true
          type: boolean
        notes:
          description: |-
            Notes pertaining to a manual override.
            This field is included in the response only when the `manual_override` field is set to `true`.
          readOnly: true
          type: string
        reference_id:
          description: |-
            If you verified the account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.
            This field is included in the response only when the `manual_override` field is set to `true`.

            *NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.
            If the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response.
          type: string
        result:
          $ref: '#/components/schemas/result'
        token:
          description: The unique identifier of the identity check.
          type: string
        user_token:
          description: The `user` account holder on which the identity check was performed.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    link:
      description: Link to balances of related user GPAs.
      properties:
        href:
          description: URL of the requested `/balances` resource.
          readOnly: true
          type: string
        method:
          description: The HTTP method of the link.
          type: string
        rel:
          description: Specifies the relationship between the current resource and
            the linked resource.
          type: string
      required:
        - href
        - method
        - rel
      type: object
    login_request_model:
      properties:
        email:
          description: The cardholder's email address.
          type: string
        password:
          description: Cardholder's `user` account password on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: |-
            Identifies the cardholder to log in.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    login_response_model:
      properties:
        access_token:
          $ref: '#/components/schemas/access_token_response'
        user:
          $ref: '#/components/schemas/user_card_holder_response'
      type: object
    manual_entry:
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          default: false
          description: Specifies if manual entry is enabled.
          type: boolean
      type: object
    mcc_group_model:
      properties:
        active:
          default: false
          description: Indicates if the group is active or inactive.
          type: boolean
        config:
          $ref: '#/components/schemas/config'
        mccs:
          description: |-
            The set of merchant category codes that you want to include in this group.
            For each element, valid characters are 0-9, and the length must be 4 digits.
            You can also specify a range like "9876-9880".
            An MCC can belong to more than one group.
          items:
            properties: {
              }
            type: object
          maxItems: 500
          minItems: 0
          type: array
          uniqueItems: true
        name:
          description: The name of the group.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            The unique identifier of the group.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - mccs
        - name
      type: object
    mcc_group_update_model:
      properties:
        active:
          default: false
          description: Indicates whether the MCC group is active or inactive.
          type: boolean
        config:
          $ref: '#/components/schemas/config'
        mccs:
          description: |-
            The set of merchant category codes that you want to include in this group.
            For each element, valid characters are 0-9, and the length must be 4 digits.
            You can also specify a range like "9876-9880".
            An MCC can belong to more than one group.

            Updating the merchant category codes for the group completely replaces the group's existing codes.
            For example, if the current MCC group is `["1234"]` and you want to add the 2345 code (while retaining the existing code), you must specify `["1234", "2345"]` in this field.
          items:
            type: string
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: The name of the MCC group.
          type: string
      type: object
    merchant_group_request:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        mids:
          description: |-
            Comma-separated list of alphanumeric merchant identifiers.
            You can include merchant identifiers in multiple merchant groups.
          items:
            type: string
          maxItems: 4000
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: Name of the merchant group.
          maxLength: 40
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the group.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    merchant_group_response:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        mids:
          description: Comma-separated list of alphanumeric merchant identifiers.
          items:
            type: string
          type: array
        name:
          description: Name of the merchant group.
          type: string
        token:
          description: Unique identifier of the merchant group.
          type: string
      type: object
    merchant_group_update_request:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        mids:
          description: |-
            Comma-separated list of alphanumeric merchant identifiers.
            You can include merchant identifiers in multiple merchant groups.
          items:
            type: string
          maxItems: 4000
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: Name of the merchant group.
          maxLength: 40
          minLength: 1
          type: string
      type: object
    merchant_response_model:
      properties:
        active:
          default: true
          type: boolean
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        latitude:
          format: float
          type: number
        longitude:
          format: float
          type: number
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          default: true
          type: boolean
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: The unique identifier of the merchant
          maxLength: 36
          minLength: 1
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
        - name
      type: object
    merchant_scope:
      description: |-
        Defines the group of merchants to which the velocity control applies.

        Populate no more than one field of the `merchant_scope` object.
        If no fields are populated, the velocity control applies to all merchants.
      properties:
        mcc:
          description: |-
            Merchant Category Code (MCC).
            Identifies the type of products or services provided by the merchant.

            Enter a value to control spending on a particular type of product or service.
          maxLength: 4
          minLength: 1
          type: string
        mcc_group:
          description: |-
            Token identifying a group of MCCs.
            Enter a value to control spending on a group of product or service types.

            Send a `GET` request to `/mccgroups` to retrieve MCC group tokens.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant identifier (MID).
            Identifies a specific merchant.

            Enter a value to control spending with a particular merchant.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    min_offset:
      description: Specifies the minimum length of time after the date of issue for
        which the cards are valid.
      properties:
        unit:
          description: Specifies the time unit of the `value` field.
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field) for which cards of this card product type are valid.
            Cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS* – Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS* – Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS* – Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS* – No rounding.
          format: int32
          type: integer
      type: object
    money_in_transaction:
      description: Defines the original credit transaction (OCT) types that are subject
        to velocity control.
      properties:
        include_credits_types:
          description: Specifies the types of credits to include in the original credit
            transaction (OCT).
          items:
            type: string
          type: array
        include_network_load_types:
          description: Indicates whether or not cash and check network load transactions
            will be subject to velocity control.
          items:
            type: string
          type: array
      type: object
    msa:
      properties:
        campaign_token:
          type: string
        reload_amount:
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        trigger_amount:
          exclusiveMinimum: false
          minimum: 0.01
          type: number
      required:
        - campaign_token
        - reload_amount
        - trigger_amount
      type: object
    msa_aggregated_balances:
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: '#/components/schemas/msa_aggregated_balances'
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    msa_balances:
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: '#/components/schemas/msa_balances'
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    msa_returns:
      properties:
        active:
          default: false
          type: boolean
        aggregated_balances:
          $ref: '#/components/schemas/msa_aggregated_balances'
        amount:
          type: number
        business_token:
          type: string
        campaign_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        end_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        funding:
          $ref: '#/components/schemas/funding'
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_transaction_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        order_balances:
          $ref: '#/components/schemas/msa_balances'
        original_order_token:
          type: string
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        token:
          type: string
        transaction_token:
          type: string
        unloaded_amount:
          type: number
        user_token:
          type: string
      required:
        - active
        - aggregated_balances
        - amount
        - campaign_token
        - created_time
        - currency_code
        - funding
        - last_modified_time
        - last_transaction_date
        - order_balances
        - original_order_token
        - reward_amount
        - reward_trigger_amount
        - transaction_token
      type: object
    network:
      description: Contains information from the card network about currency conversion,
        including the original currency of the transaction, the amount of the transaction
        in the original currency, and the conversion rate.
      properties:
        conversion_rate:
          description: |-
            Conversion rate between the origination currency and the settlement currency.

            Returned when the transaction currency is different from the origination currency.
          type: number
        dynamic_currency_conversion:
          default: false
          description: Indicates whether currency conversion was performed dynamically
            at the point of sale.
          type: boolean
        original_amount:
          description: Amount of the transaction in the currency in which it originated.
          type: number
        original_currency_code:
          description: Currency type of the origination currency.
          type: string
        settlement_data:
          $ref: '#/components/schemas/settlement_data'
      type: object
    network_account_intelligence_score:
      description: Account intelligence score information, as provided by the Mastercard
        network.
      properties:
        name:
          description: The name, as provided by the Mastercard network.
          type: string
        service_type:
          description: The service type, as provided by the Mastercard network.
          type: string
        value:
          description: The value, as provided by the Mastercard network.
          type: string
      type: object
    network_fee_model:
      description: Contains card network fees assessed against the cardholder.
      properties:
        amount:
          description: The amount of the network fee.
          type: number
        credit_debit:
          description: |-
            Indicates whether the fee is a credit or a debit.

            * *C* indicates a credit
            * *D* indicates a debit
          enum:
            - C
            - D
          type: string
        type:
          description: The type of fee assessed by the card network.
          enum:
            - ISSUER_FEE
            - SWITCH_FEE
            - PINDEBIT_ASSOC_FEE
            - ACQUIRER_FEE
            - INTERCHANGE_FEE
            - CUR_CONV_CARDHOLDER_FEE
            - CUR_CONV_ISSUER_FEE
            - CROSS_BORDER_ISSUER_FEE
          type: string
      type: object
    network_fraud_view:
      description: Contains network-provided information about fraud determinations.
      properties:
        account_risk_score:
          description: |-
            _(Visa only)_ Account holder risk condition code evaluated by the card network.
            A higher score indicates a greater likelihood that the card number is compromised.
          type: string
        account_risk_score_reason_code:
          description: _(Visa only)_ Unique code that describes the main driver of
            the `account_risk_score`.
          type: string
        transaction_risk_score:
          description: |-
            Network-provided risk score for the transaction.
            A higher score indicates higher risk.
            Useful for making authorization decisions.
          format: int32
          type: integer
        transaction_risk_score_reason_code:
          description: _(Mastercard only)_ Unique code that describes the main driver
            of the `transaction_risk_score`.
          type: string
        transaction_risk_score_reason_description:
          description: _(Mastercard only)_ Description of the `transaction_risk_score_reason_code`.
          type: string
      type: object
    network_metadata:
      description: |-
        Contains network-related metadata for the transaction, including details about the card program and the card product.

        May be returned if the request uses Transaction Model V2 of the Marqeta Core API.
        Not returned for V1 requests.
      properties:
        account_identification_1:
          type: string
        product_id:
          description: |-
            Product identification value assigned by the card network to each card product.
            Can be used to track card-level activity by individual account number for premium card products.
          type: string
        program_id:
          description: Program identification number used with `product_id` that identifies
            the programs associated with a card within a program registered by the
            issuer with the card network.
          type: string
        spend_qualifier:
          description: Indicates whether or not the base spend-assessment threshold
            defined by the card network has been met.
          type: string
        surcharge_free_atm_network:
          description: Name of the surcharge-free ATM network used to complete the
            transaction.
          type: string
      type: object
    one_time_request_model:
      properties:
        email:
          description: |-
            Cardholder's email address.

            Required when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3).
          maxLength: 255
          minLength: 1
          type: string
        password:
          description: |-
            Cardholder's `user` account password on the Marqeta platform.

            Required when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3).
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: |-
            Identifies the cardholder whose data is accessed.
            Send a `GET` request to `/users` to retrieve cardholder tokens.

            Required when the Basic Authentication password is set to an admin access token (case #2).
          maxLength: 36
          minLength: 1
          type: string
      type: object
    order_scope:
      description: Defines the balance threshold and reload amounts.
      properties:
        gpa:
          $ref: '#/components/schemas/gpa'
        msa:
          $ref: '#/components/schemas/msa'
      type: object
    original_credit:
      description: Contains information about an original credit transaction (OCT),
        which enables the cardholder to receive funds on the specified card from an
        external source via the card network.
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
          type: string
        funding_source:
          description: Sender's account from which the OCT draws funds.
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
          type: string
        screening_score:
          description: |-
            Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.

            Higher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.

            A value of 999 means that no screening score is available.
          type: string
        sender_account_type:
          description: The type of account from which the OCT draws funds.
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
        sender_address:
          description: Sender's street address.
          type: string
        sender_city:
          description: Sender's city.
          type: string
        sender_country:
          description: Sender's country.
          type: string
        sender_name:
          description: Full name of the sender.
          type: string
        sender_state:
          description: Sender's state.
          type: string
        transaction_purpose:
          description: The purpose of the original credit transaction.
          type: string
        transaction_type:
          description: Type of original credit transaction.
          enum:
            - account_to_account
            - person_to_person
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - funds_transfer
            - general_business_to_business_transfer
            - business_to_business_transfer
            - cash_deposit
          type: string
      type: object
    original_credit_sender_data:
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
          type: string
        funding_source:
          enum:
            - credit
            - debit
            - prepaid
            - deposit_account
            - cash
            - mobile_money_payment
            - non_visa_credit
          type: string
        sender_account_number:
          type: string
        sender_account_type:
          enum:
            - other
            - rtn_bank_account
            - iban
            - card_account
            - email
            - phone_number
            - bank_account_number_and_identification_code
            - wallet_id
            - social_network_id
          type: string
        sender_address:
          type: string
        sender_city:
          type: string
        sender_country:
          type: string
        sender_name:
          type: string
        sender_reference_number:
          type: string
        sender_state:
          type: string
        transaction_purpose:
          enum:
            - family_support
            - labor_transfers
            - travel
            - education
            - medical_treatment
            - emergency_need
            - savings
            - gifts
            - other
            - salary
            - lending
            - crypto_currency
          type: string
        unique_transaction_reference_number:
          maxLength: 17
          minLength: 1
          type: string
        visa_transaction_purpose:
          type: string
      required:
        - funding_source
      type: object
    orignalcredit_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        screening_score:
          type: string
        sender_data:
          $ref: '#/components/schemas/original_credit_sender_data'
        transactionPurpose:
          type: string
        type:
          enum:
            - account_to_account
            - person_to_person
            - prepaid
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - card_token
        - mid
        - type
      type: object
    other_poi:
      description: Allows for configuration of points of interaction other than ecommerce
        or ATMs, such as points of sale (POS).
      properties:
        allow:
          default: true
          description: |-
            If set to `true`, card transactions at points of interaction other than e-commerce or ATMs are allowed.
            This group includes points of sale (POS).
          type: boolean
        card_presence_required:
          default: false
          description: If set to `true`, cards of this card product type are required
            to be present during the transaction, such as in IVR scenarios.
          type: boolean
        cardholder_presence_required:
          default: false
          description: If set to `true`, the cardholder is required to be present
            during the transaction, such as in a restaurant where the card is present
            but the cardholder might not be present when the card is swiped.
          type: boolean
        track1_discretionary_data:
          type: string
        track2_discretionary_data:
          type: string
        use_static_pin:
          default: false
          type: boolean
      type: object
    pan_request:
      properties:
        cvv_number:
          description: |-
            Three-digit card verification value (CVV2) included on the back of the card.

            This value cannot be updated.
          type: string
        expiration:
          description: Card expiration date.
          type: string
        pan:
          description: |-
            Primary account number (PAN) of the card whose information you want to retrieve.

            Send a `GET` request to `/cards/{token}/showpan` to retrieve the PAN for a specific card.
          type: string
      required:
        - pan
      type: object
    pan_response:
      properties:
        card_token:
          description: Unique identifier of the card.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        user_token:
          description: Unique identifier of the cardholder.
          type: string
      required:
        - card_token
        - created_time
        - last_modified_time
        - user_token
      type: object
    password_update_model:
      properties:
        current_password:
          description: The current password.
          maxLength: 255
          minLength: 1
          type: string
        new_password:
          description: The new password.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - current_password
        - new_password
      type: object
    payment_card_response_model:
      properties:
        account_suffix:
          description: Account identifier appended to the payment card number.
          type: string
        account_type:
          description: Type of payment card account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        business_token:
          description: |-
            Unique identifier of the `business` account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        exp_date:
          description: Payment card expiration date.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the funding source.
          type: string
        type:
          description: Funding source type.
          type: string
        user_token:
          description: |-
            Unique identifier of the `user` account holder.
            This token is returned if a `business_token` is not specified.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - exp_date
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
    peer_transfer_request:
      properties:
        amount:
          description: The amount of the transfer.
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        memo:
          description: Additional descriptive text about the transfer.
          maxLength: 99
          minLength: 1
          type: string
        recipient_business_token:
          description: |-
            Specifies the `business` account holder that receives funds.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        recipient_user_token:
          description: |-
            Specifies the `user` account holder that receives funds.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        sender_business_token:
          description: |-
            Specifies the `business` account holder that sends funds.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        sender_user_token:
          description: |-
            Specifies the `user` account holder that sends funds.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Metadata about the peer transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            The unique identifier of the peer transfer request.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
      type: object
    peer_transfer_response:
      description: Contains information about a peer transfer, including sender and
        recipient tokens, transfer amount, and currency code.
      properties:
        amount:
          description: Amount of the transfer.
          type: number
        created_time:
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        memo:
          description: Additional descriptive text about the peer transfer.
          type: string
        recipient_business_token:
          description: Specifies the business account holder that receives funds.
          type: string
        recipient_user_token:
          description: Specifies the user account holder that receives funds.
          type: string
        sender_business_token:
          description: Specifies the business account holder that sends funds.
          type: string
        sender_user_token:
          description: Specifies the user account holder that sends funds.
          type: string
        tags:
          description: Metadata about the peer transfer.
          type: string
        token:
          description: Unique identifier of the peer transfer request.
          type: string
      required:
        - amount
        - created_time
        - currency_code
        - token
      type: object
    pin_request:
      properties:
        control_token:
          description: |-
            The unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        pin:
          description: The four-digit number to associate with the card.
          type: string
      required:
        - control_token
        - pin
      type: object
    pin_reveal_request:
      properties:
        cardholder_verification_method:
          description: |-
            The supplemental method used to verify the cardholder's identity before revealing the card's personal identification number (PIN).

            The possible cardholder verification methods are:

            * *BIOMETRIC_FACE:* In-app authentication via facial recognition
            * *BIOMETRIC_FINGERPRINT:* In-app authentication via biometric fingerprint
            * *LOGIN:* In-app authentication by re-entering the app password
            * *EXP_CVV:* In-app authentication by entering the card's expiration date and card verification value (CVV)
            * *OTP:* Two-factor authentication involving a one-time password (OTP)
            * *OTP_CVV:* Two-factor authentication involving the card's CVV and an OTP
            * *OTHER:* Authentication that relies on other secure methods
          enum:
            - BIOMETRIC_FACE
            - BIOMETRIC_FINGERPRINT
            - LOGIN
            - EXP_CVV
            - OTP_CVV
            - OTP
            - OTHER
          type: string
        control_token:
          description: |-
            The unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - cardholder_verification_method
        - control_token
      type: object
    ping_response:
      properties:
        env:
          type: string
        id:
          type: string
        revision:
          type: string
        success:
          type: boolean
        timestamp:
          type: string
        version:
          type: string
      type: object
    poi:
      description: Governs the point of interaction.
      properties:
        atm:
          default: false
          description: If set to `true`, cards can be used for withdrawing cash at
            an ATM and for receiving cash back at a point of sale (POS).
          type: boolean
        ecommerce:
          default: true
          description: If set to `true`, cards can be used for online purchases.
          type: boolean
        other:
          $ref: '#/components/schemas/other_poi'
      type: object
    pos:
      description: |-
        Contains information about the point of sale, including details on how the card was presented.

        May be returned if the request uses Transaction Model V2 of the Marqeta Core API.
        Not returned for V1 requests.
      properties:
        card_data_input_capability:
          description: How the terminal accepts card data.
          enum:
            - UNKNOWN
            - NO_TERMINAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - MAG_STRIPE_KEY_ENTRY
            - CHIP
            - CHIP_CONTACTLESS
            - CHIP_MAG_STRIPE
            - CHIP_MAG_STRIPE_KEY_ENTRY
            - KEY_ENTRY
            - OCR
            - MICR
            - BAR_CODE
          type: string
        card_holder_presence:
          default: false
          description: Whether the cardholder was present during the transaction.
          type: boolean
        card_presence:
          default: false
          description: Whether the card was present during the transaction.
          type: boolean
        cardholder_authentication_method:
          description: Method used to authenticate the cardholder.
          enum:
            - UNSPECIFIED
            - NON_AUTHENTICATED
            - SIGNATURE
            - PIN
            - ID_VERIFIED
          type: string
        country_code:
          description: Country code of the card acceptor or terminal.
          type: string
        is_installment:
          default: false
          description: Whether the transaction is an installment payment.
          type: boolean
        is_recurring:
          default: false
          description: Whether the transaction is recurring.
          type: boolean
        pan_entry_mode:
          description: Method used for capturing the card primary account number (PAN)
            during the transaction.
          enum:
            - UNKNOWN
            - MANUAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - BAR_CODE
            - OCR
            - MICR
            - CHIP
            - CHIP_CONTACTLESS
            - CARD_ON_FILE
            - CHIP_FALLBACK
            - OTHER
          type: string
        partial_approval_capable:
          default: false
          description: Whether the card acceptor or terminal is capable of partial
            approvals.
          type: boolean
        pin_entry_mode:
          description: |-
            Whether the card acceptor or terminal can capture card personal identification numbers (PINs).

            *NOTE:* This field does not indicate whether a PIN was entered.
          enum:
            - UNKNOWN
            - 'TRUE'
            - 'FALSE'
            - DEFECTIVE
          type: string
        pin_present:
          default: false
          description: Indicates whether a PIN was presented during the transaction.
          type: boolean
        purchase_amount_only:
          default: false
          description: Whether the card acceptor/terminal supports purchase-only approvals.
          type: boolean
        terminal_attendance:
          description: Whether the card acceptor/terminal was attended.
          enum:
            - UNSPECIFIED
            - ATTENDED
            - UNATTENDED
            - NO_TERMINAL
          type: string
        terminal_id:
          description: Card acceptor or terminal identification number.
          type: string
        terminal_location:
          description: Location of the card acceptor/terminal.
          enum:
            - ON_PREMISE
            - OFF_PREMISE_MERCHANT
            - OFF_PREMISE_CARDHOLDER
            - NO_TERMINAL
          type: string
        terminal_type:
          description: Type of card acceptor/terminal.
          enum:
            - AUTO_DISPENSER_WITH_PIN
            - SELF_SERVICE
            - LIMITED_AMOUNT
            - IN_FLIGHT
            - ECOMMERCE
            - TRANSPONDER
          type: string
        zip:
          description: United States ZIP code of the card acceptor or terminal.
          type: string
      type: object
    pre_kyc_controls:
      description: |-
        Contains configuration fields for a number of controls.

        *NOTE:* These controls are in effect only if `kyc_required` is `ALWAYS` or `CONDITIONAL` and the account holder has not yet passed KYC.
      properties:
        balance_max:
          description: Specifies the maximum ledger balance allowed for members of
            the account holder group.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        cash_access_enabled:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder's cards from being used at an ATM.

            *NOTE:* If a card product's `config.poi.atm` field is set to `false`, associated cards are prohibited from being used at an ATM regardless of this control's setting.
          type: boolean
        enable_non_program_loads:
          default: false
          description: |-
            If set to `true`, funds can only be loaded from a program funding source.

            This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments.
          type: boolean
        international_enabled:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder from conducting transactions with a non-domestic country code.

            *NOTE:* If a card product is configured to prohibit non-domestic transactions, its associated cards are prohibited from such transactions regardless of this control's setting.
          type: boolean
        is_reloadable_pre_kyc:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder's account from being reloaded with funds after an initial load.

            This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments.
          type: boolean
      type: object
    preceding_transaction:
      description: |-
        Returned for `authorization.clearing` transaction types following a financial advice.

        Contains information about the preceding transaction.
      properties:
        amount:
          description: Amount of the preceding transaction.
          type: number
        token:
          description: Unique identifier of the preceding transaction.
          type: string
      type: object
    program:
      description: Information about the program on the Marqeta platform.
      properties:
        long_code:
          description: The program long code on the Marqeta platform.
          type: string
        program_id:
          description: The program identifier on the Marqeta platform.
          type: string
        short_code:
          description: The program short code on the Marqeta platform.
          type: string
      required:
        - long_code
        - program_id
        - short_code
      type: object
    program_funding_source_request:
      properties:
        active:
          description: Indicates whether the program funding source is active.
          type: boolean
        name:
          description: Name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            If you do not include a token, the system will generate one automatically.
            As this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    program_funding_source_response:
      properties:
        account:
          description: The account identifier.
          type: string
        active:
          description: |-
            Indicates whether the program funding source is active.
            This field is returned if it exists in the resource.
          type: boolean
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: Unique identifier of the funding source.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - account
        - created_time
        - last_modified_time
        - name
        - token
      type: object
    program_funding_source_update_request:
      properties:
        active:
          description: Indicates whether the program funding source is active.
          type: boolean
        name:
          description: Name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
      type: object
    program_reserve_account_balance:
      properties:
        available_balance:
          description: |-
            Ledger balance minus any authorized transactions that have not yet cleared.
            When using JIT Funding, this balance is usually equal to $0.00.
          readOnly: true
          type: number
        balances:
          additionalProperties:
            $ref: '#/components/schemas/program_reserve_account_balance'
          description: Contains program reserve account balance information, organized
            by currency code.
          type: object
        credit_balance:
          description: Not currently in use.
          readOnly: true
          type: number
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        ledger_balance:
          description: |-
            When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.
            When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.
          readOnly: true
          type: number
        pending_credits:
          description: ACH loads that have been accepted, but for which the funding
            time has not yet elapsed.
          readOnly: true
          type: number
      type: object
    program_reserve_transaction_response:
      properties:
        amount:
          description: The amount of the program reserve account credit or debit.
          type: number
        created_time:
          description: The date and time when the resource was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        is_collateral:
          type: boolean
        last_modified_time:
          description: The date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the transaction.
          type: string
        state:
          description: The state of the transaction.
          enum:
            - PENDING
            - COMPLETE
          type: string
        tags:
          description: Comma-delimited list of tags describing the transaction.
          type: string
        token:
          description: The unique identifier of the transaction response.
          type: string
        transaction_token:
          description: The unique identifier of the transaction.
          type: string
        type:
          description: The type of transaction.
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    program_transfer:
      properties:
        amount:
          description: Amount of program transfer.
          type: number
        business_token:
          description: |-
            The unique identifier of the business.
            Pass either a `business` token or a `user` token, not both.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          description: The three-digit ISO 4217 currency code.
          type: string
        fees:
          description: Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: '#/components/schemas/fee_model'
          type: array
        memo:
          description: Memo or note describing the program transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            The unique identifier of the program transfer.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        type_token:
          description: |-
            The unique identifier of the program transfer type.

            Send a `GET` request to `/programtransfers/types` to retrieve program transfer type tokens.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            The unique identifier of the user.
            Pass either a `user` token or a `business` token, not both.

            Send a `GET` request to `/users` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - type_token
      type: object
    program_transfer_response:
      description: Contains information about a program transfer, which moves funds
        from an account holder's GPA to a program funding source.
      properties:
        amount:
          description: Amount of program transfer.
          type: number
        business_token:
          description: |-
            Unique identifier of the business account holder.
            Returned if `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          description: Date and time when the program transfer object was created,
            in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description: Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: '#/components/schemas/fee_detail'
          type: array
        jit_funding:
          $ref: '#/components/schemas/jit_funding_api'
        memo:
          description: Additional description of the program transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Custom-defined tags you create that are related to the program
            transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: Unique identifier of the program transfer.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the transaction.
          type: string
        type_token:
          description: Unique identifier of the program transfer type.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            Returned if `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - transaction_token
        - type_token
      type: object
    program_transfer_type_request:
      properties:
        memo:
          description: Memo or note describing the program transfer type.
          maxLength: 99
          minLength: 1
          type: string
        program_funding_source_token:
          description: |-
            The unique identifier of the program funding source to which program transfers will be credited.

            Send a `GET` request to `/fundingsources/program` to retrieve program funding source tokens.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer
            type.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            The unique identifier of the program transfer type.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - memo
        - program_funding_source_token
      type: object
    program_transfer_type_response:
      properties:
        created_time:
          description: The date and time when the program transfer type object was
            created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: The date and time when the program transfer type object was
            last modified, in UTC.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the program transfer type.
          type: string
        program_funding_source_token:
          description: Identifies the program funding source to which program transfers
            will be credited.
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer
            type.
          type: string
        token:
          description: The unique identifier of the program transfer type request
            object.
          type: string
      required:
        - program_funding_source_token
        - token
      type: object
    provisioning_controls:
      properties:
        force_yellow_path_for_card_product:
          description: A value of `true` requires identity verification set-up for
            all digital wallets at the card product level.
          type: boolean
        in_app_provisioning:
          $ref: '#/components/schemas/in_app_provisioning'
        manual_entry:
          $ref: '#/components/schemas/manual_entry'
        wallet_provider_card_on_file:
          $ref: '#/components/schemas/wallet_provider_card_on_file'
        web_push_provisioning:
          $ref: '#/components/schemas/web_push_provisioning'
      type: object
    push_to_card_disburse_request:
      properties:
        amount:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 50000
          minimum: 0.01
          type: number
        currency_code:
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        soft_descriptor:
          $ref: '#/components/schemas/PTCSoftDescriptor'
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - payment_instrument_token
      type: object
    push_to_card_disbursement_response:
      properties:
        amount:
          type: number
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        status:
          type: string
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    push_to_card_request:
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        cvv:
          type: string
        exp_date:
          type: string
        name_on_card:
          maxLength: 50
          minLength: 1
          type: string
        pan:
          maxLength: 19
          minLength: 14
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - address_1
        - city
        - country
        - cvv
        - exp_date
        - name_on_card
        - pan
        - postal_code
        - state
        - user_token
      type: object
    push_to_card_response:
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        exp_date:
          type: string
        fast_fund_transfer_eligible:
          default: false
          type: boolean
        gambling_fund_transfer_eligible:
          default: false
          type: boolean
        last_four:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_name:
          readOnly: true
          type: string
        name_on_card:
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    real_time_fee_assessment:
      description: Controls the assessment of real-time fees.
      properties:
        domestic_enabled:
          default: false
          description: Enables fee assessments where the origin of the transaction
            acquirer is inside the US.
          type: boolean
        international_enabled:
          default: false
          description: Enables fee assessments where the origin of the transaction
            acquirer is outside the US.
          type: boolean
        transaction_type:
          description: Indicates the type of transactions on which the fee is assessed.
          type: string
      type: object
    real_time_fee_group:
      description: Contains information about a real-time fee group.
      properties:
        active:
          default: false
          description: Indicates whether the real-time fee group is active.
          type: boolean
        created_time:
          description: Date and time when the real-time fee group was created, in
            UTC.
          format: date-time
          type: string
        fee_tokens:
          description: Specifies the fees in this real-time fee group.
          items:
            type: string
          type: array
          uniqueItems: true
        last_modified_time:
          description: Date and time when the real-time fee group was last modified,
            in UTC.
          format: date-time
          type: string
        name:
          description: Descriptive name for the real-time fee group.
          type: string
        token:
          description: Unique identifier of the real-time fee group.
          type: string
      required:
        - active
        - name
        - token
      type: object
    real_time_fee_group_create_request:
      properties:
        active:
          default: true
          description: Indicates whether the real-time fee group is active.
          type: boolean
        fee_tokens:
          description: |-
            Unique identifiers of the fees in this real-time fee group.
            Send a `GET` request to `/fees` to retrieve fee resource tokens.

            No two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field).
          items:
            type: string
          type: array
          uniqueItems: true
        name:
          description: Descriptive name for the real-time fee group.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the real-time fee group.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    real_time_fee_group_request:
      properties:
        active:
          default: true
          description: Indicates whether the real-time fee group is active.
          type: boolean
        fee_tokens:
          description: |-
            Specifies the fees in this real-time fee group.
            Send a `GET` request to `/fees` to retrieve fee resources tokens.

            No two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field).
          items:
            type: string
          type: array
          uniqueItems: true
        name:
          description: Descriptive name for the real-time fee group.
          maxLength: 50
          minLength: 1
          type: string
      type: object
    real_time_standin_criteria:
      description: Specifies which event types automatically enable Commando Mode.
      properties:
        enabled:
          default: false
          description: |-
            If set to `true`, Commando Mode is automatically enabled by events defined in the `real_time_standin_criteria` object.
            If set to `false`, Auto Commando Mode is not enabled.
          type: boolean
        include_application_errors:
          default: false
          description: If set to `true`, an application error (any non-connection,
            non-timeout error) automatically enables Commando Mode when `real_time_standin_criteria.enabled`
            is also `true`.
          type: boolean
        include_connection_errors:
          default: false
          description: If set to `true`, a non-timeout connection error automatically
            enables Commando Mode when `real_time_standin_criteria.enabled` is also
            `true`.
          type: boolean
        include_response_timeouts:
          default: false
          description: If set to `true`, a gateway response slower than 3000ms automatically
            enables Commando Mode when `real_time_standin_criteria.enabled` is also
            `true`.
          type: boolean
      type: object
    request_for_apple_pay_wpp_JWT:
      properties:
        card_token:
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
      required:
        - card_token
      type: object
    request_for_wpp_parameters:
      properties:
        card_token:
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
      required:
        - card_token
      type: object
    reset_user_password_email_model:
      properties:
        email:
          description: The cardholder's email address.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - email
      type: object
    reset_user_password_model:
      properties:
        new_password:
          description: The cardholder's new `user` account password on the Marqeta
            platform.
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: The unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - new_password
        - user_token
      type: object
    response:
      description: Contains the Marqeta platform's assertion as to whether its address
        verification data matches that provided by the cardholder.
      properties:
        additional_information:
          description: Information about the relevant velocity control for the transaction,
            if applicable.
          type: string
        code:
          description: |-
            Four-digit code corresponding with the outcome of the attempted transaction type.

            `card_security_code_verification.response.code` indicates whether the verification check passed and can have these possible values:

            * 0000 – passed
            * 0001 – did not pass
          type: string
        memo:
          description: Information on the outcome of the attempted transaction type.
          type: string
      required:
        - code
        - memo
      type: object
    result:
      description: Contains information about the KYC verification result.
      properties:
        codes:
          description: An array of KYC verification result code objects.
          items:
            $ref: '#/components/schemas/result_code'
          type: array
        status:
          description: KYC verification status.
          type: string
      type: object
    result_code:
      description: Contains the KYC result code and a descriptive message about that
        codes.
      properties:
        code:
          description: For any `PENDING` or `FAILURE` outcome, see the <<user_kyc_failure_codes,
            User KYC failure codes>> table, the <<outcome_reasons_for_the_business,
            Outcome reasons for the business>> table, or the <<outcome_reasons_for_individuals_associated_with_a_business,
            Outcome reasons for individuals associated with a business>> table.
          type: string
        message:
          description: Result code description.
          type: string
      type: object
    risk_assessment:
      description: Contains the digital wallet provider's risk assessment for provisioning
        the digital wallet token.
      properties:
        score:
          description: Wallet provider's decision as to whether the digital wallet
            token should be provisioned.
          type: string
        version:
          description: Wallet provider's risk assessment version.
          type: string
      type: object
    riskcontrol_tags:
      description: The RiskControl tags that were triggered by the transaction.
      properties:
        rule_name:
          description: Name of the rule, as defined in the Real-Time Decisioning dashboard,
            that was triggered.
          type: string
        tag:
          description: Tag name defined in the rule definition in the Real-Time Decisioning
            dashboard.
          type: string
        values:
          description: Value associated with the tag.
          items:
            type: string
          type: array
      type: object
    samsung_push_tokenize_request_data:
      description: Contains details about a card tokenization push request.
      properties:
        card_type:
          description: Specifies the type of card.
          type: string
        display_name:
          description: |-
            Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).
            `Visa 5678`, for example.
          type: string
        extra_provision_payload:
          description: Encrypted card or cardholder details.
          type: string
        last_digits:
          description: Last four digits of the primary account number of the physical
            or virtual card.
          type: string
        network:
          description: Specifies the card network of the physical or virtual card.
          type: string
        token_service_provider:
          description: Specifies the network that provides the digital wallet token
            service, as determined by the Samsung Wallet library.
          type: string
      type: object
    selective_auth:
      description: Contains information about authorization decisions.
      properties:
        dmd_location_sensitivity:
          default: 0
          description: |-
            Determines what type of merchant information is required for a match (authorization).
            Not relevant if `enable_regex_search_chain = false`.

            * *0* – Requires exact match on card acceptor name and postal code to existing entry in Marqeta Merchant database (most restrictive).
            * *1* – Partial match on card acceptor name (least restrictive).
            * *2* – Partial match on card acceptor name; exact match on card acceptor city.
            * *3* – Partial match on card acceptor name; exact match on card acceptor postal code.
            * *4* – Partial match on card acceptor name; exact match on street address 1 and postal code.
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        enable_regex_search_chain:
          default: false
          description: Set to `true` to perform regular expression checking on the
            description received in the authorization.
          type: boolean
        sa_mode:
          default: 1
          description: |-
            Specifies the selective authorization mode.

            * *0* — Inactive
            * *1* — Active (attempts to authorize a merchant that does not have a recognized MID by matching other pieces of information)
            * *2* — Logging and notification (checks the transaction and logs results, but does not authorize)

            Selective authorization applies to transactions that are limited to specific merchants.
            Matching requirements for authorization are set by the `dmd_location_sensitivity` field.
          enum:
            - 0
            - 1
            - 2
          format: int32
          type: integer
      type: object
    sending_provisioning_data_to_google_pay_backend_request:
      properties:
        card_setting:
          description: |-
            Indicates if the Funding Primary Account Number (FPAN) will be attempted.

            * *1* - FPAN save will be attempted.
            * *0* - FPAN save will not be attempted.
          enum:
            - 0
            - 1
          example: 0
          format: int32
          type: integer
        card_token:
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        client_session_id:
          description: String provided by Google Wallet that identifies the client
            session.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        integrator_id:
          description: Google-assigned string that uniquely identifies both the integrator
            that is initiating the session and the issuer of the card.
          example: '`ACMEISSUER_1`'
          type: string
        public_device_id:
          description: String provided by Google Wallet that identifies the Android
            device that will receive the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        public_wallet_id:
          description: String provided by Google Wallet that identifies the device-scoped
            wallet that receives the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        server_session_id:
          description: String provided by Google Wallet that identifies the backend
            session.
          example: 8c84fab9-889c-4cb7-a330-accac5799ea5
          type: string
        token_setting:
          description: |-
            Indicates if tokenization will be attempted.

            * *1* - Tokenization will be attempted.
            * *0* - Tokenization will not be attempted.
          enum:
            - 0
            - 1
          example: 0
          format: int32
          type: integer
      required:
        - card_setting
        - card_token
        - client_session_id
        - integrator_id
        - public_device_id
        - public_wallet_id
        - server_session_id
        - token_setting
      type: object
    settlement_data:
      description: Contains information from the card network about currency conversion
        at the time of settlement, including the original currency of the transaction,
        the amount of the transaction in the original currency, and the conversion
        rate.
      properties:
        amount:
          description: The settled amount.
          type: number
        conversion_rate:
          description: |-
            Returned when the transaction currency is different from the origination currency.

            Conversion rate between the origination currency and the settlement currency.
          type: number
        currency_code:
          description: The ISO 4217 code of the currency used in the transaction.
          type: string
      type: object
    shipping:
      description: Specifies shipping details for the order.
      properties:
        care_of_line:
          description: |-
            Adds the specified value as a care of (C/O) line to the mailing carrier.

            *NOTE:* This field can be specified on cards, card products, and bulk card orders.
            If you specify this field at multiple levels, the order of precedence is: card, bulk card order, card product.
          type: string
        method:
          description: Specifies the shipping service.
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
        recipient_address:
          $ref: '#/components/schemas/fulfillment_address_request'
        return_address:
          $ref: '#/components/schemas/fulfillment_address_request'
      type: object
    simulation_response_model:
      properties:
        raw_iso8583:
          additionalProperties:
            properties: {
              }
            type: object
          readOnly: true
          type: object
        transaction:
          $ref: '#/components/schemas/transaction_model'
      type: object
    special:
      description: Contains information about merchant onboarding.
      properties:
        merchant_on_boarding:
          default: false
          description: If set to `true`, cards of this card product type can be used
            for merchant onboarding.
          type: boolean
      type: object
    spend_control_association:
      description: Defines the group of users to which the velocity control applies.
      properties:
        card_product_token:
          description: |-
            Unique identifier of the card product.

            Pass either `card_product_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the cardholder.

            Pass either `card_product_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    ssn_response_model:
      description: Contains tax identification information.
      properties:
        nin:
          description: National Identification Number (NIN).
          type: string
        sin:
          description: Social Insurance Number (SIN).
          type: string
        ssn:
          description: United States Social Security Number (SSN).
          type: string
        tin:
          description: Taxpayer Identification Number (TIN).
          type: string
      type: object
    store_response_model:
      properties:
        active:
          default: true
          type: boolean
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        keyed_auth_cvv_enforced:
          default: false
          type: boolean
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        latitude:
          format: float
          type: number
        longitude:
          format: float
          type: number
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          default: false
          type: boolean
        partial_auth_flag:
          default: true
          description: 1 char max
          type: boolean
        phone:
          maxLength: 10
          minLength: 0
          type: string
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the merchant
          maxLength: 36
          minLength: 1
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address1
        - city
        - created_time
        - last_modified_time
        - merchant_token
        - mid
        - name
        - state
      type: object
    strong_customer_authentication_limits:
      description: Contains information about Strong Customer Authentication (SCA)
        behavior for contactless point-of-sale (POS) and low-value payment (LVP) e-commerce
        transactions.
      properties:
        sca_contactless_cumulative_amount_limit:
          description: |-
            Specifies the cumulative limit of transactions the cardholder can perform before receiving an SCA challenge.

            A value of `0` in this field means that the cumulative amount spent in contactless POS transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_contactless_transaction_limit:
          description: |-
            Specifies the maximum allowable amount for a single contactless point-of-sale (POS) transaction, above which the cardholder receives a strong customer authentication (SCA) challenge.

            A value of `0` in this field means that the amount of any single contactless POS transaction performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_contactless_transactions_count_limit:
          description: |-
            Specifies the number of contactless POS transactions the cardholder can perform before receiving an SCA challenge.

            A value of `0` in this field means that the number of contactless POS transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          format: int32
          readOnly: true
          type: integer
        sca_contactless_transactions_currency:
          description: |-
            Specifies the currency type for contactless POS transactions.

            This field is required if either the `sca_contactless_transaction_limit` field or the `sca_contactless_cumulative_amount_limit` field in this object contains a value, even if that value is `0`.
          readOnly: true
          type: string
        sca_lvp_cumulative_amount_limit:
          description: |-
            Specifies the cumulative limit of LVP e-commerce transactions the cardholder can perform before receiving an SCA challenge.

            For example, if you set the value of this field to `100.00`, your cardholder can perform two transactions for `30.00` and two transactions for `20.00` before receiving an SCA challenge.

            If you leave this field blank, the cumulative amount spent in LVP e-commerce transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_lvp_transaction_limit:
          description: |-
            Specifies the maximum allowable amount for a single low-value payment (LVP) e-commerce transaction, above which the cardholder receives a strong customer authentication (SCA) challenge.

            If you leave this field blank, the amount of any single LVP e-commerce transaction performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_lvp_transactions_count_limit:
          description: |-
            Specifies the number of LVP e-commerce transactions the cardholder can perform before receiving an SCA challenge.

            If you leave this field blank, the total number of LVP e-commerce transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          format: int32
          readOnly: true
          type: integer
        sca_lvp_transactions_currency:
          description: |-
            Specifies the currency type for LVP e-commerce transaction limits.

            This field is required if any one of the `sca_lvp_transaction_limit`, `sca_lvp_cumulative_amount_limit`, or `sca_lvp_transactions_count_limit` fields in this object contains a value, even if that value is `0`.
          readOnly: true
          type: string
        sca_tra_exemption_amount_limit:
          description: |-
            Specifies the maximum allowable amount for a single low-value payment (LVP) e-commerce transaction with transaction risk analysis (TRA) exemption sent by the merchant or acquirer.
            If the transaction amount exceeds the specified limit, then the transaction is either approved or it receives a strong customer authentication (SCA) challenge based on `sca_lvp_transaction_limit` and `sca_lvp_transactions_currency`.
          readOnly: true
          type: number
      type: object
    terminal_model:
      properties:
        card_presence:
          type: string
        cardholder_presence:
          type: string
        channel:
          type: string
        partial_approval_capable:
          type: string
        pin_present:
          type: string
        processing_type:
          type: string
        tid:
          type: string
      type: object
    text:
      description: Specifies personalized text that appears on the card.
      properties:
        name_line_1:
          $ref: '#/components/schemas/text_value'
        name_line_2:
          $ref: '#/components/schemas/text_value'
        name_line_3:
          $ref: '#/components/schemas/text_value'
      required:
        - name_line_1
      type: object
    text_value:
      properties:
        value:
          description: Line of personalized text printed on the card.
          type: string
      type: object
    token_request:
      properties:
        account_number:
          description: Payment card account number.
          type: string
        business_token:
          description: |-
            Unique identifier of the `business` account holder.
            This token is required if the `user_token` is not included.
          maxLength: 36
          minLength: 1
          type: string
        cvv_number:
          description: Payment card CVV2 number.
          maxLength: 4
          minLength: 3
          type: string
        exp_date:
          description: Payment card expiration date.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        postal_code:
          description: Postal code of the account holder (user or business).
          type: string
        token:
          description: |-
            Unique identifier of the funding account.
            If you do not include a token, the system will generate one automatically.
            As this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the `user` account holder.
            This token is required if the `business_token` is not included.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          type: string
      required:
        - account_number
        - cvv_number
        - exp_date
      type: object
    token_service_provider:
      description: Contains information held and provided by the token service provider
        (card network).
      properties:
        correlation_id:
          description: Unique value representing a tokenization request (Mastercard
            only).
          type: string
        pan_reference_id:
          description: Unique identifier of the digital wallet token primary account
            number (PAN) within the card network.
          type: string
        token_assurance_level:
          description: _(Mastercard only)_ Represents the confidence level in the
            digital wallet token.
          type: string
        token_eligibility_decision:
          description: Digital wallet's decision as to whether the digital wallet
            token should be provisioned.
          type: string
        token_expiration:
          description: Expiration date of the digital wallet token.
          type: string
        token_pan:
          description: Primary account number (PAN) of the digital wallet token.
          type: string
        token_reference_id:
          description: Unique identifier of the digital wallet token within the card
            network.
          type: string
        token_requestor_id:
          description: |-
            Unique numerical identifier of the token requestor within the card network.
            These ID numbers map to `token_requestor_name` field values as follows:

            *Mastercard*

            * 50110030273 – `APPLE_PAY`
            * 50120834693 – `ANDROID_PAY`
            * 50139059239 – `SAMSUNG_PAY`

            *Visa*

            * 40010030273 – `APPLE_PAY`
            * 40010075001 – `ANDROID_PAY`
            * 40010043095 – `SAMSUNG_PAY`
            * 40010075196 – `MICROSOFT_PAY`
            * 40010075338 – `VISA_CHECKOUT`
            * 40010075449 – `FACEBOOK`
            * 40010075839 – `NETFLIX`
            * 40010077056 – `FITBIT_PAY`
            * 40010069887 – `GARMIN_PAY`
          type: string
        token_requestor_name:
          description: |-
            Name of the token requestor within the card network.

            *NOTE:* The list of example values for this field is maintained by the card networks and is subject to change.
          type: string
        token_score:
          description: Token score assigned by the digital wallet.
          type: string
        token_type:
          description: Type of the digital wallet token.
          type: string
      required:
        - pan_reference_id
      type: object
    token_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the card funding source is active.
          type: boolean
        exp_date:
          description: Expiration date for the payment card.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
      required:
        - exp_date
      type: object
    transaction_card_acceptor:
      description: Contains information about the merchant.
      properties:
        address:
          description: |-
            Card acceptor's address.
            May be returned if the request uses Transaction Model V1 of the Marqeta Core API.
            Not returned for V2 requests.
          type: string
        city:
          description: Card acceptor's city.
          type: string
        country_code:
          description: |-
            Card acceptor's country code.
            May be returned if the request uses Transaction Model V2 of the Marqeta Core API.
            Not returned for V1 requests.
          type: string
        country_of_origin:
          description: |-
            The merchant's country of origin.

            A merchant's country of origin can be different from the country in which the merchant is located.
            For example, embassies are physically located in countries that are not their country of origin: a Mexican embassy might be physically located in Singapore, but the country of origin is Mexico.

            This field is included when the cardholder conducts a transaction with a government-controlled merchant using a Marqeta-issued card.
          type: string
        independent_sales_organization_id:
          type: string
        mcc:
          description: Merchant category code (MCC).
          type: string
        mcc_groups:
          description: An array of `mcc_groups`.
          items:
            type: string
          type: array
        merchant_tax_id:
          type: string
        mid:
          description: The merchant identifier.
          type: string
        name:
          description: Card acceptor's name.
          type: string
        network_assigned_id:
          type: string
        network_mid:
          description: The merchant identifier on the card network.
          type: string
        payment_facilitator_id:
          type: string
        payment_facilitator_name:
          description: |-
            The name of the payment facilitator, including the sub-merchant identifier, of an original credit transaction.
            This field is returned when a payment facilitator participates in the transaction.
          type: string
        poi:
          $ref: '#/components/schemas/terminal_model'
        postal_code:
          description: Card acceptor's postal code.
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.

            *Note*: Non-US merchants may return more than 2 char for this field.
          type: string
        sub_merchant_id:
          type: string
        transfer_service_provider_name:
          description: |-
            The name of the transfer service provider of a money transfer original credit transaction.
            This field is included when a transfer service provider participates in the transaction.
          type: string
      type: object
    transaction_controls:
      description: Controls transactional characteristics of card usage.
      properties:
        accepted_countries_token:
          description: |-
            Set to `accept_us_only` to allow transactions only within the US.

            Set to `decline_ofac_countries` to allow international transactions except with countries that the Financial Action Task Force (FATF) and Office of Foreign Assets Control (OFAC) have identified as high risk.

            Users with the Admin role can create and update additional lists of accepted countries for transactions at the `/acceptedcountries` endpoint.
            See <</core-api/accepted-countries, Accepted Countries>>.
          type: string
        address_verification:
          $ref: '#/components/schemas/avs_controls'
        allow_chip_fallback:
          default: false
          description: Indicates whether to allow transactions where a Europay Mastercard
            and Visa (EMV) chip-enabled card was processed using the magstripe as
            fallback.
          type: boolean
        allow_first_pin_set_via_financial_transaction:
          default: false
          description: |-
            *WARNING:* This field is deprecated and will be unsupported in a future release.

            Allows cardholders to define a personal identification number (PIN) as they complete their first PIN-debit transaction.
          type: boolean
        allow_gpa_auth:
          default: false
          description: |-
            If set to `true`, transactions can be authorized using GPA funds.

            *NOTE:* For most programs, this field should be set to `true`.
          type: boolean
        allow_mcc_group_authorization_controls:
          default: false
          description: |-
            The <</core-api/mcc-groups, MCC group>> `authorization_controls` object allows you to automatically increase authorization holds and to specify authorization expiration times based on merchant type.
            By default, these settings apply to all cards in your program.
            You can, however, exempt cards associated with a particular card product by setting this field to `false`.

            *NOTE:* Partial authorizations are disallowed if this field is set to `true`.
          type: boolean
        allow_network_load:
          default: false
          description: |-
            Indicates whether card network loads are allowed.
            The associated card's state must be `ACTIVE` or the load will be rejected.
          type: boolean
        allow_network_load_card_activation:
          default: false
          description: |-
            Indicates whether card network loads are allowed.
            Sets the associated card's state to `ACTIVE` if its current state is `INACTIVE`.
          type: boolean
        allow_quasi_cash:
          default: false
          description: |-
            Indicates whether quasi-cash transactions are allowed.
            In a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.
          type: boolean
        always_require_icc:
          default: false
          description: If set to `true`, cards of this card product type require an
            Integrated Circuit Card.
          type: boolean
        always_require_pin:
          default: false
          description: If set to `true`, cards of this card product type require a
            personal identification number (PIN).
          type: boolean
        enable_credit_service:
          default: false
          type: boolean
        enable_partial_auth_approval:
          default: false
          description: |-
            Set to `true` to enable partial authorizations.

            When this setting is `false` and the requested authorization amount exceeds available funds, the transaction is declined.
            When this setting is `true` and the requested authorization amount exceeds available funds, the transaction is authorized for the amount of available funds.
          type: boolean
        ignore_card_suspended_state:
          default: false
          description: |-
            Allows transactions to be approved even if the card's `state = SUSPENDED`.
            When this field is set to `true`, the card behaves as if its `state = ACTIVE`.
          type: boolean
        notification_language:
          description: |-
            Specifies the language for 3D Secure and digital wallet token notifications sent to cardholders under this card program.
            By default, notifications are sent in English.
            You can also send notifications to your cardholders in Czech, French, Italian, German, Polish, Spanish, and Swedish.

            To specify the language for OTP notifications at the user level, see <</core-api/users, Users>>.
            Languages set at the user level take precedence over the language set at the card product level.
          type: string
        quasi_cash_exempt_merchant_group_token:
          description: |-
            The token of the merchant group that you want to exempt from quasi-cash transaction authorization control, allowing your cardholders to conduct quasi-cash transactions.
            In a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.

            You can specify a merchant group token in addition to whatever merchant identifiers you listed in the `quasi_cash_exempt_mids` field, if any.
            For more information, see <</core-api/merchant-groups, Merchant Groups>>.
          maxLength: 36
          minLength: 1
          type: string
        quasi_cash_exempt_mids:
          description: |-
            Comma-separated list of merchant identifiers that you want to exempt from quasi-cash transaction authorization control, allowing your cardholders to conduct quasi-cash transactions.
            In a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.
          type: string
        require_card_not_present_card_security_code:
          default: false
          description: A value of `true` indicates that if `card_presence_required`
            is `true`, the card's security code is required.
          type: boolean
        strong_customer_authentication_limits:
          $ref: '#/components/schemas/strong_customer_authentication_limits'
      type: object
    transaction_metadata:
      description: |-
        Contains merchant-provided metadata related to the transaction, including details about lodging- and transit-related purchases.

        May be returned if the request uses Transaction Model V2 of the Marqeta Core API.
        Not returned for V1 requests.
      properties:
        airline:
          $ref: '#/components/schemas/airline'
        authorization_life_cycle:
          description: Number of days the pre-authorization is in effect.
          format: int32
          type: integer
        cross_border_transaction:
          default: false
          description: Whether the transaction is cross-border, i.e., when the merchant
            and the cardholder are located in two different countries.
          type: boolean
        is_deferred_authorization:
          type: boolean
        is_lodging_auto_rental:
          default: false
          description: Whether the transaction is a lodging or vehicle rental.
          type: boolean
        lodging_auto_rental_start_date:
          description: Date and time when the lodging check-in or vehicle rental began.
          format: date-time
          type: string
        moto_indicator:
          description: Indicates the type of mail or telephone order transaction.
          enum:
            - UNKNOWN
            - MANUAL
            - RECURRING
            - INSTALLMENT
            - OTHERS
          type: string
        one_leg_out:
          type: boolean
        payment_channel:
          description: Channel from which the transaction was originated.
          enum:
            - OTHER
            - ATM
            - ECOMMERCE
            - MAIL
            - PHONE
            - MOTO
          type: string
        transaction_category:
          description: Industry for which the transaction was originated.
          enum:
            - RETAIL_SALE
            - BILL_PAY
            - HOTEL
            - HEALTH_CARE
            - RESTAURANT
            - AUTO_RENTAL
            - AIRLINE
            - PAYMENT
            - HOSPITALIZATION_COLLEGE
            - PHONE_MAIL_ECOMMERCE
            - ATM
            - TRANSIT
          type: string
        transit:
          $ref: '#/components/schemas/transit'
      type: object
    transaction_model:
      properties:
        account_funding:
          $ref: '#/components/schemas/account_funding'
        acquirer:
          $ref: '#/components/schemas/acquirer'
        acquirer_fee_amount:
          description: |-
            Indicates the amount of the acquirer fee.
            Account holders are sometimes charged an acquirer fee for card use at ATMs, fuel dispensers, and so on.
          type: number
        acquirer_reference_id:
          description: |-
            Acquirer-assigned unique identifier of the transaction.
            Useful for settlement and reconciliation.
          type: string
        acting_user_token:
          description: |-
            Unique identifier of the user who conducted the transaction.
            This might be a child user configured to share its parent's account balance.
          maxLength: 36
          minLength: 0
          type: string
        address_verification:
          $ref: '#/components/schemas/address_verification_model'
        advice_reason_code:
          type: string
        advice_reason_details:
          type: string
        amount:
          description: Amount of the transaction.
          type: number
        amount_to_be_released:
          description: |-
            Amount of original authorization to be released.
            This field appears in final clearing transactions where the clearing amount is lower than the authorization amount.
          type: number
        approval_code:
          description: Unique identifier assigned to an authorization, printed on
            the receipt at point of sale.
          type: string
        atc_information:
          $ref: '#/components/schemas/atc_information'
        auto_reload:
          $ref: '#/components/schemas/auto_reload_model'
        bank_transfer_token:
          type: string
        batch_number:
          description: The batch number of the transaction.
          type: string
        business:
          $ref: '#/components/schemas/business_metadata'
        business_token:
          description: Unique identifier of the business that owns the account that
            funded the transaction.
          maxLength: 36
          minLength: 0
          type: string
        card:
          $ref: '#/components/schemas/card_response'
        card_acceptor:
          $ref: '#/components/schemas/transaction_card_acceptor'
        card_holder_model:
          $ref: '#/components/schemas/user_card_holder_response'
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
        card_security_code_verification:
          $ref: '#/components/schemas/card_security_code_verification'
        card_token:
          description: |-
            Unique identifier of the card.
            Useful when a single account holder has multiple cards.
          maxLength: 36
          minLength: 0
          type: string
        cardholder_authentication_data:
          $ref: '#/components/schemas/cardholder_authentication_data'
        cash_back_amount:
          description: |-
            Amount of cash back requested by the cardholder during the transaction.
            Included in the total transaction amount.
          type: number
        chargeback:
          $ref: '#/components/schemas/chargeback_response'
        clearing_record_sequence_number:
          description: A sequence number that identifies a specific clearing message
            among multiple clearing messages for an authorization.
          type: string
        created_time:
          description: |-
            Date and time when the Marqeta platform created the transaction entry, in UTC format.
            For example, when Marqeta processed the clearing record for a refund.
          format: date-time
          type: string
        currency_code:
          description: Currency type of the transaction.
          type: string
        currency_conversion:
          $ref: '#/components/schemas/currency_conversion'
        digital_wallet_token:
          $ref: '#/components/schemas/digital_wallet_token'
        direct_deposit:
          $ref: '#/components/schemas/DepositDepositResponse'
        dispute:
          $ref: '#/components/schemas/DisputeModel'
        duration:
          description: Duration of the transaction on Marqeta's servers, in milliseconds.
          format: int32
          type: integer
        enhanced_data_token:
          description: The enhanced commercial card data token for the transaction.
          type: string
        fee:
          $ref: '#/components/schemas/fee'
        fee_transfer:
          $ref: '#/components/schemas/fee_transfer_response'
        fees:
          description: |-
            List of fees associated with the transaction.

            This array is returned if it exists in the resource.
          items:
            $ref: '#/components/schemas/network_fee_model'
          type: array
        fraud:
          $ref: '#/components/schemas/fraud_view'
        from_account:
          description: Specifies the account type for ATM transactions.
          type: string
        gpa:
          $ref: '#/components/schemas/cardholder_balance'
        gpa_order:
          $ref: '#/components/schemas/gpa_response'
        gpa_order_unload:
          $ref: '#/components/schemas/gpa_returns'
        identifier:
          description: Sequential identifier of the transaction.
          type: string
        incremental_authorization_transaction_tokens:
          description: An array of incremental authorization transaction tokens.
          items:
            type: string
          type: array
        interchange_rate_descriptor:
          type: string
        is_preauthorization:
          default: false
          description: Indicates if the transaction is a pre-authorization.
          type: boolean
        isaIndicator:
          description: The international service assessment indicator indicates if
            an ISA fee is applicable to the transaction.
          enum:
            - MULTI_CURRENCY
            - SINGLE_CURRENCY
            - REBATE_CANCELLED
            - MULTI_CURRENCY_NON_US_COUNTRIES
            - SINGLE_CURRENCY_PAID_BY_ISSUER
            - NO_CHARGE_ASSESSED
          type: string
        issuer_interchange_amount:
          description: The amount of interchange charged by the card issuer.
          type: number
        issuer_payment_node:
          description: Unique identifier of the Marqeta platform server that received
            the transaction from the card network.
          type: string
        issuer_received_time:
          description: Date and time when the Marqeta platform received the transaction
            from the card network, in UTC.
          type: string
        merchant:
          $ref: '#/components/schemas/merchant_response_model'
        msa_order_unload:
          $ref: '#/components/schemas/msa_returns'
        multi_clearing_sequence_count:
          description: |-
            If an authorization has multiple clearing transactions, this field displays their total number.
            For example, if an authorization has four clearing transactions, the sequence count is `04`.
          type: string
        multi_clearing_sequence_number:
          description: |-
            If an authorization has multiple clearing transactions, this field displays the sequence number for the clearing transaction.
            For example, if this is the second clearing transaction of four, the sequence number is `02`.
          type: string
        network:
          description: Indicates which card network was used to complete the transactions.
          type: string
        network_metadata:
          $ref: '#/components/schemas/network_metadata'
        network_reference_id:
          description: |-
            Network-assigned unique identifier of the transaction.
            Useful for settlement and reconciliation.
          type: string
        original_credit:
          $ref: '#/components/schemas/original_credit'
        peer_transfer:
          $ref: '#/components/schemas/peer_transfer_response'
        polarity:
          description: Indicates whether the transaction is credit or debit.
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
        pos:
          $ref: '#/components/schemas/pos'
        preceding_related_transaction_token:
          description: |-
            Returned for final transaction types.

            Unique identifier of the preceding related transaction.
            Useful for identifying the transaction that preceded the current one.

            For example, `authorization`, a temporary transaction type, precedes and is completed by `authorization.clearing`, a final transaction type.
            In this case, the `authorization` token is returned with this field.
            For which transaction types are temporary or final, see <</core-api/event-types#_transaction_events, Transaction events in Event Types>>.
          type: string
        preceding_transaction:
          $ref: '#/components/schemas/preceding_transaction'
        program:
          $ref: '#/components/schemas/program'
        program_transfer:
          $ref: '#/components/schemas/program_transfer_response'
        real_time_fee_group:
          $ref: '#/components/schemas/real_time_fee_group'
        real_time_fee_type:
          type: string
        request_amount:
          description: Merchant-requested amount, including any fees.
          type: number
        response:
          $ref: '#/components/schemas/response'
        settlement_date:
          description: |-
            Date and time when funds were moved for a transaction, in UTC.
            For example, in the case of a refund, when funds were credited to the cardholder.
          format: date-time
          type: string
        standin_approved_by:
          description: |-
            Indicates which party approved a transaction: the card network using stand-in processing, or Marqeta using Commando Mode.
            Returned only when a transaction is approved.
          type: string
        standin_by:
          description: 'Indicates which party approved a transaction: the card network
            using stand-in processing, or Marqeta using Commando Mode.'
          type: string
        standin_reason:
          description: Indicates why the card network handled a transaction requiring
            stand-in processing.
          type: string
        state:
          description: |-
            Current state of the transaction.
            For more information about the `state` field, see <</developer-guides/about-transactions#_the_transaction_lifecycle, The transaction lifecycle>>.
          enum:
            - PENDING
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
          type: string
        store:
          $ref: '#/components/schemas/store_response_model'
        subnetwork:
          description: |-
            Indicates which subnetwork was used to complete the transaction.
            Possible values include the following:

            * *VISANET* – Used for VisaNet signature-based transactions.
            * *VISANETDEBIT* – Used for VisaNet Debit PIN-based transaction.
            * *VISAINTERLINK* – Used for Visa Interlink PIN-based transactions.
            * *VISAPLUS* – Used for ATM withdrawals on Visa.
            * *MAESTRO* – Used for PIN-based transactions on Mastercard.
            * *CIRRUS* – Used for ATM withdrawals on Mastercard.
            * *MASTERCARDDEBIT* – Used for signature-based transactions on Mastercard.
            * *GATEWAY_JIT* – Used for Gateway JIT Funding transactions.
            * *MANAGED_JIT* – Used for Managed JIT Funding transactions or for transactions that occur while Commando Mode is enabled.
          type: string
        token:
          description: |-
            Unique identifier of the transaction, formatted as a UUID.

            *NOTE:* For subsequent related transactions, this token value appears as the `preceding_related_transaction_token`.
          maxLength: 36
          minLength: 1
          readOnly: true
          type: string
        transaction_attributes:
          additionalProperties:
            type: string
          description: Additional transaction attributes.
          type: object
        transaction_metadata:
          $ref: '#/components/schemas/transaction_metadata'
        type:
          description: |-
            Transaction event type.
            For more information about the `type` field, see <</core-api/event-types#_transaction_events, Transaction events>>.
          enum:
            - gpa.credit
            - gpa.credit.pending
            - gpa.credit.pending.reversal
            - gpa.credit.reversal
            - gpa.credit.networkload
            - gpa.credit.networkload.reversal
            - gpa.debit.networkload
            - gpa.debit
            - gpa.debit.pending
            - gpa.debit.pending.reversal
            - gpa.grant
            - gpa.credit.issueroperator
            - gpa.debit.issueroperator
            - gpa.credit.chargeback
            - gpa.credit.chargeback.reversal
            - gpa.credit.billpayment
            - gpa.credit.authorization.billpayment
            - gpa.credit.authorization.billpayment.reversal
            - msa.credit.pending
            - msa.credit.pending.reversal
            - msa.credit.reversal
            - msa.credit
            - msa.debit.pending
            - msa.debit.pending.reversal
            - msa.debit
            - msa.credit.chargeback
            - msa.credit.chargeback.reversal
            - authorization
            - authorization.advice
            - authorization.reversal
            - authorization.clearing
            - authorization.reversal.issuerexpiration
            - dispute.credit
            - dispute.debit
            - authorization.clearing.chargeback
            - authorization.clearing.chargeback.reversal
            - refund
            - pindebit.atm.withdrawal
            - pindebit.balanceinquiry
            - pindebit.cashback
            - pindebit
            - programreserve.credit
            - programreserve.debit
            - fee.charge.pending
            - fee.charge
            - fee.charge.pending.refund
            - funds.expire
            - reward.earn
            - transfer.peer
            - transfer.fee
            - account.funding.authorization
            - account.funding.authorization.reversal
            - account.funding.authorization.clearing
            - account.funding.auth_plus_capture
            - account.funding.auth_plus_capture.reversal
            - account.credit
            - account.debit
            - balanceinquiry
            - authorization.atm.withdrawal
            - authorization.clearing.atm.withdrawal
            - authorization.cashback
            - authorization.clearing.cashback
            - transfer.program
            - authorization.quasi.cash
            - authorization.clearing.quasi.cash
            - authorization.incremental
            - gpa.credit.authorization
            - gpa.credit.authorization.reversal
            - gpa.debit.authorization
            - gpa.debit.reversal
            - original.credit.authorization
            - original.credit.authorization.reversal
            - original.credit.authorization.clearing
            - original.credit.auth_plus_capture
            - original.credit.auth_plus_capture.reversal
            - refund.authorization
            - refund.authorization.advice
            - refund.authorization.clearing
            - refund.authorization.reversal
            - token.activation-request
            - token.advice
            - pindebit.authorization
            - pindebit.authorization.clearing
            - pindebit.authorization.reversal
            - pindebit.authorization.reversal.issuerexpiration
            - authorization.standin
            - authorization.clearing.chargeback.completed
            - authorization.clearing.chargeback.provisional.credit
            - authorization.clearing.chargeback.provisional.debit
            - authorization.clearing.chargeback.writeoff
            - directdeposit.credit
            - directdeposit.credit.pending
            - directdeposit.credit.reject
            - directdeposit.credit.pending.reversal
            - directdeposit.credit.reversal
            - directdeposit.debit
            - directdeposit.debit.pending
            - directdeposit.debit.reject
            - directdeposit.debit.reversal
            - directdeposit.debit.pending.reversal
            - fee.charge.reversal
            - pindebit.chargeback
            - pindebit.chargeback.completed
            - pindebit.chargeback.provisional.credit
            - pindebit.chargeback.provisional.debit
            - pindebit.chargeback.reversal
            - pindebit.chargeback.writeoff
            - pindebit.credit.adjustment
            - pindebit.quasicash
            - pindebit.quasi.cash
            - pindebit.refund
            - pindebit.refund.reversal
            - pindebit.reversal
            - pindebit.transfer
            - pushtocard.debit
            - pushtocard.reversal
            - credit.adjustment
            - debit.adjustment
            - unknown
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/cardholder_metadata'
        user_token:
          description: Unique identifier of the user who owns the account that funded
            the transaction; subsequent related transactions retain the same `user_token`,
            even if the card used to complete the transaction moves to another user.
          maxLength: 36
          minLength: 0
          type: string
        user_transaction_time:
          description: |-
            Date and time when the user initiated the transaction, in UTC.
            For example, when a merchant performed the original authorization for a refund.
          format: date-time
          type: string
      required:
        - acting_user_token
        - amount
        - state
        - token
        - type
      type: object
    transaction_options:
      properties:
        additional_data:
          type: string
        card_expiration_date_yymm:
          type: string
        database_transaction_timeout:
          format: int32
          type: integer
        encryption_key_id:
          type: string
        is_async:
          default: false
          type: boolean
        pre_auth_time_limit:
          type: string
        send_expiration_date:
          default: false
          type: boolean
        send_track_data:
          default: false
          type: boolean
        transaction_timeout_threshold_seconds:
          format: int64
          type: integer
        transaction_token:
          type: string
      type: object
    transit:
      description: Contains merchant-provided, transit-related metadata related to
        the transaction.
      properties:
        transaction_type:
          description: Type of transit transaction.
          enum:
            - PRE_FUNDED
            - REAL_TIME_AUTHORIZED
            - POST_AUTHORIZED_AGGREGATED
            - AUTHORIZED_AGGREGATED_SPLIT_CLEARING
            - OTHER
            - DEBIT_RECOVERY
          type: string
        transportation_mode:
          description: Mode of transportation.
          enum:
            - BUS
            - TRAIN
            - WATER_BORNE_VEHICLE
            - TOLL
            - PARKING
            - TAXI
            - PARA_TRANSIT
            - SELF_DRIVE_VEHICLE
            - COACH
            - LOCOMOTIVE
            - POWERED_MOTOR_VEHICLE
            - TRAILER
            - INTER_CITY
            - CABLE_CAR
          type: string
      type: object
    unload_request_model:
      properties:
        amount:
          description: Amount of funds to return to the funding source.
          type: number
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source to use for this GPA unload order.

            Send a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user.
          maxLength: 36
          minLength: 1
          type: string
        memo:
          description: Additional descriptive text about the GPA unload.
          maxLength: 99
          minLength: 0
          type: string
        original_order_token:
          description: Unique identifier of the original GPA order.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the GPA unload order.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the GPA unload order.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - original_order_token
      type: object
    user_association:
      description: Associates each card with a user.
      properties:
        single_inventory_user:
          default: false
          description: |-
            Set to `true` to associate all cards with the same user.
            Set to `false` to associate each card with a different user.
            When set to `false`, users are generated automatically and associated with the cards.
          type: boolean
        single_inventory_user_token:
          default: 'false'
          description: |-
            If `single_inventory_user=true`, use this field to specify the token of an existing user.
            All cards in the order will be associated with this user.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    user_card_holder_response:
      description: Contains information about a cardholder.
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the cardholder.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: false
          description: Specifies if the cardholder is in the `ACTIVE` state on the
            Marqeta platform.
          type: boolean
        address1:
          description: Cardholder's address.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information for the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        authentication:
          $ref: '#/components/schemas/Authentication'
        birth_date:
          description: Cardholder's date of birth.
          type: string
        business_token:
          description: Unique identifier of the business resource.
          type: string
        city:
          description: City where the cardholder resides.
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: Country where the cardholder resides.
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        email:
          description: Valid email address of the cardholder.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: Cardholder's first name.
          maxLength: 40
          minLength: 0
          type: string
        gender:
          description: Cardholder's gender.
          enum:
            - F
            - M
          maxLength: 1
          minLength: 0
          type: string
        honorific:
          description: 'Cardholder''s title or prefix: Dr., Miss, Mr., Ms., and so
            on.'
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: Expiration date of the cardholder's identification card.
          readOnly: true
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: One or more objects containing identifications associated with
            the cardholder.
          items:
            $ref: '#/components/schemas/IdentificationResponseModel'
          type: array
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        last_name:
          description: Cardholder's last name.
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: Unique identifier of the parent user or business resource.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          readOnly: true
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's user account password on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: Cardholder's telephone number.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the cardholder's address.
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: Cardholder's Social Security Number (SSN).
          type: string
        state:
          description: State in which the cardholder resides.
          maxLength: 2
          minLength: 0
          type: string
        status:
          description: Specifies the status of the cardholder on the Marqeta platform.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: Unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: Indicates whether the child shares balances with the parent
            (`true`), or the child's balances are independent of the parent (`false`).
          type: boolean
        zip:
          description: United States ZIP code of the cardholder's address.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    user_card_holder_search_model:
      properties:
        dda:
          description: |-
            Performs a match on the specified deposit account number.
            Send a `GET` request to `/directdeposits/accounts/{user_token}` to retrieve the deposit account number for a specific cardholder.
          type: string
        email:
          description: Performs a non-case-sensitive, exact match on the cardholder's
            `email` field.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Performs a non-case-sensitive match on the cardholder's `first_name` field.
            Matching is partial on the beginning of the name.
            For example, a match on "Alex" returns both "Alex" and "Alexander".
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: |-
            Performs a non-case-sensitive match on the cardholder's `last_name` field.
            Matching is partial on the beginning of the name.
            For example, a match on "Smith" returns both "Smith" and "Smithfield".
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Performs a match on the cardholder's `phone` field.
          maxLength: 255
          minLength: 0
          type: string
        ssn:
          description: Performs a match on the cardholder's identification number.
          type: string
      type: object
    velocity_control_balance_response:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        available:
          $ref: '#/components/schemas/available'
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description: If set to `true`, original credit transactions (OCT) are subject
            to control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          description: Description of how the velocity control restricts spending,
            for example, "Max spend of $500 per day" or "Max spend of $5000 per month
            for non-exempt employees".
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the velocity control.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: Maximum number of times a card can be used within the time
            period defined by the `velocity_window` field.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY* – one day; days begin at 00:00:00 UTC.
            * *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.
            * *LIFETIME* – forever; time period never expires.
            * *TRANSACTION* – a single transaction.
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - amount_limit
        - available
        - currency_code
        - velocity_window
      type: object
    velocity_control_request:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description: |-
            If set to `true`, original credit transactions (OCT) are subject to control.
            Your request can contain either a `money_in_transaction` object or the `include_credits` field, not both.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          description: |-
            Description of how the velocity control restricts spending, for example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".

            Ensure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.

            *NOTE:* This field is very important.
            If your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.
            Adding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the velocity control.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: |-
            Maximum number of times a card can be used within the time period defined by the `velocity_window` field.

            If `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request.

            Set to `-1` to indicate that the card can be used an unlimited number of times.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY* – one day; days begin at 00:00:00 UTC.
            * *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.
            * *LIFETIME* – forever; time period never expires.
            * *TRANSACTION* – a single transaction.

            *NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.
            The amount and usage data already collected within the first period is counted toward the limits.

            *NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:

            * `merchant_scope.mcc`
            * `merchant_scope.mid`
            * `merchant_scope.mcc_group`
            * `association.user_token`
            * `association.card_product_token`
            * `velocity_window`
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
    velocity_control_response:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description: If set to `true`, original credit transactions (OCT) are subject
            to control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          description: |-
            Description of how the velocity control restricts spending.
            For example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the velocity control.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: Maximum number of times a card can be used within the time
            period defined by the `velocity_window` field.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY* – one day; days begin at 00:00:00 UTC.
            * *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.
            * *LIFETIME* – forever; time period never expires.
            * *TRANSACTION* – a single transaction.
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
    velocity_control_update_request:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description: Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description: If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: '#/components/schemas/spend_control_association'
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description: If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description: |-
            If set to `true`, original credit transactions are subject to control.
            Your request can contain either a `money_in_transaction` object or the `include_credits` field, not both.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: '#/components/schemas/merchant_scope'
        money_in_transaction:
          $ref: '#/components/schemas/money_in_transaction'
        name:
          description: |-
            Description of how the velocity control restricts spending.
            For example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".

            Ensure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.

            *NOTE:* This field is very important.
            If your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.
            Adding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the velocity control resource.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: |-
            Maximum number of times a card can be used within the time period defined by the `velocity_window` field.

            If `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY* – one day; days begin at 00:00:00 UTC.
            * *WEEK* – one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH* – one month; months begin on the first day of month at 00:00:00 UTC.
            * *QUARTER* - three months; quarters begin on January 1, April 1, July 1, and October 1 at 00:00:00 UTC.
            * *YEAR* - twelve months; years begin on January 1 at 00:00:00 UTC.
            * *LIFETIME* – forever; time period never expires.
            * *TRANSACTION* – a single transaction.

            *NOTE:* If set to `DAY`, `WEEK`, `MONTH`, `QUARTER`, or `YEAR,` the velocity control takes effect retroactively from the beginning of the specified period.
            The amount and usage data already collected within the first period is counted toward the limits.

            *NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:

            * `merchant_scope.mcc`
            * `merchant_scope.mid`
            * `merchant_scope.mcc_group`
            * `association.user_token`
            * `association.card_product_token`
            * `velocity_window`
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - YEAR
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - token
      type: object
    wallet_provider_card_on_file:
      properties:
        address_verification:
          $ref: '#/components/schemas/digital_wallet_token_address_verification'
        enabled:
          default: false
          description: Specifies if the card on file is enabled.
          type: boolean
      type: object
    wallet_provider_profile:
      description: Contains information held and provided by the digital wallet provider.
      properties:
        account:
          $ref: '#/components/schemas/account'
        device_score:
          description: Score from the device.
          type: string
        pan_source:
          description: Source from which the digital wallet provider obtained the
            card primary account number (PAN).
          type: string
        reason_code:
          description: |-
            Reason for the wallet provider's provisioning decision.

            * *01* – Cardholder's wallet account is too new relative to launch.
            * *02* – Cardholder's wallet account is too new relative to provisioning request.
            * *03* – Cardholder's wallet account/card pair is newer than date threshold.
            * *04* – Changes made to account data within the account threshold.
            * *05* – Suspicious transactions linked to this account.
            * *06* – Account has not had activity in the last year.
            * *07* – Suspended cards in the secure element.
            * *08* – Device was put in lost mode in the last seven days for longer than the duration threshold.
            * *09* – The number of provisioning attempts on this device in 24 hours exceeds threshold.
            * *0A* – There have been more than the threshold number of different cards attempted at provisioning to this phone in 24 hours.
            * *0B* – The card provisioning attempt contains a distinct name in excess of the threshold.
            * *0C* – The device score is less than 3.
            * *0D* – The account score is less than 4.
            * *0E* – Device provisioning location outside of the cardholder's wallet account home country.
            * *0G* – Suspect fraud.
          type: string
        recommendation_reasons:
          description: Array of recommendation reasons from the digital wallet provider.
          items:
            type: string
          type: array
        risk_assessment:
          $ref: '#/components/schemas/risk_assessment'
      type: object
    web_push_provisioning:
      properties:
        wpp_apple_card_template_id:
          description: Identifier that Apple uses to identify the program to process
            the request for.
          type: string
        wpp_apple_partner_id:
          description: Identifier that Apple uses to identify the program to provide
            the correct card art for.
          type: string
        wpp_google_piaid:
          description: Identifier that Google uses to identify the program to process
            the request for and to provide the correct card art for.
          type: string
      type: object
    web_push_provisioning_apple_pay_JWS_header:
      description: Contains header data for the JWS object.
      properties:
        kid:
          description: Unique identifier of the JSON Web Signature (JWS) public key
            of the key pair used to generate the signature.
          example: 8dc7aed4-29e3-41e4-9cdb-673a05e6615c
          type: string
      required:
        - kid
      type: object
    web_push_provisioning_apple_pay_JWS_model:
      description: Object containing JSON Web Signature (JWS) data.
      properties:
        header:
          $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWS_header'
        payload:
          description: JSON Web Signature (JWS) message payload.
          type: string
        protected:
          description: Contains header parameters that are integrity-protected by
            the JSON Web Signature (JWS).
          type: string
        signature:
          description: The JSON Web Signature (JWS).
          example: 5lD1znG2DD2DytqGUcSDOwJQMYbCGDCCCiXxyhpC1zOWTH1Y6jUJFAupl0jEud9nUvw3mmpuSt6zcAE1r4yb0w
          type: string
      required:
        - header
        - payload
        - protected
        - signature
      type: object
    web_push_provisioning_apple_pay_JWT_response:
      properties:
        jws:
          $ref: '#/components/schemas/web_push_provisioning_apple_pay_JWS_model'
        state:
          description: |-
            Unique state associated with the digital wallet token.
            The Marqeta platform returns a universally unique identifier (UUID) in this field.
          example: e2675f06-7e4d-11ec-90d6-0242ac120003
          type: string
      required:
        - jws
        - state
      type: object
    webhook:
      properties:
        endpoint:
          description: Valid URL
          maxLength: 512
          minLength: 1
          type: string
        password:
          description: Authentication password
          type: string
        secret:
          description: Authentication secret
          type: string
        username:
          description: Authentication username
          type: string
      required:
        - endpoint
        - password
        - username
      type: object
    webhook_base_model:
      properties:
        active:
          default: true
          description: Indicates whether the webhook is active.
          type: boolean
        config:
          $ref: '#/components/schemas/webhook_config_model'
        events:
          description: |-
            Specifies the types of events for which notifications are sent.

            The wildcard character `\*` indicates that you receive all webhook notifications, or all notifications of a specified category.
            For example, `\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.

            *NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.
            For example, you cannot subscribe to `cardtransition.fulfillment.\*` events, but you can subscribe to `cardtransition.*`.
          items:
            type: string
          type: array
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    webhook_config_model:
      description: Contains the configuration information for the webhook.
      properties:
        basic_auth_password:
          description: Password for accessing your webhook endpoint.
          maxLength: 50
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for accessing your webhook endpoint.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
          type: object
        secret:
          description: |-
            Randomly chosen string used for implementing HMAC-SHA1.

            HMAC-SHA1 provides an added layer of security by authenticating the message and validating message integrity.
            Using this functionality requires that your webhook endpoint verify the message signature.
            For information about implementing this functionality, see <</developer-guides/signature-verification, Signature Verification>>.
          maxLength: 50
          minLength: 20
          type: string
        url:
          description: URL of your webhook endpoint.
          maxLength: 255
          minLength: 1
          type: string
        use_mtls:
          default: false
          description: Set to `true` to use MTLS for the webhook.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
    webhook_ping_model:
      properties:
        pings:
          description: Array of ping requests to your webhook endpoint.
          items:
            $ref: '#/components/schemas/echo_ping_request'
          type: array
      required:
        - pings
      type: object
    webhook_request_model:
      properties:
        active:
          default: true
          description: Indicates whether the webhook is active.
          type: boolean
        config:
          $ref: '#/components/schemas/webhook_config_model'
        events:
          description: |-
            Specifies the types of events for which notifications are sent.

            The wildcard character `\*` indicates that you receive all webhook notifications, or all notifications of a specified category.
            For example, `\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.

            *NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.
            For example, you cannot subscribe to `cardtransition.fulfillment.\*` events, but you can subscribe to `cardtransition.*`.
          items:
            type: string
          type: array
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
        token:
          description: Unique identifier of the webhook.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    webhook_response_model:
      properties:
        active:
          default: true
          description: |-
            Indicates whether the webhook is active.
            This field is returned if you included it in your webhook.
          type: boolean
        config:
          $ref: '#/components/schemas/webhook_config_model'
        created_time:
          description: Date and time when the webhook event was created, in UTC.
          format: date-time
          type: string
        events:
          description: |-
            Specifies the types of events for which notifications are sent.

            The wildcard character `\*` indicates that you receive all webhook notifications, or all notifications of a specified category.
            For example, `\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.

            *NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.
            For example, you cannot subscribe to `cardtransition.fulfillment.\*` events, but you can subscribe to `cardtransition.*`.
          items:
            type: string
          type: array
        last_modified_time:
          description: Date and time when the associated object was last modified,
            in UTC.
          format: date-time
          type: string
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
        token:
          description: Unique identifier of the webhook.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    withdrawal_request_model:
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        amount:
          type: number
        card_acceptor:
          $ref: '#/components/schemas/card_acceptor_model'
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: '#/components/schemas/webhook'
      required:
        - amount
        - card_token
        - mid
      type: object
    xpay_push_tokenize_request_data:
      description: Contains details about a card tokenization push request.
      properties:
        card_type:
          description: Specifies the type of card.
          type: string
        display_name:
          description: |-
            Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).
            `Visa 5678`, for example.
          type: string
        extra_provision_payload:
          description: Encrypted card or cardholder details.
          type: string
        last_digits:
          description: Last four digits of the primary account number of the physical
            or virtual card.
          type: string
        network:
          description: Specifies the card network of the physical or virtual card.
          type: string
        token_service_provider:
          description: Specifies the network that provides the digital wallet token
            service.
          type: string
      type: object