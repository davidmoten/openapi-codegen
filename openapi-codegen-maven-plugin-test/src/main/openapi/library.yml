openapi: 3.0.0
info:

  version: 1.0

  title: Library Demo

  description: Library

paths:
  /user:

    post:
      description: Creates a new user
      requestBody:
        description: Defines a new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: created
        default:
          $ref: '#/components/responses/Error'
          
    get:
      description: List users page by page, filtered by search if present
      parameters:
      - in: query
        name: search
        required: false
        schema:
          type: string
          minLength: 2
      - in: query
        name: continuationToken
        required: false
        schema:
          $ref: '#/components/schemas/ContinuationToken'       
      responses:
        '200':
          description: list of users with token to use for next page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPage'

  /user/{id}:

    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
        minLength: 1

    get:
      description: Gets user details
      responses:
        '200':
          description: user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/Error'

    put:
      description: Updates a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: updated
        default:
          $ref: '#/components/responses/Error'

    delete:
      description: Deletes a user (logically)
      responses:
        '204':
          description: deleted
        default:
          $ref: '#/components/responses/Error'

components:

  schemas:

    User:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: string
        email:
          type: string
          minLength: 3
        mobile:
          type: string
          pattern: '[\+][0-9]+'
      required:
      - firstName
      - lastName
      - email
      
    UserId:
      type: string
      minLength: 1
      maxLength: 255
      
    ContinuationToken:
      type: string
      minLength: 1
      maxLength: 1600      
            
    UserWithId:
      allOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/UserId'
      
    UsersPage:
      type: object
      properties:
        users: 
          type: array
          items:
            $ref: '#/components/schemas/User'
        continuationToken:
          $ref: '#/components/schemas/ContinuationToken'
      required: [users]
        
  responses:

    Error:
      description: an error occurred, just the HTTP status code returned
      